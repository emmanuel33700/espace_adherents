import { SimpleChange, EventEmitter, OnChanges } from '@angular/core';
import { Grid } from './lib/grid';
import { DataSource } from './lib/data-source/data-source';
import { Row } from './lib/data-set/row';
import * as ɵngcc0 from '@angular/core';
export declare class Ng2SmartTableComponent implements OnChanges {
    source: any;
    settings: Object;
    rowSelect: EventEmitter<any>;
    userRowSelect: EventEmitter<any>;
    delete: EventEmitter<any>;
    edit: EventEmitter<any>;
    create: EventEmitter<any>;
    custom: EventEmitter<any>;
    deleteConfirm: EventEmitter<any>;
    editConfirm: EventEmitter<any>;
    createConfirm: EventEmitter<any>;
    rowHover: EventEmitter<any>;
    tableClass: string;
    tableId: string;
    perPageSelect: any;
    isHideHeader: boolean;
    isHideSubHeader: boolean;
    isPagerDisplay: boolean;
    rowClassFunction: Function;
    grid: Grid;
    defaultSettings: Object;
    isAllSelected: boolean;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    editRowSelect(row: Row): void;
    onUserSelectRow(row: Row): void;
    onRowHover(row: Row): void;
    multipleSelectRow(row: Row): void;
    onSelectAllRows($event: any): void;
    onSelectRow(row: Row): void;
    onMultipleSelectRow(row: Row): void;
    initGrid(): void;
    prepareSource(): DataSource;
    prepareSettings(): Object;
    changePage($event: any): void;
    sort($event: any): void;
    filter($event: any): void;
    private resetAllSelector;
    private emitUserSelectRow;
    private emitSelectRow;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Ng2SmartTableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Ng2SmartTableComponent, "ng2-smart-table", never, { "settings": "settings"; "source": "source"; }, { "rowSelect": "rowSelect"; "userRowSelect": "userRowSelect"; "delete": "delete"; "edit": "edit"; "create": "create"; "custom": "custom"; "deleteConfirm": "deleteConfirm"; "editConfirm": "editConfirm"; "createConfirm": "createConfirm"; "rowHover": "rowHover"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLXNtYXJ0LXRhYmxlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZzItc21hcnQtdGFibGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMENBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2ltcGxlQ2hhbmdlLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR3JpZCB9IGZyb20gJy4vbGliL2dyaWQnO1xuaW1wb3J0IHsgRGF0YVNvdXJjZSB9IGZyb20gJy4vbGliL2RhdGEtc291cmNlL2RhdGEtc291cmNlJztcbmltcG9ydCB7IFJvdyB9IGZyb20gJy4vbGliL2RhdGEtc2V0L3Jvdyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZzJTbWFydFRhYmxlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBzb3VyY2U6IGFueTtcbiAgICBzZXR0aW5nczogT2JqZWN0O1xuICAgIHJvd1NlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdXNlclJvd1NlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVsZXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBlZGl0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjcmVhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGN1c3RvbTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVsZXRlQ29uZmlybTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZWRpdENvbmZpcm06IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNyZWF0ZUNvbmZpcm06IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHJvd0hvdmVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0YWJsZUNsYXNzOiBzdHJpbmc7XG4gICAgdGFibGVJZDogc3RyaW5nO1xuICAgIHBlclBhZ2VTZWxlY3Q6IGFueTtcbiAgICBpc0hpZGVIZWFkZXI6IGJvb2xlYW47XG4gICAgaXNIaWRlU3ViSGVhZGVyOiBib29sZWFuO1xuICAgIGlzUGFnZXJEaXNwbGF5OiBib29sZWFuO1xuICAgIHJvd0NsYXNzRnVuY3Rpb246IEZ1bmN0aW9uO1xuICAgIGdyaWQ6IEdyaWQ7XG4gICAgZGVmYXVsdFNldHRpbmdzOiBPYmplY3Q7XG4gICAgaXNBbGxTZWxlY3RlZDogYm9vbGVhbjtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiB7XG4gICAgICAgIFtwcm9wZXJ0eU5hbWU6IHN0cmluZ106IFNpbXBsZUNoYW5nZTtcbiAgICB9KTogdm9pZDtcbiAgICBlZGl0Um93U2VsZWN0KHJvdzogUm93KTogdm9pZDtcbiAgICBvblVzZXJTZWxlY3RSb3cocm93OiBSb3cpOiB2b2lkO1xuICAgIG9uUm93SG92ZXIocm93OiBSb3cpOiB2b2lkO1xuICAgIG11bHRpcGxlU2VsZWN0Um93KHJvdzogUm93KTogdm9pZDtcbiAgICBvblNlbGVjdEFsbFJvd3MoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uU2VsZWN0Um93KHJvdzogUm93KTogdm9pZDtcbiAgICBvbk11bHRpcGxlU2VsZWN0Um93KHJvdzogUm93KTogdm9pZDtcbiAgICBpbml0R3JpZCgpOiB2b2lkO1xuICAgIHByZXBhcmVTb3VyY2UoKTogRGF0YVNvdXJjZTtcbiAgICBwcmVwYXJlU2V0dGluZ3MoKTogT2JqZWN0O1xuICAgIGNoYW5nZVBhZ2UoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNvcnQoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGZpbHRlcigkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZXNldEFsbFNlbGVjdG9yO1xuICAgIHByaXZhdGUgZW1pdFVzZXJTZWxlY3RSb3c7XG4gICAgcHJpdmF0ZSBlbWl0U2VsZWN0Um93O1xufVxuIl19