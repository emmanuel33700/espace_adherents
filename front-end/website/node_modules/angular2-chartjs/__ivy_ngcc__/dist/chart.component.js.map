{"version":3,"file":"chart.component.js","sources":["chart.component.js"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCM,AAOA;;;;;;;;;;;;;;;;;;;;;;;;oBAQA","sourcesContent":["\"use strict\";\nvar core_1 = require('@angular/core');\nvar ChartComponent = (function () {\n    function ChartComponent(elementRef) {\n        this.elementRef = elementRef;\n    }\n    ChartComponent.prototype.ngOnInit = function () {\n        this.create();\n    };\n    ChartComponent.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (this.chart) {\n            if (changes['type'] || changes['options']) {\n                this.create();\n            }\n            else if (changes['data']) {\n                var currentValue_1 = changes['data'].currentValue;\n                ['datasets', 'labels', 'xLabels', 'yLabels'].forEach(function (property) {\n                    _this.chart.data[property] = currentValue_1[property];\n                });\n                this.chart.update();\n            }\n        }\n    };\n    ChartComponent.prototype.create = function () {\n        if (this.canvas) {\n            this.elementRef.nativeElement.removeChild(this.canvas);\n        }\n        this.canvas = document.createElement('canvas');\n        this.elementRef.nativeElement.appendChild(this.canvas);\n        this.chart = new Chart(this.canvas, {\n            type: this.type,\n            data: this.data,\n            options: this.options\n        });\n    };\n    ChartComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'chart',\n                    template: '',\n                    styles: [':host { display: block; }']\n                },] },\n    ];\n    ChartComponent.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n    ]; };\n    ChartComponent.propDecorators = {\n        'type': [{ type: core_1.Input },],\n        'data': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n    };\n    return ChartComponent;\n}());\nexports.ChartComponent = ChartComponent;\n"]}