{"version":3,"file":"ng-toggle.js","sources":["../../src/toggle-label.ts","../../src/toggle.ts","../../src/toggle-accessor.ts","../../src/index.ts","../../src/ng-toggle.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, ElementRef, Input, TemplateRef} from '@angular/core';\n\n/**\n * The ToggleLabel directive allows you to customize the label for the \"On\" and \"Off\" states,\n * allowing for more robust and complex displays.\n * This directive must be used in conjunction with a ng-template.\n */\n@Directive({selector: 'ng-template[ngToggleLabel]'})\nexport class NgToggleLabel {\n  /**\n   * Determines which state the label will be used.\n   */\n  @Input() forLabel: 'on'|'off';\n\n  constructor(public templateRef: TemplateRef<any>, private elRef: ElementRef) {}\n\n  get element(): ElementRef {\n    return this.elRef;\n  }\n}\n","import {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  NgZone,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgToggleLabel} from './toggle-label';\n\n/**\n * The Toggle directive allows for standalone or checkbox-enabled switch toggling via a UI element.\n * The toggle is styled using Bootstrap v4+ classes.\n * Accessibility implemented according to\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role\n */\n@Component({\n  selector: 'ng-toggle',\n  template: `\n    <span #container class=\"ng-toggle-container\" [style.marginLeft]=\"marginLeft\">\n      <span #on class=\"ng-toggle-on btn btn-{{onColor}}\" [class.btn-lg]=\"largeButton\"\n            [class.btn-sm]=\"smallButton\" [class.disabled]=\"disabled\">\n          <ng-template [ngTemplateOutlet]=\"onLabel?.templateRef\"></ng-template>\n          <ng-container *ngIf=\"!onLabel\">{{onText}}</ng-container>\n      </span>\n      <span #handle class=\"ng-toggle-handle btn\" [class.btn-lg]=\"largeButton\"\n            [class.btn-sm]=\"smallButton\" [class.disabled]=\"disabled\"\n            [class.btn-light]=\"!handleDark\" [class.btn-dark]=\"handleDark\">&nbsp;</span>\n      <span #off class=\"ng-toggle-off btn btn-{{offColor}}\" [class.btn-lg]=\"largeButton\"\n            [class.btn-sm]=\"smallButton\" [class.disabled]=\"disabled\">\n        <ng-template [ngTemplateOutlet]=\"offLabel?.templateRef\"></ng-template>\n        <ng-container *ngIf=\"!offLabel\">{{offText}}</ng-container>\n      </span>\n    </span>\n    <ng-content></ng-content>\n    `,\n  styleUrls: ['./toggle.scss'],\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgToggle implements AfterViewInit, AfterContentInit, AfterViewChecked, OnChanges {\n  /**\n   * Display text when toggled in the \"On\" position\n   */\n  @Input() onText: string = 'On';\n  /**\n   * Display text when toggled in the \"Off\" position\n   */\n  @Input() offText: string = 'Off';\n  /**\n   * Bootstrap color scheme when toggled in the \"On\" position (i.e. \"primary\" translates to \"btn-primary\")\n   */\n  @Input() onColor: string = 'primary';\n  /**\n   * Bootstrap color scheme when toggled in the \"Off\" position (i.e. \"primary\" translates to \"btn-primary\")\n   */\n  @Input() offColor: string = 'secondary';\n  /**\n   * Button size to display the toggle\n   */\n  @Input() size: 'sm'|'lg'|'' = '';\n  /**\n   * Whether the toggle is disabled or not\n   */\n  @Input() @HostBinding('class.disabled') @HostBinding('class.ng-toggle-disabled') disabled: boolean = false;\n\n  /**\n   * An event fired when the user causes a change.\n   * The payload of the event is the currently selected value.\n   */\n  @Output() valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostBinding('class.btn') btnClass: boolean = true;\n  @Input('tabindex') @HostBinding('attr.tabindex') tabindex: number = 0;\n  @Input('role') @HostBinding('attr.role') role = 'checkbox';\n\n  width: number = 0;\n  handleWidth: number = 0;\n\n  @ViewChild('container', {static: true}) containerElement: ElementRef;\n  @ViewChild('on', {static: true}) onElement: ElementRef;\n  @ViewChild('off', {static: true}) offElement: ElementRef;\n  @ViewChild('handle', {static: true}) handleElement: ElementRef;\n  @ContentChildren(NgToggleLabel) labelElements: QueryList<NgToggleLabel>;\n  onLabel: NgToggleLabel;\n  offLabel: NgToggleLabel;\n\n  private _animate: boolean = true;\n  private _innerAnimate: boolean = true;\n  private _innerState: boolean = false;\n  private _innerWidth: string|number = 'auto';\n  private _disableInitialAnimation: boolean = false;\n\n  private _dragStart: any = null;\n  private _dragEnd: any = null;\n  private _initialized: boolean = false;\n  private _hidden: boolean = false;\n\n  /**\n   * Optional. Enable/Disable the initial transition animation. May prevent unwanted animation display.\n   */\n  @Input('disableInitialAnimation')\n  set outerAnimate(value: boolean) {\n    this._disableInitialAnimation = value;\n  }\n\n  @Input()\n  set value(value: boolean) {\n    this.setState(value);\n  }\n\n  get value(): boolean {\n    return this._innerState;\n  }\n\n  constructor(private ngZone: NgZone, private element: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    this.calculateWidth();\n    this._initialized = true;\n    this.ngZone.run(() => setTimeout(() => this._disableInitialAnimation = false));\n  }\n\n  ngAfterViewChecked(): void {\n    const hidden = this.element.nativeElement.offsetParent === null;\n    if ((!this._initialized || this.width === 0) && this._hidden !== hidden) {\n      this._initialized = false;\n      this.calculateWidth();\n      this._initialized = true;\n    }\n    this._hidden = hidden;\n  }\n\n  ngAfterContentInit(): void {\n    const onElement: NgToggleLabel =\n        this.labelElements.find((item: NgToggleLabel) => item.forLabel.toLowerCase() === 'on');\n    const offElement: NgToggleLabel =\n        this.labelElements.find((item: NgToggleLabel) => item.forLabel.toLowerCase() === 'off');\n\n    if (onElement) {\n      this.onLabel = onElement;\n    }\n    if (offElement) {\n      this.offLabel = offElement;\n    }\n    if (onElement || offElement) {\n      this.calculateWidth(true);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('onText' in changes || 'offText' in changes || 'size' in changes) {\n      this._initialized = false;\n      this.calculateWidth(this._initialized);\n      this._initialized = true;\n    }\n  }\n\n  @HostBinding('class.btn-lg')\n  @HostBinding('class.ng-toggle-lg')\n  get largeButton(): boolean {\n    return this.size === 'lg';\n  }\n\n  @HostBinding('class.btn-sm')\n  @HostBinding('class.ng-toggle-sm')\n  get smallButton(): boolean {\n    return this.size === 'sm';\n  }\n\n  get handleDark(): boolean {\n    return (this.value && this.onColor === 'light') || (!this.value && this.offColor === 'light');\n  }\n\n  @HostBinding('class.ng-toggle-indeterminate')\n  get indeterminate(): boolean {\n    return this._innerState === null || typeof this._innerState === 'undefined';\n  }\n\n  @HostBinding('class.ng-toggled-on')\n  get toggledOn(): boolean {\n    return this.innerState === true;\n  }\n\n  @HostBinding('class.ng-toggled-off')\n  get toggledOff(): boolean {\n    return this.innerState === false;\n  }\n\n  get innerState(): boolean {\n    return this._innerState;\n  }\n\n  @HostBinding('attr.aria-checked')\n  get ariaCheckedValue(): string {\n    if (this.indeterminate) {\n      return 'mixed';\n    }\n    return this.value ? 'true' : 'false';\n  }\n\n  @HostBinding('class.ng-toggle-animate')\n  get animate(): boolean {\n    return this._animate && (!this._disableInitialAnimation || this._initialized && !this._disableInitialAnimation);\n  }\n\n  get marginLeft(): string {\n    let margin = 0;\n    if (!this._initialized) {\n    } else if (this.indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n      margin = -(this.width / 2);\n    } else if (this._dragEnd) {\n      margin = this._dragEnd;\n    } else if (!this._innerState) {\n      margin = -this.width;\n    }\n\n    return margin + 'px';\n  }\n\n  @HostListener('window:resize')\n  handleResize() {\n    this._initialized = false;\n    this.calculateWidth(true);\n    this._initialized = true;\n  }\n\n  @HostListener('click')\n  handleClick() {\n    if (!this.disabled && !this._dragEnd) {\n      this.setState(!this._innerState);\n    } else if (this._dragEnd) {\n      this._dragEnd = null;\n    }\n  }\n\n  @HostListener('touchstart', ['$event'])\n  onTouchStart(event: any) {\n    this.onDragStart(event);\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: any) {\n    this.onDragStart(event);\n  }\n\n  @HostListener('touchmove', ['$event'])\n  onTouchMove(event: any) {\n    this.onDragMove(event);\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMouseMove(event: any) {\n    this.onDragMove(event);\n  }\n\n  @HostListener('touchend', ['$event'])\n  onTouchEnd(event: any) {\n    this.onDragEnd(event, true);\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onMouseUp(event: any) {\n    this.onDragEnd(event);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  onMouseLeave(event: any) {\n    this.onDragEnd(event, true);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (!event.key || this.disabled) {\n      return;\n    }\n    switch (event.key) {\n      case 'Left':\n      case 'ArrowLeft':\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.setState(false);\n        break;\n      case 'Right':\n      case 'ArrowRight':\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.setState(true);\n        break;\n      case 'Spacebar':\n      case ' ':\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.setState(!this.value);\n    }\n  }\n\n  private onDragStart(event: any): void {\n    if (event.target === this.handle$) {\n      if (this._dragStart || this.disabled) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      this._dragStart = (event.pageX || event.touches[0].pageX) - parseInt(this.container$.style.marginLeft, 10);\n      if (this._animate) {\n        this._animate = !this._animate;\n      }\n    }\n  }\n\n  private onDragMove(event: any): void {\n    if (this._dragStart) {\n      event.preventDefault();\n      let difference = (event.pageX || event.touches[0].pageX) - this._dragStart;\n      if (difference < -(Number(this.width)) || difference > 0) {\n        return;\n      }\n      this._dragEnd = difference;\n    }\n  }\n\n  private onDragEnd(event: any, clearDragEnd: boolean = false): void {\n    if (this._dragStart) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this._dragEnd) {\n        this.setState(this._dragEnd > -(Number(this.width) / 2));\n      }\n      this._dragStart = null;\n      if (clearDragEnd) {\n        this._dragEnd = null;\n      }\n      if (this._innerAnimate && !this._animate) {\n        this._animate = true;\n      }\n    }\n  }\n\n  private calculateWidth(disableAnimation: boolean = false) {\n    if (disableAnimation && this._innerAnimate) {\n      this._animate = false;\n    }\n\n    const initialized = <boolean>this._initialized;\n    if (!initialized) {\n      this.container$.style.width = 'auto';\n      this.element$.style.width = 'auto';\n    }\n    this.on$.style.width = 'auto';\n    this.off$.style.width = 'auto';\n    setTimeout(() => {\n      let width = this._innerWidth;\n      if (this._innerWidth === 'auto') {\n        width = Math.max(this.on$.offsetWidth, this.off$.offsetWidth);\n      }\n\n      this.handleWidth = this.handle$.offsetWidth;\n      this.width = Number(width);\n\n      if (!initialized) {\n        this.container$.style.width = ((this.width * 2) + this.handleWidth) + 'px';\n        this.element$.style.width = (this.width + this.handleWidth) + 'px';\n      }\n\n      this.ngZone.run(() => {\n        this.on$.style.width = this.width + 'px';\n        this.off$.style.width = this.width + 'px';\n        setTimeout(() => {\n          if (disableAnimation && this._innerAnimate) {\n            this._animate = true;\n          }\n        });\n      });\n    });\n  }\n\n  private setState(value: boolean) {\n    if (value !== this._innerState) {\n      this._innerState = value;\n      this.valueChange.emit(this._innerState);\n    }\n  }\n\n  private get element$(): HTMLElement {\n    return this.element.nativeElement;\n  }\n\n  private get on$(): HTMLElement {\n    return this.onElement.nativeElement;\n  }\n\n  private get off$(): HTMLElement {\n    return this.offElement.nativeElement;\n  }\n\n  private get handle$(): HTMLElement {\n    return this.handleElement.nativeElement;\n  }\n\n  private get container$(): HTMLElement {\n    return this.containerElement.nativeElement;\n  }\n}\n","import {Directive, forwardRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {NgToggle} from './toggle';\n\n@Directive({\n  selector: 'ng-toggle',\n  host: {'(change)': 'onChange($event)', '(touch)': 'onTouched()'},\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgToggleAccessor), multi: true}]\n})\nexport class NgToggleAccessor implements ControlValueAccessor, OnDestroy {\n  private _onChange: (_: any) => void;\n  private _onTouched: () => void;\n  private _subscription: Subscription;\n\n  constructor(private _host: NgToggle) {\n    this._subscription = this._host.valueChange.subscribe(value => this.onChange(value));\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n  }\n\n  onChange(_: any) {\n    if (this._onChange) {\n      this._onChange(this._host.value);\n    }\n  }\n\n  onTouched() {\n    if (this._onTouched) {\n      this._onTouched();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this._host.disabled = isDisabled;\n  }\n\n  writeValue(obj: any): void {\n    if (typeof obj === 'boolean' || obj === null) {\n      this._host.value = obj;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgToggle} from './toggle';\nimport {NgToggleAccessor} from './toggle-accessor';\nimport {NgToggleLabel} from './toggle-label';\n\nexport {NgToggle} from './toggle';\nexport {NgToggleAccessor} from './toggle-accessor';\nexport {NgToggleLabel} from './toggle-label';\n\nconst declarations = [\n  NgToggle,\n  NgToggleAccessor,\n  NgToggleLabel,\n];\n\n@NgModule({imports: [CommonModule], exports: declarations, declarations: declarations})\nexport class NgToggleModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}