import { EventEmitter, SimpleChanges, ElementRef, OnChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class HeatMapCellComponent implements OnChanges {
    fill: any;
    x: any;
    y: any;
    width: any;
    height: any;
    data: any;
    label: any;
    gradient: boolean;
    animations: boolean;
    select: EventEmitter<any>;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    element: HTMLElement;
    transform: string;
    activeRange: any[];
    startOpacity: number;
    gradientId: string;
    gradientUrl: string;
    gradientStops: any[];
    constructor(element: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    getGradientStops(): {
        offset: number;
        color: any;
        opacity: number;
    }[];
    loadAnimation(): void;
    animateToCurrentForm(): void;
    onClick(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeatMapCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HeatMapCellComponent, "g[ngx-charts-heat-map-cell]", never, { "gradient": "gradient"; "animations": "animations"; "fill": "fill"; "x": "x"; "y": "y"; "width": "width"; "height": "height"; "data": "data"; "label": "label"; }, { "select": "select"; "activate": "activate"; "deactivate": "deactivate"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhdC1tYXAtY2VsbC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiaGVhdC1tYXAtY2VsbC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgU2ltcGxlQ2hhbmdlcywgRWxlbWVudFJlZiwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBIZWF0TWFwQ2VsbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgZmlsbDogYW55O1xuICAgIHg6IGFueTtcbiAgICB5OiBhbnk7XG4gICAgd2lkdGg6IGFueTtcbiAgICBoZWlnaHQ6IGFueTtcbiAgICBkYXRhOiBhbnk7XG4gICAgbGFiZWw6IGFueTtcbiAgICBncmFkaWVudDogYm9vbGVhbjtcbiAgICBhbmltYXRpb25zOiBib29sZWFuO1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICAgIHRyYW5zZm9ybTogc3RyaW5nO1xuICAgIGFjdGl2ZVJhbmdlOiBhbnlbXTtcbiAgICBzdGFydE9wYWNpdHk6IG51bWJlcjtcbiAgICBncmFkaWVudElkOiBzdHJpbmc7XG4gICAgZ3JhZGllbnRVcmw6IHN0cmluZztcbiAgICBncmFkaWVudFN0b3BzOiBhbnlbXTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBnZXRHcmFkaWVudFN0b3BzKCk6IHtcbiAgICAgICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgICAgIGNvbG9yOiBhbnk7XG4gICAgICAgIG9wYWNpdHk6IG51bWJlcjtcbiAgICB9W107XG4gICAgbG9hZEFuaW1hdGlvbigpOiB2b2lkO1xuICAgIGFuaW1hdGVUb0N1cnJlbnRGb3JtKCk6IHZvaWQ7XG4gICAgb25DbGljaygpOiB2b2lkO1xuICAgIG9uTW91c2VFbnRlcigpOiB2b2lkO1xuICAgIG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xufVxuIl19