import { TemplateRef, EventEmitter } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import { DataItem } from '../models/chart-data.model';
import * as ɵngcc0 from '@angular/core';
export declare class PieGridComponent extends BaseChartComponent {
    designatedTotal: number;
    tooltipDisabled: boolean;
    tooltipText: (o: any) => any;
    label: string;
    minWidth: number;
    activeEntries: any[];
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    dims: ViewDimensions;
    data: any[];
    transform: string;
    series: any[];
    domain: any[];
    colorScale: ColorHelper;
    margin: number[];
    tooltipTemplate: TemplateRef<any>;
    update(): void;
    defaultTooltipText({ data }: {
        data: any;
    }): string;
    getDomain(): any[];
    getSeries(): any[];
    getTotal(): any;
    onClick(data: DataItem): void;
    setColors(): void;
    onActivate(item: any, fromLegend?: boolean): void;
    onDeactivate(item: any, fromLegend?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PieGridComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PieGridComponent, "ngx-charts-pie-grid", never, { "tooltipDisabled": "tooltipDisabled"; "label": "label"; "minWidth": "minWidth"; "activeEntries": "activeEntries"; "tooltipText": "tooltipText"; "designatedTotal": "designatedTotal"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWdyaWQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBpZS1ncmlkLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmlld0RpbWVuc2lvbnMgfSBmcm9tICcuLi9jb21tb24vdmlldy1kaW1lbnNpb25zLmhlbHBlcic7XG5pbXBvcnQgeyBDb2xvckhlbHBlciB9IGZyb20gJy4uL2NvbW1vbi9jb2xvci5oZWxwZXInO1xuaW1wb3J0IHsgQmFzZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vY29tbW9uL2Jhc2UtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IERhdGFJdGVtIH0gZnJvbSAnLi4vbW9kZWxzL2NoYXJ0LWRhdGEubW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGllR3JpZENvbXBvbmVudCBleHRlbmRzIEJhc2VDaGFydENvbXBvbmVudCB7XG4gICAgZGVzaWduYXRlZFRvdGFsOiBudW1iZXI7XG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xuICAgIHRvb2x0aXBUZXh0OiAobzogYW55KSA9PiBhbnk7XG4gICAgbGFiZWw6IHN0cmluZztcbiAgICBtaW5XaWR0aDogbnVtYmVyO1xuICAgIGFjdGl2ZUVudHJpZXM6IGFueVtdO1xuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkaW1zOiBWaWV3RGltZW5zaW9ucztcbiAgICBkYXRhOiBhbnlbXTtcbiAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICBzZXJpZXM6IGFueVtdO1xuICAgIGRvbWFpbjogYW55W107XG4gICAgY29sb3JTY2FsZTogQ29sb3JIZWxwZXI7XG4gICAgbWFyZ2luOiBudW1iZXJbXTtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdXBkYXRlKCk6IHZvaWQ7XG4gICAgZGVmYXVsdFRvb2x0aXBUZXh0KHsgZGF0YSB9OiB7XG4gICAgICAgIGRhdGE6IGFueTtcbiAgICB9KTogc3RyaW5nO1xuICAgIGdldERvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRTZXJpZXMoKTogYW55W107XG4gICAgZ2V0VG90YWwoKTogYW55O1xuICAgIG9uQ2xpY2soZGF0YTogRGF0YUl0ZW0pOiB2b2lkO1xuICAgIHNldENvbG9ycygpOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoaXRlbTogYW55LCBmcm9tTGVnZW5kPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgb25EZWFjdGl2YXRlKGl0ZW06IGFueSwgZnJvbUxlZ2VuZD86IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19