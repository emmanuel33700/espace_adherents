import { EventEmitter, ElementRef, SimpleChanges, OnChanges, ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class CardComponent implements OnChanges, OnDestroy {
    private cd;
    private zone;
    color: any;
    bandColor: any;
    textColor: any;
    x: any;
    y: any;
    width: any;
    height: any;
    label: any;
    data: any;
    medianSize: number;
    valueFormatting: any;
    labelFormatting: any;
    animations: boolean;
    select: EventEmitter<any>;
    textEl: ElementRef;
    element: HTMLElement;
    value: string;
    transform: string;
    formattedLabel: string;
    cardWidth: number;
    cardHeight: number;
    textWidth: number;
    textFontSize: number;
    textTransform: string;
    initialized: boolean;
    animationReq: any;
    bandHeight: number;
    transformBand: string;
    textPadding: number[];
    labelFontSize: number;
    bandPath: string;
    constructor(element: ElementRef, cd: ChangeDetectorRef, zone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    update(): void;
    paddedValue(value: string): string;
    startCount(): void;
    scaleText(): void;
    setPadding(): void;
    onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardComponent, "g[ngx-charts-card]", never, { "animations": "animations"; "label": "label"; "color": "color"; "bandColor": "bandColor"; "textColor": "textColor"; "x": "x"; "y": "y"; "width": "width"; "height": "height"; "data": "data"; "medianSize": "medianSize"; "valueFormatting": "valueFormatting"; "labelFormatting": "labelFormatting"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmLCBTaW1wbGVDaGFuZ2VzLCBPbkNoYW5nZXMsIENoYW5nZURldGVjdG9yUmVmLCBOZ1pvbmUsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FyZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGNkO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBjb2xvcjogYW55O1xuICAgIGJhbmRDb2xvcjogYW55O1xuICAgIHRleHRDb2xvcjogYW55O1xuICAgIHg6IGFueTtcbiAgICB5OiBhbnk7XG4gICAgd2lkdGg6IGFueTtcbiAgICBoZWlnaHQ6IGFueTtcbiAgICBsYWJlbDogYW55O1xuICAgIGRhdGE6IGFueTtcbiAgICBtZWRpYW5TaXplOiBudW1iZXI7XG4gICAgdmFsdWVGb3JtYXR0aW5nOiBhbnk7XG4gICAgbGFiZWxGb3JtYXR0aW5nOiBhbnk7XG4gICAgYW5pbWF0aW9uczogYm9vbGVhbjtcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHRleHRFbDogRWxlbWVudFJlZjtcbiAgICBlbGVtZW50OiBIVE1MRWxlbWVudDtcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIHRyYW5zZm9ybTogc3RyaW5nO1xuICAgIGZvcm1hdHRlZExhYmVsOiBzdHJpbmc7XG4gICAgY2FyZFdpZHRoOiBudW1iZXI7XG4gICAgY2FyZEhlaWdodDogbnVtYmVyO1xuICAgIHRleHRXaWR0aDogbnVtYmVyO1xuICAgIHRleHRGb250U2l6ZTogbnVtYmVyO1xuICAgIHRleHRUcmFuc2Zvcm06IHN0cmluZztcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcbiAgICBhbmltYXRpb25SZXE6IGFueTtcbiAgICBiYW5kSGVpZ2h0OiBudW1iZXI7XG4gICAgdHJhbnNmb3JtQmFuZDogc3RyaW5nO1xuICAgIHRleHRQYWRkaW5nOiBudW1iZXJbXTtcbiAgICBsYWJlbEZvbnRTaXplOiBudW1iZXI7XG4gICAgYmFuZFBhdGg6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsIHpvbmU6IE5nWm9uZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICB1cGRhdGUoKTogdm9pZDtcbiAgICBwYWRkZWRWYWx1ZSh2YWx1ZTogc3RyaW5nKTogc3RyaW5nO1xuICAgIHN0YXJ0Q291bnQoKTogdm9pZDtcbiAgICBzY2FsZVRleHQoKTogdm9pZDtcbiAgICBzZXRQYWRkaW5nKCk6IHZvaWQ7XG4gICAgb25DbGljaygpOiB2b2lkO1xufVxuIl19