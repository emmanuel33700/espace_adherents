import { ElementRef, AfterViewInit, EventEmitter, TemplateRef } from '@angular/core';
import { BaseChartComponent } from '../common/base-chart.component';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import * as ɵngcc0 from '@angular/core';
export declare class GaugeComponent extends BaseChartComponent implements AfterViewInit {
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    min: number;
    max: number;
    textValue: string;
    units: string;
    bigSegments: number;
    smallSegments: number;
    results: any[];
    showAxis: boolean;
    startAngle: number;
    angleSpan: number;
    activeEntries: any[];
    axisTickFormatting: any;
    tooltipDisabled: boolean;
    valueFormatting: (value: any) => string;
    showText: boolean;
    margin: any[];
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    textEl: ElementRef;
    dims: ViewDimensions;
    domain: any[];
    valueDomain: any;
    valueScale: any;
    colors: ColorHelper;
    transform: string;
    outerRadius: number;
    textRadius: number;
    resizeScale: number;
    rotation: string;
    textTransform: string;
    cornerRadius: number;
    arcs: any[];
    displayValue: string;
    legendOptions: any;
    ngAfterViewInit(): void;
    update(): void;
    getArcs(): any[];
    getDomain(): any[];
    getValueDomain(): any[];
    getValueScale(): any;
    getDisplayValue(): string;
    scaleText(repeat?: boolean): void;
    onClick(data: any): void;
    getLegendOptions(): any;
    setColors(): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
    isActive(entry: any): boolean;
    trackBy(index: any, item: any): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GaugeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GaugeComponent, "ngx-charts-gauge", never, { "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "min": "min"; "max": "max"; "bigSegments": "bigSegments"; "smallSegments": "smallSegments"; "showAxis": "showAxis"; "startAngle": "startAngle"; "angleSpan": "angleSpan"; "activeEntries": "activeEntries"; "tooltipDisabled": "tooltipDisabled"; "showText": "showText"; "margin": "margin"; "textValue": "textValue"; "units": "units"; "results": "results"; "axisTickFormatting": "axisTickFormatting"; "valueFormatting": "valueFormatting"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F1Z2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdhdWdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQsIEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWNoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcbmltcG9ydCB7IENvbG9ySGVscGVyIH0gZnJvbSAnLi4vY29tbW9uL2NvbG9yLmhlbHBlcic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHYXVnZUNvbXBvbmVudCBleHRlbmRzIEJhc2VDaGFydENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIGxlZ2VuZDogYm9vbGVhbjtcbiAgICBsZWdlbmRUaXRsZTogc3RyaW5nO1xuICAgIGxlZ2VuZFBvc2l0aW9uOiBzdHJpbmc7XG4gICAgbWluOiBudW1iZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgdGV4dFZhbHVlOiBzdHJpbmc7XG4gICAgdW5pdHM6IHN0cmluZztcbiAgICBiaWdTZWdtZW50czogbnVtYmVyO1xuICAgIHNtYWxsU2VnbWVudHM6IG51bWJlcjtcbiAgICByZXN1bHRzOiBhbnlbXTtcbiAgICBzaG93QXhpczogYm9vbGVhbjtcbiAgICBzdGFydEFuZ2xlOiBudW1iZXI7XG4gICAgYW5nbGVTcGFuOiBudW1iZXI7XG4gICAgYWN0aXZlRW50cmllczogYW55W107XG4gICAgYXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XG4gICAgdG9vbHRpcERpc2FibGVkOiBib29sZWFuO1xuICAgIHZhbHVlRm9ybWF0dGluZzogKHZhbHVlOiBhbnkpID0+IHN0cmluZztcbiAgICBzaG93VGV4dDogYm9vbGVhbjtcbiAgICBtYXJnaW46IGFueVtdO1xuICAgIGFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0b29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdGV4dEVsOiBFbGVtZW50UmVmO1xuICAgIGRpbXM6IFZpZXdEaW1lbnNpb25zO1xuICAgIGRvbWFpbjogYW55W107XG4gICAgdmFsdWVEb21haW46IGFueTtcbiAgICB2YWx1ZVNjYWxlOiBhbnk7XG4gICAgY29sb3JzOiBDb2xvckhlbHBlcjtcbiAgICB0cmFuc2Zvcm06IHN0cmluZztcbiAgICBvdXRlclJhZGl1czogbnVtYmVyO1xuICAgIHRleHRSYWRpdXM6IG51bWJlcjtcbiAgICByZXNpemVTY2FsZTogbnVtYmVyO1xuICAgIHJvdGF0aW9uOiBzdHJpbmc7XG4gICAgdGV4dFRyYW5zZm9ybTogc3RyaW5nO1xuICAgIGNvcm5lclJhZGl1czogbnVtYmVyO1xuICAgIGFyY3M6IGFueVtdO1xuICAgIGRpc3BsYXlWYWx1ZTogc3RyaW5nO1xuICAgIGxlZ2VuZE9wdGlvbnM6IGFueTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICB1cGRhdGUoKTogdm9pZDtcbiAgICBnZXRBcmNzKCk6IGFueVtdO1xuICAgIGdldERvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRWYWx1ZURvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRWYWx1ZVNjYWxlKCk6IGFueTtcbiAgICBnZXREaXNwbGF5VmFsdWUoKTogc3RyaW5nO1xuICAgIHNjYWxlVGV4dChyZXBlYXQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBvbkNsaWNrKGRhdGE6IGFueSk6IHZvaWQ7XG4gICAgZ2V0TGVnZW5kT3B0aW9ucygpOiBhbnk7XG4gICAgc2V0Q29sb3JzKCk6IHZvaWQ7XG4gICAgb25BY3RpdmF0ZShpdGVtOiBhbnkpOiB2b2lkO1xuICAgIG9uRGVhY3RpdmF0ZShpdGVtOiBhbnkpOiB2b2lkO1xuICAgIGlzQWN0aXZlKGVudHJ5OiBhbnkpOiBib29sZWFuO1xuICAgIHRyYWNrQnkoaW5kZXg6IGFueSwgaXRlbTogYW55KTogc3RyaW5nO1xufVxuIl19