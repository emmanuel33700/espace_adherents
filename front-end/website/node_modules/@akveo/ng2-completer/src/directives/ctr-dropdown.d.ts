import { AfterViewInit, ElementRef, OnDestroy, NgZone } from "@angular/core";
import { CompleterItem } from "../components/completer-item";
import { CtrCompleter, CompleterDropdown } from "./ctr-completer";
import * as ɵngcc0 from '@angular/core';
export interface CtrRowElement {
    setHighlighted(selected: boolean): void;
    getNativeElement(): any;
    getDataItem(): CompleterItem | null;
}
export declare class CtrRowItem {
    row: CtrRowElement;
    index: number;
    constructor(row: CtrRowElement, index: number);
}
export declare class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {
    private completer;
    private el;
    private zone;
    private rows;
    private currHighlighted;
    private isScrollOn;
    private _rowMouseDown;
    constructor(completer: CtrCompleter, el: ElementRef, zone: NgZone);
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    onMouseDown(event: any): void;
    registerRow(row: CtrRowItem): void;
    unregisterRow(rowIndex: number): void;
    highlightRow(index: number | null): void;
    clear(): void;
    onSelected(item: CompleterItem | null): void;
    rowMouseDown(): void;
    selectCurrent(): void;
    nextRow(): void;
    prevRow(): void;
    private dropdownScrollTopTo;
    private dropdownRowTop;
    private dropdownHeight;
    private dropdownRowOffsetHeight;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CtrDropdown, [{ host: true; }, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CtrDropdown, "[ctrDropdown]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3RyLWRyb3Bkb3duLmQudHMiLCJzb3VyY2VzIjpbImN0ci1kcm9wZG93bi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIE5nWm9uZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb21wbGV0ZXJJdGVtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvY29tcGxldGVyLWl0ZW1cIjtcbmltcG9ydCB7IEN0ckNvbXBsZXRlciwgQ29tcGxldGVyRHJvcGRvd24gfSBmcm9tIFwiLi9jdHItY29tcGxldGVyXCI7XG5leHBvcnQgaW50ZXJmYWNlIEN0clJvd0VsZW1lbnQge1xuICAgIHNldEhpZ2hsaWdodGVkKHNlbGVjdGVkOiBib29sZWFuKTogdm9pZDtcbiAgICBnZXROYXRpdmVFbGVtZW50KCk6IGFueTtcbiAgICBnZXREYXRhSXRlbSgpOiBDb21wbGV0ZXJJdGVtIHwgbnVsbDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEN0clJvd0l0ZW0ge1xuICAgIHJvdzogQ3RyUm93RWxlbWVudDtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKHJvdzogQ3RyUm93RWxlbWVudCwgaW5kZXg6IG51bWJlcik7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDdHJEcm9wZG93biBpbXBsZW1lbnRzIENvbXBsZXRlckRyb3Bkb3duLCBPbkRlc3Ryb3ksIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgY29tcGxldGVyO1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgcm93cztcbiAgICBwcml2YXRlIGN1cnJIaWdobGlnaHRlZDtcbiAgICBwcml2YXRlIGlzU2Nyb2xsT247XG4gICAgcHJpdmF0ZSBfcm93TW91c2VEb3duO1xuICAgIGNvbnN0cnVjdG9yKGNvbXBsZXRlcjogQ3RyQ29tcGxldGVyLCBlbDogRWxlbWVudFJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG9uTW91c2VEb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyUm93KHJvdzogQ3RyUm93SXRlbSk6IHZvaWQ7XG4gICAgdW5yZWdpc3RlclJvdyhyb3dJbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBoaWdobGlnaHRSb3coaW5kZXg6IG51bWJlciB8IG51bGwpOiB2b2lkO1xuICAgIGNsZWFyKCk6IHZvaWQ7XG4gICAgb25TZWxlY3RlZChpdGVtOiBDb21wbGV0ZXJJdGVtIHwgbnVsbCk6IHZvaWQ7XG4gICAgcm93TW91c2VEb3duKCk6IHZvaWQ7XG4gICAgc2VsZWN0Q3VycmVudCgpOiB2b2lkO1xuICAgIG5leHRSb3coKTogdm9pZDtcbiAgICBwcmV2Um93KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBkcm9wZG93blNjcm9sbFRvcFRvO1xuICAgIHByaXZhdGUgZHJvcGRvd25Sb3dUb3A7XG4gICAgcHJpdmF0ZSBkcm9wZG93bkhlaWdodDtcbiAgICBwcml2YXRlIGRyb3Bkb3duUm93T2Zmc2V0SGVpZ2h0O1xufVxuIl19