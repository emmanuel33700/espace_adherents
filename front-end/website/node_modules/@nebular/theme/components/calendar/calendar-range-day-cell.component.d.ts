/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter } from '@angular/core';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../calendar-kit/model';
import { NbCalendarRange } from './calendar-range.component';
import { NbDateService } from '../calendar-kit/services/date.service';
import { NbBaseCalendarRangeCell } from './base-calendar-range-cell';
import * as ɵngcc0 from '@angular/core';
export declare class NbCalendarRangeDayCellComponent<D> extends NbBaseCalendarRangeCell<D> implements NbCalendarCell<D, NbCalendarRange<D>> {
    protected dateService: NbDateService<D>;
    date: D;
    selectedValue: NbCalendarRange<D>;
    visibleDate: D;
    min: D;
    max: D;
    filter: (D: any) => boolean;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    select: EventEmitter<D>;
    constructor(dateService: NbDateService<D>);
    get inRange(): boolean;
    get start(): boolean;
    get end(): boolean;
    rangeCellClass: boolean;
    dayCellClass: boolean;
    get today(): boolean;
    get boundingMonth(): boolean;
    get selected(): boolean;
    get empty(): boolean;
    get disabled(): boolean;
    get isLarge(): boolean;
    get day(): number;
    onClick(): void;
    protected smallerThanMin(): boolean;
    protected greaterThanMax(): boolean;
    protected dontFitFilter(): boolean;
    protected isInRange(date: D, { start, end }: NbCalendarRange<D>): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarRangeDayCellComponent<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarRangeDayCellComponent<any>, "nb-calendar-range-day-cell", never, { "size": "size"; "date": "date"; "selectedValue": "selectedValue"; "visibleDate": "visibleDate"; "min": "min"; "max": "max"; "filter": "filter"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItcmFuZ2UtZGF5LWNlbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhbGVuZGFyLXJhbmdlLWRheS1jZWxsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyQ2VsbCwgTmJDYWxlbmRhclNpemUsIE5iQ2FsZW5kYXJTaXplVmFsdWVzIH0gZnJvbSAnLi4vY2FsZW5kYXIta2l0L21vZGVsJztcbmltcG9ydCB7IE5iQ2FsZW5kYXJSYW5nZSB9IGZyb20gJy4vY2FsZW5kYXItcmFuZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IE5iRGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9jYWxlbmRhci1raXQvc2VydmljZXMvZGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IE5iQmFzZUNhbGVuZGFyUmFuZ2VDZWxsIH0gZnJvbSAnLi9iYXNlLWNhbGVuZGFyLXJhbmdlLWNlbGwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYWxlbmRhclJhbmdlRGF5Q2VsbENvbXBvbmVudDxEPiBleHRlbmRzIE5iQmFzZUNhbGVuZGFyUmFuZ2VDZWxsPEQ+IGltcGxlbWVudHMgTmJDYWxlbmRhckNlbGw8RCwgTmJDYWxlbmRhclJhbmdlPEQ+PiB7XG4gICAgcHJvdGVjdGVkIGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+O1xuICAgIGRhdGU6IEQ7XG4gICAgc2VsZWN0ZWRWYWx1ZTogTmJDYWxlbmRhclJhbmdlPEQ+O1xuICAgIHZpc2libGVEYXRlOiBEO1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgZmlsdGVyOiAoRDogYW55KSA9PiBib29sZWFuO1xuICAgIHNpemU6IE5iQ2FsZW5kYXJTaXplO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9zaXplOiBOYkNhbGVuZGFyU2l6ZVZhbHVlcztcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxEPjtcbiAgICBjb25zdHJ1Y3RvcihkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPik7XG4gICAgZ2V0IGluUmFuZ2UoKTogYm9vbGVhbjtcbiAgICBnZXQgc3RhcnQoKTogYm9vbGVhbjtcbiAgICBnZXQgZW5kKCk6IGJvb2xlYW47XG4gICAgcmFuZ2VDZWxsQ2xhc3M6IGJvb2xlYW47XG4gICAgZGF5Q2VsbENsYXNzOiBib29sZWFuO1xuICAgIGdldCB0b2RheSgpOiBib29sZWFuO1xuICAgIGdldCBib3VuZGluZ01vbnRoKCk6IGJvb2xlYW47XG4gICAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW47XG4gICAgZ2V0IGVtcHR5KCk6IGJvb2xlYW47XG4gICAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzTGFyZ2UoKTogYm9vbGVhbjtcbiAgICBnZXQgZGF5KCk6IG51bWJlcjtcbiAgICBvbkNsaWNrKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHNtYWxsZXJUaGFuTWluKCk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGdyZWF0ZXJUaGFuTWF4KCk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGRvbnRGaXRGaWx0ZXIoKTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgaXNJblJhbmdlKGRhdGU6IEQsIHsgc3RhcnQsIGVuZCB9OiBOYkNhbGVuZGFyUmFuZ2U8RD4pOiBib29sZWFuO1xufVxuIl19