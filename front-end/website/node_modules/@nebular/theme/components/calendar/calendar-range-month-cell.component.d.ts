/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter } from '@angular/core';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../calendar-kit/model';
import { NbDateService } from '../calendar-kit/services/date.service';
import { NbCalendarRange } from './calendar-range.component';
import { NbBaseCalendarRangeCell } from './base-calendar-range-cell';
import * as ɵngcc0 from '@angular/core';
export declare class NbCalendarRangeMonthCellComponent<D> extends NbBaseCalendarRangeCell<D> implements NbCalendarCell<D, NbCalendarRange<D>> {
    protected dateService: NbDateService<D>;
    get month(): string;
    date: D;
    visibleDate: D;
    selectedValue: NbCalendarRange<D>;
    min: D;
    max: D;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    select: EventEmitter<D>;
    monthCellClass: boolean;
    rangeCellClass: boolean;
    get selected(): boolean;
    get inRange(): boolean;
    get rangeStart(): boolean;
    get rangeEnd(): boolean;
    get today(): boolean;
    get disabled(): boolean;
    get isLarge(): boolean;
    onClick(): void;
    constructor(dateService: NbDateService<D>);
    protected smallerThanMin(): boolean;
    protected greaterThanMax(): boolean;
    protected monthStart(): D;
    protected monthEnd(): D;
    protected isInRage(date: D, range: NbCalendarRange<D>): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarRangeMonthCellComponent<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarRangeMonthCellComponent<any>, "nb-calendar-range-month-cell", never, { "size": "size"; "date": "date"; "visibleDate": "visibleDate"; "selectedValue": "selectedValue"; "min": "min"; "max": "max"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItcmFuZ2UtbW9udGgtY2VsbC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FsZW5kYXItcmFuZ2UtbW9udGgtY2VsbC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iQ2FsZW5kYXJDZWxsLCBOYkNhbGVuZGFyU2l6ZSwgTmJDYWxlbmRhclNpemVWYWx1ZXMgfSBmcm9tICcuLi9jYWxlbmRhci1raXQvbW9kZWwnO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4uL2NhbGVuZGFyLWtpdC9zZXJ2aWNlcy9kYXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgTmJDYWxlbmRhclJhbmdlIH0gZnJvbSAnLi9jYWxlbmRhci1yYW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmJCYXNlQ2FsZW5kYXJSYW5nZUNlbGwgfSBmcm9tICcuL2Jhc2UtY2FsZW5kYXItcmFuZ2UtY2VsbCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhbGVuZGFyUmFuZ2VNb250aENlbGxDb21wb25lbnQ8RD4gZXh0ZW5kcyBOYkJhc2VDYWxlbmRhclJhbmdlQ2VsbDxEPiBpbXBsZW1lbnRzIE5iQ2FsZW5kYXJDZWxsPEQsIE5iQ2FsZW5kYXJSYW5nZTxEPj4ge1xuICAgIHByb3RlY3RlZCBkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPjtcbiAgICBnZXQgbW9udGgoKTogc3RyaW5nO1xuICAgIGRhdGU6IEQ7XG4gICAgdmlzaWJsZURhdGU6IEQ7XG4gICAgc2VsZWN0ZWRWYWx1ZTogTmJDYWxlbmRhclJhbmdlPEQ+O1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgc2l6ZTogTmJDYWxlbmRhclNpemU7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3NpemU6IE5iQ2FsZW5kYXJTaXplVmFsdWVzO1xuICAgIHNlbGVjdDogRXZlbnRFbWl0dGVyPEQ+O1xuICAgIG1vbnRoQ2VsbENsYXNzOiBib29sZWFuO1xuICAgIHJhbmdlQ2VsbENsYXNzOiBib29sZWFuO1xuICAgIGdldCBzZWxlY3RlZCgpOiBib29sZWFuO1xuICAgIGdldCBpblJhbmdlKCk6IGJvb2xlYW47XG4gICAgZ2V0IHJhbmdlU3RhcnQoKTogYm9vbGVhbjtcbiAgICBnZXQgcmFuZ2VFbmQoKTogYm9vbGVhbjtcbiAgICBnZXQgdG9kYXkoKTogYm9vbGVhbjtcbiAgICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBnZXQgaXNMYXJnZSgpOiBib29sZWFuO1xuICAgIG9uQ2xpY2soKTogdm9pZDtcbiAgICBjb25zdHJ1Y3RvcihkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPik7XG4gICAgcHJvdGVjdGVkIHNtYWxsZXJUaGFuTWluKCk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIGdyZWF0ZXJUaGFuTWF4KCk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIG1vbnRoU3RhcnQoKTogRDtcbiAgICBwcm90ZWN0ZWQgbW9udGhFbmQoKTogRDtcbiAgICBwcm90ZWN0ZWQgaXNJblJhZ2UoZGF0ZTogRCwgcmFuZ2U6IE5iQ2FsZW5kYXJSYW5nZTxEPik6IGJvb2xlYW47XG59XG4iXX0=