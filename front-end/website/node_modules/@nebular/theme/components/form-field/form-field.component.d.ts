/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { AfterContentChecked, ChangeDetectorRef, QueryList, AfterContentInit, OnDestroy, NgZone, ElementRef, Renderer2, AfterViewInit } from '@angular/core';
import { Subject, Observable, ReplaySubject } from 'rxjs';
import { NbPrefixDirective } from './prefix.directive';
import { NbSuffixDirective } from './suffix.directive';
import { NbFormFieldControl, NbFormControlState, NbFormFieldControlConfig } from './form-field-control';
import * as ɵngcc0 from '@angular/core';
export declare type NbFormControlAddon = 'prefix' | 'suffix';
export declare class NbFormFieldComponent implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {
    protected cd: ChangeDetectorRef;
    protected zone: NgZone;
    protected elementRef: ElementRef;
    protected renderer: Renderer2;
    protected readonly destroy$: Subject<void>;
    protected formControlState$: ReplaySubject<NbFormControlState>;
    prefixClasses$: Observable<string[]>;
    suffixClasses$: Observable<string[]>;
    prefix: QueryList<NbPrefixDirective>;
    suffix: QueryList<NbSuffixDirective>;
    formControl: NbFormFieldControl;
    formControlConfig: NbFormFieldControlConfig;
    constructor(cd: ChangeDetectorRef, zone: NgZone, elementRef: ElementRef, renderer: Renderer2);
    ngAfterContentChecked(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    shouldShowPrefix(): boolean;
    shouldShowSuffix(): boolean;
    protected subscribeToFormControlStateChange(): void;
    protected subscribeToAddonChange(): void;
    protected getAddonClasses(addon: NbFormControlAddon, state: NbFormControlState): string[];
    protected getFormControlConfig(): NbFormFieldControlConfig;
    protected isStatesEqual(oldState: NbFormControlState, state: NbFormControlState): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbFormFieldComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbFormFieldComponent, "nb-form-field", never, {}, {}, ["formControl", "formControlConfig", "prefix", "suffix"], ["[nbPrefix]", "*", "[nbSuffix]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZm9ybS1maWVsZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IEFmdGVyQ29udGVudENoZWNrZWQsIENoYW5nZURldGVjdG9yUmVmLCBRdWVyeUxpc3QsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgTmdab25lLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QsIE9ic2VydmFibGUsIFJlcGxheVN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5iUHJlZml4RGlyZWN0aXZlIH0gZnJvbSAnLi9wcmVmaXguZGlyZWN0aXZlJztcbmltcG9ydCB7IE5iU3VmZml4RGlyZWN0aXZlIH0gZnJvbSAnLi9zdWZmaXguZGlyZWN0aXZlJztcbmltcG9ydCB7IE5iRm9ybUZpZWxkQ29udHJvbCwgTmJGb3JtQ29udHJvbFN0YXRlLCBOYkZvcm1GaWVsZENvbnRyb2xDb25maWcgfSBmcm9tICcuL2Zvcm0tZmllbGQtY29udHJvbCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iRm9ybUNvbnRyb2xBZGRvbiA9ICdwcmVmaXgnIHwgJ3N1ZmZpeCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkZvcm1GaWVsZENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudENoZWNrZWQsIEFmdGVyQ29udGVudEluaXQsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcm90ZWN0ZWQgem9uZTogTmdab25lO1xuICAgIHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmO1xuICAgIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBkZXN0cm95JDogU3ViamVjdDx2b2lkPjtcbiAgICBwcm90ZWN0ZWQgZm9ybUNvbnRyb2xTdGF0ZSQ6IFJlcGxheVN1YmplY3Q8TmJGb3JtQ29udHJvbFN0YXRlPjtcbiAgICBwcmVmaXhDbGFzc2VzJDogT2JzZXJ2YWJsZTxzdHJpbmdbXT47XG4gICAgc3VmZml4Q2xhc3NlcyQ6IE9ic2VydmFibGU8c3RyaW5nW10+O1xuICAgIHByZWZpeDogUXVlcnlMaXN0PE5iUHJlZml4RGlyZWN0aXZlPjtcbiAgICBzdWZmaXg6IFF1ZXJ5TGlzdDxOYlN1ZmZpeERpcmVjdGl2ZT47XG4gICAgZm9ybUNvbnRyb2w6IE5iRm9ybUZpZWxkQ29udHJvbDtcbiAgICBmb3JtQ29udHJvbENvbmZpZzogTmJGb3JtRmllbGRDb250cm9sQ29uZmlnO1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgem9uZTogTmdab25lLCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHNob3VsZFNob3dQcmVmaXgoKTogYm9vbGVhbjtcbiAgICBzaG91bGRTaG93U3VmZml4KCk6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIHN1YnNjcmliZVRvRm9ybUNvbnRyb2xTdGF0ZUNoYW5nZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzdWJzY3JpYmVUb0FkZG9uQ2hhbmdlKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGdldEFkZG9uQ2xhc3NlcyhhZGRvbjogTmJGb3JtQ29udHJvbEFkZG9uLCBzdGF0ZTogTmJGb3JtQ29udHJvbFN0YXRlKTogc3RyaW5nW107XG4gICAgcHJvdGVjdGVkIGdldEZvcm1Db250cm9sQ29uZmlnKCk6IE5iRm9ybUZpZWxkQ29udHJvbENvbmZpZztcbiAgICBwcm90ZWN0ZWQgaXNTdGF0ZXNFcXVhbChvbGRTdGF0ZTogTmJGb3JtQ29udHJvbFN0YXRlLCBzdGF0ZTogTmJGb3JtQ29udHJvbFN0YXRlKTogYm9vbGVhbjtcbn1cbiJdfQ==