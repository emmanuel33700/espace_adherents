/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Location } from '@angular/common';
import { Params } from '@angular/router';
import { Observable, BehaviorSubject } from 'rxjs';
import { NbIconConfig } from '../icon/icon.component';
import * as ɵngcc0 from '@angular/core';
export interface NbMenuBag {
    tag: string;
    item: NbMenuItem;
}
/**
 *
 *
 * Menu Item options example
 * @stacked-example(Menu Link Parameters, menu/menu-link-params.component)
 *
 *
 */
export declare class NbMenuItem {
    /**
     * Item Title
     * @type {string}
     */
    title: string;
    /**
     * Item relative link (for routerLink)
     * @type {string}
     */
    link?: string;
    /**
     * Item URL (absolute)
     * @type {string}
     */
    url?: string;
    /**
     * Icon class name or icon config object
     * @type {string | NbIconConfig}
     */
    icon?: string | NbIconConfig;
    /**
     * Expanded by default
     * @type {boolean}
     */
    expanded?: boolean;
    /**
     * Children items
     * @type {List<NbMenuItem>}
     */
    children?: NbMenuItem[];
    /**
     * HTML Link target
     * @type {string}
     */
    target?: string;
    /**
     * Hidden Item
     * @type {boolean}
     */
    hidden?: boolean;
    /**
     * Item is selected when partly or fully equal to the current url
     * @type {string}
     */
    pathMatch?: 'full' | 'prefix';
    /**
     * Where this is a home item
     * @type {boolean}
     */
    home?: boolean;
    /**
     * Whether the item is just a group (non-clickable)
     * @type {boolean}
     */
    group?: boolean;
    /** Whether the item skipLocationChange is true or false
     *@type {boolean}
     */
    skipLocationChange?: boolean;
    /** Map of query parameters
     *@type {Params}
     */
    queryParams?: Params;
    parent?: NbMenuItem;
    selected?: boolean;
    data?: any;
    fragment?: string;
    /**
     * @returns item parents in top-down order
     */
    static getParents(item: NbMenuItem): NbMenuItem[];
    static isParent(item: NbMenuItem, possibleChild: NbMenuItem): boolean;
}
/**
 *
 *
 * Menu Service. Allows you to listen to menu events, or to interact with a menu.
 * @stacked-example(Menu Service, menu/menu-service.component)
 *
 *
 */
export declare class NbMenuService {
    /**
     * Add items to the end of the menu items list
     * @param {List<NbMenuItem>} items
     * @param {string} tag
     */
    addItems(items: NbMenuItem[], tag?: string): void;
    /**
     * Collapses all menu items
     * @param {string} tag
     */
    collapseAll(tag?: string): void;
    /**
     * Navigate to the home menu item
     * @param {string} tag
     */
    navigateHome(tag?: string): void;
    /**
     * Returns currently selected item. Won't subscribe to the future events.
     * @param {string} tag
     * @returns {Observable<{tag: string; item: NbMenuItem}>}
     */
    getSelectedItem(tag?: string): Observable<NbMenuBag>;
    onItemClick(): Observable<NbMenuBag>;
    onItemSelect(): Observable<NbMenuBag>;
    onItemHover(): Observable<NbMenuBag>;
    onSubmenuToggle(): Observable<NbMenuBag>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbMenuService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbMenuService>;
}
export declare class NbMenuInternalService {
    private location;
    constructor(location: Location);
    prepareItems(items: NbMenuItem[]): void;
    selectFromUrl(items: NbMenuItem[], tag: string, collapseOther?: boolean): void;
    selectItem(item: NbMenuItem, items: NbMenuItem[], collapseOther: boolean, tag: string): void;
    collapseAll(items: NbMenuItem[], tag: string, except?: NbMenuItem): void;
    onAddItem(): Observable<{
        tag: string;
        items: NbMenuItem[];
    }>;
    onNavigateHome(): Observable<{
        tag: string;
    }>;
    onCollapseAll(): Observable<{
        tag: string;
    }>;
    onGetSelectedItem(): Observable<{
        tag: string;
        listener: BehaviorSubject<NbMenuBag>;
    }>;
    itemHover(item: NbMenuItem, tag?: string): void;
    submenuToggle(item: NbMenuItem, tag?: string): void;
    itemSelect(item: NbMenuItem, tag?: string): void;
    itemClick(item: NbMenuItem, tag?: string): void;
    /**
     * Unselect all given items deeply.
     * @param items array of items to unselect.
     * @returns items which selected value was changed.
     */
    private resetSelection;
    /**
     * Collapse all given items deeply.
     * @param items array of items to collapse.
     * @param except menu item which shouldn't be collapsed, also disables collapsing for parents of this item.
     * @returns items which expanded value was changed.
     */
    private collapseItems;
    private applyDefaults;
    private setParent;
    /**
     * Find deepest item which link matches current URL path.
     * @param items array of items to search in.
     * @returns found item of undefined.
     */
    private findItemByUrl;
    private isSelectedInUrl;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbMenuInternalService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbMenuInternalService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlIQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnREEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBMb2NhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBQYXJhbXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOYkljb25Db25maWcgfSBmcm9tICcuLi9pY29uL2ljb24uY29tcG9uZW50JztcbmV4cG9ydCBpbnRlcmZhY2UgTmJNZW51QmFnIHtcbiAgICB0YWc6IHN0cmluZztcbiAgICBpdGVtOiBOYk1lbnVJdGVtO1xufVxuLyoqXG4gKlxuICpcbiAqIE1lbnUgSXRlbSBvcHRpb25zIGV4YW1wbGVcbiAqIEBzdGFja2VkLWV4YW1wbGUoTWVudSBMaW5rIFBhcmFtZXRlcnMsIG1lbnUvbWVudS1saW5rLXBhcmFtcy5jb21wb25lbnQpXG4gKlxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJNZW51SXRlbSB7XG4gICAgLyoqXG4gICAgICogSXRlbSBUaXRsZVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgdGl0bGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBJdGVtIHJlbGF0aXZlIGxpbmsgKGZvciByb3V0ZXJMaW5rKVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgbGluaz86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBJdGVtIFVSTCAoYWJzb2x1dGUpXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICB1cmw/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSWNvbiBjbGFzcyBuYW1lIG9yIGljb24gY29uZmlnIG9iamVjdFxuICAgICAqIEB0eXBlIHtzdHJpbmcgfCBOYkljb25Db25maWd9XG4gICAgICovXG4gICAgaWNvbj86IHN0cmluZyB8IE5iSWNvbkNvbmZpZztcbiAgICAvKipcbiAgICAgKiBFeHBhbmRlZCBieSBkZWZhdWx0XG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZXhwYW5kZWQ/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIENoaWxkcmVuIGl0ZW1zXG4gICAgICogQHR5cGUge0xpc3Q8TmJNZW51SXRlbT59XG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBOYk1lbnVJdGVtW107XG4gICAgLyoqXG4gICAgICogSFRNTCBMaW5rIHRhcmdldFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgdGFyZ2V0Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEhpZGRlbiBJdGVtXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgaGlkZGVuPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBJdGVtIGlzIHNlbGVjdGVkIHdoZW4gcGFydGx5IG9yIGZ1bGx5IGVxdWFsIHRvIHRoZSBjdXJyZW50IHVybFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgcGF0aE1hdGNoPzogJ2Z1bGwnIHwgJ3ByZWZpeCc7XG4gICAgLyoqXG4gICAgICogV2hlcmUgdGhpcyBpcyBhIGhvbWUgaXRlbVxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGhvbWU/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIGl0ZW0gaXMganVzdCBhIGdyb3VwIChub24tY2xpY2thYmxlKVxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGdyb3VwPzogYm9vbGVhbjtcbiAgICAvKiogV2hldGhlciB0aGUgaXRlbSBza2lwTG9jYXRpb25DaGFuZ2UgaXMgdHJ1ZSBvciBmYWxzZVxuICAgICAqQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgc2tpcExvY2F0aW9uQ2hhbmdlPzogYm9vbGVhbjtcbiAgICAvKiogTWFwIG9mIHF1ZXJ5IHBhcmFtZXRlcnNcbiAgICAgKkB0eXBlIHtQYXJhbXN9XG4gICAgICovXG4gICAgcXVlcnlQYXJhbXM/OiBQYXJhbXM7XG4gICAgcGFyZW50PzogTmJNZW51SXRlbTtcbiAgICBzZWxlY3RlZD86IGJvb2xlYW47XG4gICAgZGF0YT86IGFueTtcbiAgICBmcmFnbWVudD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBpdGVtIHBhcmVudHMgaW4gdG9wLWRvd24gb3JkZXJcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0UGFyZW50cyhpdGVtOiBOYk1lbnVJdGVtKTogTmJNZW51SXRlbVtdO1xuICAgIHN0YXRpYyBpc1BhcmVudChpdGVtOiBOYk1lbnVJdGVtLCBwb3NzaWJsZUNoaWxkOiBOYk1lbnVJdGVtKTogYm9vbGVhbjtcbn1cbi8qKlxuICpcbiAqXG4gKiBNZW51IFNlcnZpY2UuIEFsbG93cyB5b3UgdG8gbGlzdGVuIHRvIG1lbnUgZXZlbnRzLCBvciB0byBpbnRlcmFjdCB3aXRoIGEgbWVudS5cbiAqIEBzdGFja2VkLWV4YW1wbGUoTWVudSBTZXJ2aWNlLCBtZW51L21lbnUtc2VydmljZS5jb21wb25lbnQpXG4gKlxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJNZW51U2VydmljZSB7XG4gICAgLyoqXG4gICAgICogQWRkIGl0ZW1zIHRvIHRoZSBlbmQgb2YgdGhlIG1lbnUgaXRlbXMgbGlzdFxuICAgICAqIEBwYXJhbSB7TGlzdDxOYk1lbnVJdGVtPn0gaXRlbXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGFnXG4gICAgICovXG4gICAgYWRkSXRlbXMoaXRlbXM6IE5iTWVudUl0ZW1bXSwgdGFnPzogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBDb2xsYXBzZXMgYWxsIG1lbnUgaXRlbXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGFnXG4gICAgICovXG4gICAgY29sbGFwc2VBbGwodGFnPzogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBOYXZpZ2F0ZSB0byB0aGUgaG9tZSBtZW51IGl0ZW1cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGFnXG4gICAgICovXG4gICAgbmF2aWdhdGVIb21lKHRhZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBjdXJyZW50bHkgc2VsZWN0ZWQgaXRlbS4gV29uJ3Qgc3Vic2NyaWJlIHRvIHRoZSBmdXR1cmUgZXZlbnRzLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0YWdcbiAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTx7dGFnOiBzdHJpbmc7IGl0ZW06IE5iTWVudUl0ZW19Pn1cbiAgICAgKi9cbiAgICBnZXRTZWxlY3RlZEl0ZW0odGFnPzogc3RyaW5nKTogT2JzZXJ2YWJsZTxOYk1lbnVCYWc+O1xuICAgIG9uSXRlbUNsaWNrKCk6IE9ic2VydmFibGU8TmJNZW51QmFnPjtcbiAgICBvbkl0ZW1TZWxlY3QoKTogT2JzZXJ2YWJsZTxOYk1lbnVCYWc+O1xuICAgIG9uSXRlbUhvdmVyKCk6IE9ic2VydmFibGU8TmJNZW51QmFnPjtcbiAgICBvblN1Ym1lbnVUb2dnbGUoKTogT2JzZXJ2YWJsZTxOYk1lbnVCYWc+O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJNZW51SW50ZXJuYWxTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGxvY2F0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGxvY2F0aW9uOiBMb2NhdGlvbik7XG4gICAgcHJlcGFyZUl0ZW1zKGl0ZW1zOiBOYk1lbnVJdGVtW10pOiB2b2lkO1xuICAgIHNlbGVjdEZyb21VcmwoaXRlbXM6IE5iTWVudUl0ZW1bXSwgdGFnOiBzdHJpbmcsIGNvbGxhcHNlT3RoZXI/OiBib29sZWFuKTogdm9pZDtcbiAgICBzZWxlY3RJdGVtKGl0ZW06IE5iTWVudUl0ZW0sIGl0ZW1zOiBOYk1lbnVJdGVtW10sIGNvbGxhcHNlT3RoZXI6IGJvb2xlYW4sIHRhZzogc3RyaW5nKTogdm9pZDtcbiAgICBjb2xsYXBzZUFsbChpdGVtczogTmJNZW51SXRlbVtdLCB0YWc6IHN0cmluZywgZXhjZXB0PzogTmJNZW51SXRlbSk6IHZvaWQ7XG4gICAgb25BZGRJdGVtKCk6IE9ic2VydmFibGU8e1xuICAgICAgICB0YWc6IHN0cmluZztcbiAgICAgICAgaXRlbXM6IE5iTWVudUl0ZW1bXTtcbiAgICB9PjtcbiAgICBvbk5hdmlnYXRlSG9tZSgpOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgdGFnOiBzdHJpbmc7XG4gICAgfT47XG4gICAgb25Db2xsYXBzZUFsbCgpOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgdGFnOiBzdHJpbmc7XG4gICAgfT47XG4gICAgb25HZXRTZWxlY3RlZEl0ZW0oKTogT2JzZXJ2YWJsZTx7XG4gICAgICAgIHRhZzogc3RyaW5nO1xuICAgICAgICBsaXN0ZW5lcjogQmVoYXZpb3JTdWJqZWN0PE5iTWVudUJhZz47XG4gICAgfT47XG4gICAgaXRlbUhvdmVyKGl0ZW06IE5iTWVudUl0ZW0sIHRhZz86IHN0cmluZyk6IHZvaWQ7XG4gICAgc3VibWVudVRvZ2dsZShpdGVtOiBOYk1lbnVJdGVtLCB0YWc/OiBzdHJpbmcpOiB2b2lkO1xuICAgIGl0ZW1TZWxlY3QoaXRlbTogTmJNZW51SXRlbSwgdGFnPzogc3RyaW5nKTogdm9pZDtcbiAgICBpdGVtQ2xpY2soaXRlbTogTmJNZW51SXRlbSwgdGFnPzogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBVbnNlbGVjdCBhbGwgZ2l2ZW4gaXRlbXMgZGVlcGx5LlxuICAgICAqIEBwYXJhbSBpdGVtcyBhcnJheSBvZiBpdGVtcyB0byB1bnNlbGVjdC5cbiAgICAgKiBAcmV0dXJucyBpdGVtcyB3aGljaCBzZWxlY3RlZCB2YWx1ZSB3YXMgY2hhbmdlZC5cbiAgICAgKi9cbiAgICBwcml2YXRlIHJlc2V0U2VsZWN0aW9uO1xuICAgIC8qKlxuICAgICAqIENvbGxhcHNlIGFsbCBnaXZlbiBpdGVtcyBkZWVwbHkuXG4gICAgICogQHBhcmFtIGl0ZW1zIGFycmF5IG9mIGl0ZW1zIHRvIGNvbGxhcHNlLlxuICAgICAqIEBwYXJhbSBleGNlcHQgbWVudSBpdGVtIHdoaWNoIHNob3VsZG4ndCBiZSBjb2xsYXBzZWQsIGFsc28gZGlzYWJsZXMgY29sbGFwc2luZyBmb3IgcGFyZW50cyBvZiB0aGlzIGl0ZW0uXG4gICAgICogQHJldHVybnMgaXRlbXMgd2hpY2ggZXhwYW5kZWQgdmFsdWUgd2FzIGNoYW5nZWQuXG4gICAgICovXG4gICAgcHJpdmF0ZSBjb2xsYXBzZUl0ZW1zO1xuICAgIHByaXZhdGUgYXBwbHlEZWZhdWx0cztcbiAgICBwcml2YXRlIHNldFBhcmVudDtcbiAgICAvKipcbiAgICAgKiBGaW5kIGRlZXBlc3QgaXRlbSB3aGljaCBsaW5rIG1hdGNoZXMgY3VycmVudCBVUkwgcGF0aC5cbiAgICAgKiBAcGFyYW0gaXRlbXMgYXJyYXkgb2YgaXRlbXMgdG8gc2VhcmNoIGluLlxuICAgICAqIEByZXR1cm5zIGZvdW5kIGl0ZW0gb2YgdW5kZWZpbmVkLlxuICAgICAqL1xuICAgIHByaXZhdGUgZmluZEl0ZW1CeVVybDtcbiAgICBwcml2YXRlIGlzU2VsZWN0ZWRJblVybDtcbn1cbiJdfQ==