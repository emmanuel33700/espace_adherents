/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Router } from '@angular/router';
import { NbSearchService } from './search.service';
import { NbThemeService } from '../../services/theme.service';
import { NbOverlayService } from '../cdk/overlay/overlay-service';
import { NbPortalDirective } from '../cdk/overlay/mapping';
/**
 * search-field-component is used under the hood by nb-search component
 * can't be used itself
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbSearchFieldComponent implements OnChanges, AfterViewInit {
    static readonly TYPE_MODAL_ZOOMIN = "modal-zoomin";
    static readonly TYPE_ROTATE_LAYOUT = "rotate-layout";
    static readonly TYPE_MODAL_MOVE = "modal-move";
    static readonly TYPE_CURTAIN = "curtain";
    static readonly TYPE_COLUMN_CURTAIN = "column-curtain";
    static readonly TYPE_MODAL_DROP = "modal-drop";
    static readonly TYPE_MODAL_HALF = "modal-half";
    type: string;
    placeholder: string;
    hint: string;
    show: boolean;
    close: EventEmitter<any>;
    search: EventEmitter<any>;
    searchInput: EventEmitter<any>;
    inputElement: ElementRef<HTMLInputElement>;
    get showClass(): boolean;
    get modalZoomin(): boolean;
    get rotateLayout(): boolean;
    get modalMove(): boolean;
    get curtain(): boolean;
    get columnCurtain(): boolean;
    get modalDrop(): boolean;
    get modalHalf(): boolean;
    ngOnChanges({ show }: SimpleChanges): void;
    ngAfterViewInit(): void;
    emitClose(): void;
    submitSearch(term: any): void;
    emitSearchInput(term: string): void;
    focusInput(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSearchFieldComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSearchFieldComponent, "nb-search-field", never, { "show": "show"; "type": "type"; "placeholder": "placeholder"; "hint": "hint"; }, { "close": "close"; "search": "search"; "searchInput": "searchInput"; }, never, never>;
}
export declare type NbSearchType = 'modal-zoomin' | 'rotate-layout' | 'modal-move' | 'curtain' | 'column-curtain' | 'modal-drop' | 'modal-half';
/**
 * Beautiful full-page search control.
 *
 * @stacked-example(Showcase, search/search-showcase.component)
 *
 * Basic setup:
 *
 * ```ts
 *  <nb-search type="rotate-layout"></nb-search>
 * ```
 * ### Installation
 *
 * Import `NbSearchModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbSearchModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Several animation types are available:
 * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half
 *
 * It is also possible to handle search event using `NbSearchService`:
 *
 * @stacked-example(Search Event, search/search-event.component)
 *
 * @styles
 *
 * search-background-color:
 * search-divider-color:
 * search-divider-style:
 * search-divider-width:
 * search-extra-background-color:
 * search-text-color:
 * search-text-font-family:
 * search-text-font-size:
 * search-text-font-weight:
 * search-text-line-height:
 * search-placeholder-text-color:
 * search-info-text-color:
 * search-info-text-font-family:
 * search-info-text-font-size:
 * search-info-text-font-weight:
 * search-info-text-line-height:
 */
export declare class NbSearchComponent implements OnInit, OnDestroy {
    private searchService;
    private themeService;
    private router;
    private overlayService;
    private changeDetector;
    private destroy$;
    private overlayRef;
    showSearchField: boolean;
    /**
     * Tags a search with some ID, can be later used in the search service
     * to determine which search component triggered the action, if multiple searches exist on the page.
     *
     * @type {string}
     */
    tag: string;
    /**
     * Search input placeholder
     * @type {string}
     */
    placeholder: string;
    /**
     * Hint showing under the input field to improve user experience
     *
     * @type {string}
     */
    hint: string;
    /**
     * Search design type, available types are
     * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half
     * @type {string}
     */
    type: NbSearchType;
    searchFieldPortal: NbPortalDirective;
    searchButton: ElementRef<HTMLElement>;
    constructor(searchService: NbSearchService, themeService: NbThemeService, router: Router, overlayService: NbOverlayService, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    openSearch(): void;
    hideSearch(): void;
    search(term: any): void;
    emitInput(term: string): void;
    emitActivate(): void;
    emitDeactivate(): void;
    private removeLayoutClasses;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbSearchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbSearchComponent, "nb-search", never, { "placeholder": "placeholder"; "hint": "hint"; "tag": "tag"; "type": "type"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZWFyY2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4QkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlHQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBOYlNlYXJjaFNlcnZpY2UgfSBmcm9tICcuL3NlYXJjaC5zZXJ2aWNlJztcbmltcG9ydCB7IE5iVGhlbWVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGhlbWUuc2VydmljZSc7XG5pbXBvcnQgeyBOYk92ZXJsYXlTZXJ2aWNlIH0gZnJvbSAnLi4vY2RrL292ZXJsYXkvb3ZlcmxheS1zZXJ2aWNlJztcbmltcG9ydCB7IE5iUG9ydGFsRGlyZWN0aXZlIH0gZnJvbSAnLi4vY2RrL292ZXJsYXkvbWFwcGluZyc7XG4vKipcbiAqIHNlYXJjaC1maWVsZC1jb21wb25lbnQgaXMgdXNlZCB1bmRlciB0aGUgaG9vZCBieSBuYi1zZWFyY2ggY29tcG9uZW50XG4gKiBjYW4ndCBiZSB1c2VkIGl0c2VsZlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlNlYXJjaEZpZWxkQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0IHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgVFlQRV9NT0RBTF9aT09NSU4gPSBcIm1vZGFsLXpvb21pblwiO1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX1JPVEFURV9MQVlPVVQgPSBcInJvdGF0ZS1sYXlvdXRcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgVFlQRV9NT0RBTF9NT1ZFID0gXCJtb2RhbC1tb3ZlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFRZUEVfQ1VSVEFJTiA9IFwiY3VydGFpblwiO1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX0NPTFVNTl9DVVJUQUlOID0gXCJjb2x1bW4tY3VydGFpblwiO1xuICAgIHN0YXRpYyByZWFkb25seSBUWVBFX01PREFMX0RST1AgPSBcIm1vZGFsLWRyb3BcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgVFlQRV9NT0RBTF9IQUxGID0gXCJtb2RhbC1oYWxmXCI7XG4gICAgdHlwZTogc3RyaW5nO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgaGludDogc3RyaW5nO1xuICAgIHNob3c6IGJvb2xlYW47XG4gICAgY2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHNlYXJjaDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc2VhcmNoSW5wdXQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGlucHV0RWxlbWVudDogRWxlbWVudFJlZjxIVE1MSW5wdXRFbGVtZW50PjtcbiAgICBnZXQgc2hvd0NsYXNzKCk6IGJvb2xlYW47XG4gICAgZ2V0IG1vZGFsWm9vbWluKCk6IGJvb2xlYW47XG4gICAgZ2V0IHJvdGF0ZUxheW91dCgpOiBib29sZWFuO1xuICAgIGdldCBtb2RhbE1vdmUoKTogYm9vbGVhbjtcbiAgICBnZXQgY3VydGFpbigpOiBib29sZWFuO1xuICAgIGdldCBjb2x1bW5DdXJ0YWluKCk6IGJvb2xlYW47XG4gICAgZ2V0IG1vZGFsRHJvcCgpOiBib29sZWFuO1xuICAgIGdldCBtb2RhbEhhbGYoKTogYm9vbGVhbjtcbiAgICBuZ09uQ2hhbmdlcyh7IHNob3cgfTogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgZW1pdENsb3NlKCk6IHZvaWQ7XG4gICAgc3VibWl0U2VhcmNoKHRlcm06IGFueSk6IHZvaWQ7XG4gICAgZW1pdFNlYXJjaElucHV0KHRlcm06IHN0cmluZyk6IHZvaWQ7XG4gICAgZm9jdXNJbnB1dCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYlNlYXJjaFR5cGUgPSAnbW9kYWwtem9vbWluJyB8ICdyb3RhdGUtbGF5b3V0JyB8ICdtb2RhbC1tb3ZlJyB8ICdjdXJ0YWluJyB8ICdjb2x1bW4tY3VydGFpbicgfCAnbW9kYWwtZHJvcCcgfCAnbW9kYWwtaGFsZic7XG4vKipcbiAqIEJlYXV0aWZ1bCBmdWxsLXBhZ2Ugc2VhcmNoIGNvbnRyb2wuXG4gKlxuICogQHN0YWNrZWQtZXhhbXBsZShTaG93Y2FzZSwgc2VhcmNoL3NlYXJjaC1zaG93Y2FzZS5jb21wb25lbnQpXG4gKlxuICogQmFzaWMgc2V0dXA6XG4gKlxuICogYGBgdHNcbiAqICA8bmItc2VhcmNoIHR5cGU9XCJyb3RhdGUtbGF5b3V0XCI+PC9uYi1zZWFyY2g+XG4gKiBgYGBcbiAqICMjIyBJbnN0YWxsYXRpb25cbiAqXG4gKiBJbXBvcnQgYE5iU2VhcmNoTW9kdWxlYCB0byB5b3VyIGZlYXR1cmUgbW9kdWxlLlxuICogYGBgdHNcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYlNlYXJjaE1vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgUGFnZU1vZHVsZSB7IH1cbiAqIGBgYFxuICogIyMjIFVzYWdlXG4gKlxuICogU2V2ZXJhbCBhbmltYXRpb24gdHlwZXMgYXJlIGF2YWlsYWJsZTpcbiAqIG1vZGFsLXpvb21pbiwgcm90YXRlLWxheW91dCwgbW9kYWwtbW92ZSwgY3VydGFpbiwgY29sdW1uLWN1cnRhaW4sIG1vZGFsLWRyb3AsIG1vZGFsLWhhbGZcbiAqXG4gKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGhhbmRsZSBzZWFyY2ggZXZlbnQgdXNpbmcgYE5iU2VhcmNoU2VydmljZWA6XG4gKlxuICogQHN0YWNrZWQtZXhhbXBsZShTZWFyY2ggRXZlbnQsIHNlYXJjaC9zZWFyY2gtZXZlbnQuY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBzZWFyY2gtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHNlYXJjaC1kaXZpZGVyLWNvbG9yOlxuICogc2VhcmNoLWRpdmlkZXItc3R5bGU6XG4gKiBzZWFyY2gtZGl2aWRlci13aWR0aDpcbiAqIHNlYXJjaC1leHRyYS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogc2VhcmNoLXRleHQtY29sb3I6XG4gKiBzZWFyY2gtdGV4dC1mb250LWZhbWlseTpcbiAqIHNlYXJjaC10ZXh0LWZvbnQtc2l6ZTpcbiAqIHNlYXJjaC10ZXh0LWZvbnQtd2VpZ2h0OlxuICogc2VhcmNoLXRleHQtbGluZS1oZWlnaHQ6XG4gKiBzZWFyY2gtcGxhY2Vob2xkZXItdGV4dC1jb2xvcjpcbiAqIHNlYXJjaC1pbmZvLXRleHQtY29sb3I6XG4gKiBzZWFyY2gtaW5mby10ZXh0LWZvbnQtZmFtaWx5OlxuICogc2VhcmNoLWluZm8tdGV4dC1mb250LXNpemU6XG4gKiBzZWFyY2gtaW5mby10ZXh0LWZvbnQtd2VpZ2h0OlxuICogc2VhcmNoLWluZm8tdGV4dC1saW5lLWhlaWdodDpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJTZWFyY2hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBzZWFyY2hTZXJ2aWNlO1xuICAgIHByaXZhdGUgdGhlbWVTZXJ2aWNlO1xuICAgIHByaXZhdGUgcm91dGVyO1xuICAgIHByaXZhdGUgb3ZlcmxheVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcbiAgICBwcml2YXRlIGRlc3Ryb3kkO1xuICAgIHByaXZhdGUgb3ZlcmxheVJlZjtcbiAgICBzaG93U2VhcmNoRmllbGQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGFncyBhIHNlYXJjaCB3aXRoIHNvbWUgSUQsIGNhbiBiZSBsYXRlciB1c2VkIGluIHRoZSBzZWFyY2ggc2VydmljZVxuICAgICAqIHRvIGRldGVybWluZSB3aGljaCBzZWFyY2ggY29tcG9uZW50IHRyaWdnZXJlZCB0aGUgYWN0aW9uLCBpZiBtdWx0aXBsZSBzZWFyY2hlcyBleGlzdCBvbiB0aGUgcGFnZS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgdGFnOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2VhcmNoIGlucHV0IHBsYWNlaG9sZGVyXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEhpbnQgc2hvd2luZyB1bmRlciB0aGUgaW5wdXQgZmllbGQgdG8gaW1wcm92ZSB1c2VyIGV4cGVyaWVuY2VcbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgaGludDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFNlYXJjaCBkZXNpZ24gdHlwZSwgYXZhaWxhYmxlIHR5cGVzIGFyZVxuICAgICAqIG1vZGFsLXpvb21pbiwgcm90YXRlLWxheW91dCwgbW9kYWwtbW92ZSwgY3VydGFpbiwgY29sdW1uLWN1cnRhaW4sIG1vZGFsLWRyb3AsIG1vZGFsLWhhbGZcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqL1xuICAgIHR5cGU6IE5iU2VhcmNoVHlwZTtcbiAgICBzZWFyY2hGaWVsZFBvcnRhbDogTmJQb3J0YWxEaXJlY3RpdmU7XG4gICAgc2VhcmNoQnV0dG9uOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcbiAgICBjb25zdHJ1Y3RvcihzZWFyY2hTZXJ2aWNlOiBOYlNlYXJjaFNlcnZpY2UsIHRoZW1lU2VydmljZTogTmJUaGVtZVNlcnZpY2UsIHJvdXRlcjogUm91dGVyLCBvdmVybGF5U2VydmljZTogTmJPdmVybGF5U2VydmljZSwgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgb3BlblNlYXJjaCgpOiB2b2lkO1xuICAgIGhpZGVTZWFyY2goKTogdm9pZDtcbiAgICBzZWFyY2godGVybTogYW55KTogdm9pZDtcbiAgICBlbWl0SW5wdXQodGVybTogc3RyaW5nKTogdm9pZDtcbiAgICBlbWl0QWN0aXZhdGUoKTogdm9pZDtcbiAgICBlbWl0RGVhY3RpdmF0ZSgpOiB2b2lkO1xuICAgIHByaXZhdGUgcmVtb3ZlTGF5b3V0Q2xhc3Nlcztcbn1cbiJdfQ==