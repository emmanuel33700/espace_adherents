/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Subject } from 'rxjs';
import { NbBooleanInput } from '../helpers';
/**
 * An accordion allows to toggle the display of sections of content
 *
 * Basic example
 * @stacked-example(Showcase, accordion/accordion-showcase.component)
 *
 * ```ts
 * <nb-accordion>
 *  <nb-accordion-item>
 *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>
 *   <nb-accordion-item-body>
 *     Item Content
 *   </nb-accordion-item-body>
 *  </nb-accordion-item>
 * </nb-accordion>
 * ```
 * ### Installation
 *
 * Import `NbAccordionModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbAccordionModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * With `multi` mode accordion can have multiple items expanded:
 * @stacked-example(Multiple expanded items, accordion/accordion-multi.component)
 *
 * `NbAccordionItemComponent` has several methods, for example it is possible to trigger item click/toggle:
 * @stacked-example(Expand API, accordion/accordion-toggle.component)
 *
 * @styles
 *
 * accordion-border-radius:
 * accordion-padding:
 * accordion-shadow:
 * accordion-header-text-color:
 * accordion-header-text-font-family:
 * accordion-header-text-font-size:
 * accordion-header-text-font-weight:
 * accordion-header-text-line-height:
 * accordion-header-disabled-text-color:
 * accordion-header-border-color:
 * accordion-header-border-style:
 * accordion-header-border-width:
 * accordion-item-background-color:
 * accordion-item-text-color:
 * accordion-item-text-font-family:
 * accordion-item-text-font-size:
 * accordion-item-text-font-weight:
 * accordion-item-text-line-height:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbAccordionComponent {
    openCloseItems: Subject<boolean>;
    /**
     *  Allow multiple items to be expanded at the same time.
     * @type {boolean}
     */
    get multi(): boolean;
    set multi(val: boolean);
    static ngAcceptInputType_multi: NbBooleanInput;
    private multiValue;
    /**
     * Opens all enabled accordion items.
     */
    openAll(): void;
    /**
     * Closes all enabled accordion items.
     */
    closeAll(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbAccordionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbAccordionComponent, "nb-accordion", never, { "multi": "multi"; }, {}, never, ["nb-accordion-item"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhY2NvcmRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0VBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE5iQm9vbGVhbklucHV0IH0gZnJvbSAnLi4vaGVscGVycyc7XG4vKipcbiAqIEFuIGFjY29yZGlvbiBhbGxvd3MgdG8gdG9nZ2xlIHRoZSBkaXNwbGF5IG9mIHNlY3Rpb25zIG9mIGNvbnRlbnRcbiAqXG4gKiBCYXNpYyBleGFtcGxlXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCBhY2NvcmRpb24vYWNjb3JkaW9uLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBgYGB0c1xuICogPG5iLWFjY29yZGlvbj5cbiAqICA8bmItYWNjb3JkaW9uLWl0ZW0+XG4gKiAgIDxuYi1hY2NvcmRpb24taXRlbS1oZWFkZXI+UHJvZHVjdCBEZXRhaWxzPC9uYi1hY2NvcmRpb24taXRlbS1oZWFkZXI+XG4gKiAgIDxuYi1hY2NvcmRpb24taXRlbS1ib2R5PlxuICogICAgIEl0ZW0gQ29udGVudFxuICogICA8L25iLWFjY29yZGlvbi1pdGVtLWJvZHk+XG4gKiAgPC9uYi1hY2NvcmRpb24taXRlbT5cbiAqIDwvbmItYWNjb3JkaW9uPlxuICogYGBgXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYkFjY29yZGlvbk1vZHVsZWAgdG8geW91ciBmZWF0dXJlIG1vZHVsZS5cbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJBY2NvcmRpb25Nb2R1bGUsXG4gKiAgIF0sXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIFBhZ2VNb2R1bGUgeyB9XG4gKiBgYGBcbiAqICMjIyBVc2FnZVxuICpcbiAqIFdpdGggYG11bHRpYCBtb2RlIGFjY29yZGlvbiBjYW4gaGF2ZSBtdWx0aXBsZSBpdGVtcyBleHBhbmRlZDpcbiAqIEBzdGFja2VkLWV4YW1wbGUoTXVsdGlwbGUgZXhwYW5kZWQgaXRlbXMsIGFjY29yZGlvbi9hY2NvcmRpb24tbXVsdGkuY29tcG9uZW50KVxuICpcbiAqIGBOYkFjY29yZGlvbkl0ZW1Db21wb25lbnRgIGhhcyBzZXZlcmFsIG1ldGhvZHMsIGZvciBleGFtcGxlIGl0IGlzIHBvc3NpYmxlIHRvIHRyaWdnZXIgaXRlbSBjbGljay90b2dnbGU6XG4gKiBAc3RhY2tlZC1leGFtcGxlKEV4cGFuZCBBUEksIGFjY29yZGlvbi9hY2NvcmRpb24tdG9nZ2xlLmNvbXBvbmVudClcbiAqXG4gKiBAc3R5bGVzXG4gKlxuICogYWNjb3JkaW9uLWJvcmRlci1yYWRpdXM6XG4gKiBhY2NvcmRpb24tcGFkZGluZzpcbiAqIGFjY29yZGlvbi1zaGFkb3c6XG4gKiBhY2NvcmRpb24taGVhZGVyLXRleHQtY29sb3I6XG4gKiBhY2NvcmRpb24taGVhZGVyLXRleHQtZm9udC1mYW1pbHk6XG4gKiBhY2NvcmRpb24taGVhZGVyLXRleHQtZm9udC1zaXplOlxuICogYWNjb3JkaW9uLWhlYWRlci10ZXh0LWZvbnQtd2VpZ2h0OlxuICogYWNjb3JkaW9uLWhlYWRlci10ZXh0LWxpbmUtaGVpZ2h0OlxuICogYWNjb3JkaW9uLWhlYWRlci1kaXNhYmxlZC10ZXh0LWNvbG9yOlxuICogYWNjb3JkaW9uLWhlYWRlci1ib3JkZXItY29sb3I6XG4gKiBhY2NvcmRpb24taGVhZGVyLWJvcmRlci1zdHlsZTpcbiAqIGFjY29yZGlvbi1oZWFkZXItYm9yZGVyLXdpZHRoOlxuICogYWNjb3JkaW9uLWl0ZW0tYmFja2dyb3VuZC1jb2xvcjpcbiAqIGFjY29yZGlvbi1pdGVtLXRleHQtY29sb3I6XG4gKiBhY2NvcmRpb24taXRlbS10ZXh0LWZvbnQtZmFtaWx5OlxuICogYWNjb3JkaW9uLWl0ZW0tdGV4dC1mb250LXNpemU6XG4gKiBhY2NvcmRpb24taXRlbS10ZXh0LWZvbnQtd2VpZ2h0OlxuICogYWNjb3JkaW9uLWl0ZW0tdGV4dC1saW5lLWhlaWdodDpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJBY2NvcmRpb25Db21wb25lbnQge1xuICAgIG9wZW5DbG9zZUl0ZW1zOiBTdWJqZWN0PGJvb2xlYW4+O1xuICAgIC8qKlxuICAgICAqICBBbGxvdyBtdWx0aXBsZSBpdGVtcyB0byBiZSBleHBhbmRlZCBhdCB0aGUgc2FtZSB0aW1lLlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGdldCBtdWx0aSgpOiBib29sZWFuO1xuICAgIHNldCBtdWx0aSh2YWw6IGJvb2xlYW4pO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9tdWx0aTogTmJCb29sZWFuSW5wdXQ7XG4gICAgcHJpdmF0ZSBtdWx0aVZhbHVlO1xuICAgIC8qKlxuICAgICAqIE9wZW5zIGFsbCBlbmFibGVkIGFjY29yZGlvbiBpdGVtcy5cbiAgICAgKi9cbiAgICBvcGVuQWxsKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIGFsbCBlbmFibGVkIGFjY29yZGlvbiBpdGVtcy5cbiAgICAgKi9cbiAgICBjbG9zZUFsbCgpOiB2b2lkO1xufVxuIl19