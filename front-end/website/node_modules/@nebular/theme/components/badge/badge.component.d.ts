/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbComponentStatus } from '../component-status';
import * as ɵngcc0 from '@angular/core';
export declare type NbBadgePhysicalPosition = 'top left' | 'top right' | 'bottom left' | 'bottom right';
export declare type NbBadgeLogicalPosition = 'top start' | 'top end' | 'bottom start' | 'bottom end';
export declare type NbBadgePosition = NbBadgePhysicalPosition | NbBadgeLogicalPosition;
/**
 * Badge is a simple labeling component.
 * It can be used to add additional information to any content or highlight unread items.
 *
 * Element is absolute positioned, so parent should be
 * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).
 * It means parent `position` should be set to anything except `static`, e.g. `relative`,
 * `absolute`, `fixed`, or `sticky`.
 *
 * ### Installation
 *
 * Import `NbBadgeModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbBadgeModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Badge with default position and status(color):
 *
 * ```html
 * <nb-badge text="badgeText"></nb-badge>
 * ```
 *
 * For example, badge can be placed into nb-card header:
 * @stacked-example(Showcase, badge/badge-showcase.component)
 *
 * Badge located on the bottom right with warning status:
 *
 * ```html
 * <nb-badge text="badgeText" status="warning" position="bottom right">
 * </nb-badge>
 * ```
 *
 * @styles
 *
 * badge-border-radius:
 * badge-text-font-family:
 * badge-text-font-size:
 * badge-text-font-weight:
 * badge-text-line-height:
 * badge-padding:
 * badge-basic-background-color:
 * badge-basic-text-color:
 * badge-primary-background-color:
 * badge-primary-text-color:
 * badge-success-background-color:
 * badge-success-text-color:
 * badge-info-background-color:
 * badge-info-text-color:
 * badge-warning-background-color:
 * badge-warning-text-color:
 * badge-danger-background-color:
 * badge-danger-text-color:
 * badge-control-background-color:
 * badge-control-text-color:
 */
export declare class NbBadgeComponent {
    /**
     * Text to display
     * @type string
     */
    text: string;
    /**
     * Badge position
     *
     * Can be set to any class or to one of predefined positions:
     * 'top left', 'top right', 'bottom left', 'bottom right',
     * 'top start', 'top end', 'bottom start', 'bottom end'
     * @type string
     */
    get position(): NbBadgePosition;
    set position(value: NbBadgePosition);
    protected _defaultPosition: NbBadgePosition;
    protected _position: NbBadgePosition;
    /**
     * Badge status (adds specific styles):
     * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'
     */
    get status(): NbComponentStatus;
    set status(value: NbComponentStatus);
    protected _status: NbComponentStatus;
    get primary(): boolean;
    get success(): boolean;
    get info(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    get top(): boolean;
    get right(): boolean;
    get bottom(): boolean;
    get left(): boolean;
    get start(): boolean;
    get end(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbBadgeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbBadgeComponent, "nb-badge", never, { "text": "text"; "position": "position"; "status": "status"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImJhZGdlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVHQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IE5iQ29tcG9uZW50U3RhdHVzIH0gZnJvbSAnLi4vY29tcG9uZW50LXN0YXR1cyc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iQmFkZ2VQaHlzaWNhbFBvc2l0aW9uID0gJ3RvcCBsZWZ0JyB8ICd0b3AgcmlnaHQnIHwgJ2JvdHRvbSBsZWZ0JyB8ICdib3R0b20gcmlnaHQnO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYkJhZGdlTG9naWNhbFBvc2l0aW9uID0gJ3RvcCBzdGFydCcgfCAndG9wIGVuZCcgfCAnYm90dG9tIHN0YXJ0JyB8ICdib3R0b20gZW5kJztcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTmJCYWRnZVBvc2l0aW9uID0gTmJCYWRnZVBoeXNpY2FsUG9zaXRpb24gfCBOYkJhZGdlTG9naWNhbFBvc2l0aW9uO1xuLyoqXG4gKiBCYWRnZSBpcyBhIHNpbXBsZSBsYWJlbGluZyBjb21wb25lbnQuXG4gKiBJdCBjYW4gYmUgdXNlZCB0byBhZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byBhbnkgY29udGVudCBvciBoaWdobGlnaHQgdW5yZWFkIGl0ZW1zLlxuICpcbiAqIEVsZW1lbnQgaXMgYWJzb2x1dGUgcG9zaXRpb25lZCwgc28gcGFyZW50IHNob3VsZCBiZVxuICogW3Bvc2l0aW9uZWQgZWxlbWVudF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Bvc2l0aW9uKS5cbiAqIEl0IG1lYW5zIHBhcmVudCBgcG9zaXRpb25gIHNob3VsZCBiZSBzZXQgdG8gYW55dGhpbmcgZXhjZXB0IGBzdGF0aWNgLCBlLmcuIGByZWxhdGl2ZWAsXG4gKiBgYWJzb2x1dGVgLCBgZml4ZWRgLCBvciBgc3RpY2t5YC5cbiAqXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYkJhZGdlTW9kdWxlYCB0byB5b3VyIGZlYXR1cmUgbW9kdWxlLlxuICogYGBgdHNcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYkJhZGdlTW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBCYWRnZSB3aXRoIGRlZmF1bHQgcG9zaXRpb24gYW5kIHN0YXR1cyhjb2xvcik6XG4gKlxuICogYGBgaHRtbFxuICogPG5iLWJhZGdlIHRleHQ9XCJiYWRnZVRleHRcIj48L25iLWJhZGdlPlxuICogYGBgXG4gKlxuICogRm9yIGV4YW1wbGUsIGJhZGdlIGNhbiBiZSBwbGFjZWQgaW50byBuYi1jYXJkIGhlYWRlcjpcbiAqIEBzdGFja2VkLWV4YW1wbGUoU2hvd2Nhc2UsIGJhZGdlL2JhZGdlLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBCYWRnZSBsb2NhdGVkIG9uIHRoZSBib3R0b20gcmlnaHQgd2l0aCB3YXJuaW5nIHN0YXR1czpcbiAqXG4gKiBgYGBodG1sXG4gKiA8bmItYmFkZ2UgdGV4dD1cImJhZGdlVGV4dFwiIHN0YXR1cz1cIndhcm5pbmdcIiBwb3NpdGlvbj1cImJvdHRvbSByaWdodFwiPlxuICogPC9uYi1iYWRnZT5cbiAqIGBgYFxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBiYWRnZS1ib3JkZXItcmFkaXVzOlxuICogYmFkZ2UtdGV4dC1mb250LWZhbWlseTpcbiAqIGJhZGdlLXRleHQtZm9udC1zaXplOlxuICogYmFkZ2UtdGV4dC1mb250LXdlaWdodDpcbiAqIGJhZGdlLXRleHQtbGluZS1oZWlnaHQ6XG4gKiBiYWRnZS1wYWRkaW5nOlxuICogYmFkZ2UtYmFzaWMtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGJhZGdlLWJhc2ljLXRleHQtY29sb3I6XG4gKiBiYWRnZS1wcmltYXJ5LWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS1wcmltYXJ5LXRleHQtY29sb3I6XG4gKiBiYWRnZS1zdWNjZXNzLWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS1zdWNjZXNzLXRleHQtY29sb3I6XG4gKiBiYWRnZS1pbmZvLWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS1pbmZvLXRleHQtY29sb3I6XG4gKiBiYWRnZS13YXJuaW5nLWJhY2tncm91bmQtY29sb3I6XG4gKiBiYWRnZS13YXJuaW5nLXRleHQtY29sb3I6XG4gKiBiYWRnZS1kYW5nZXItYmFja2dyb3VuZC1jb2xvcjpcbiAqIGJhZGdlLWRhbmdlci10ZXh0LWNvbG9yOlxuICogYmFkZ2UtY29udHJvbC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYmFkZ2UtY29udHJvbC10ZXh0LWNvbG9yOlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkJhZGdlQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBUZXh0IHRvIGRpc3BsYXlcbiAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgKi9cbiAgICB0ZXh0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQmFkZ2UgcG9zaXRpb25cbiAgICAgKlxuICAgICAqIENhbiBiZSBzZXQgdG8gYW55IGNsYXNzIG9yIHRvIG9uZSBvZiBwcmVkZWZpbmVkIHBvc2l0aW9uczpcbiAgICAgKiAndG9wIGxlZnQnLCAndG9wIHJpZ2h0JywgJ2JvdHRvbSBsZWZ0JywgJ2JvdHRvbSByaWdodCcsXG4gICAgICogJ3RvcCBzdGFydCcsICd0b3AgZW5kJywgJ2JvdHRvbSBzdGFydCcsICdib3R0b20gZW5kJ1xuICAgICAqIEB0eXBlIHN0cmluZ1xuICAgICAqL1xuICAgIGdldCBwb3NpdGlvbigpOiBOYkJhZGdlUG9zaXRpb247XG4gICAgc2V0IHBvc2l0aW9uKHZhbHVlOiBOYkJhZGdlUG9zaXRpb24pO1xuICAgIHByb3RlY3RlZCBfZGVmYXVsdFBvc2l0aW9uOiBOYkJhZGdlUG9zaXRpb247XG4gICAgcHJvdGVjdGVkIF9wb3NpdGlvbjogTmJCYWRnZVBvc2l0aW9uO1xuICAgIC8qKlxuICAgICAqIEJhZGdlIHN0YXR1cyAoYWRkcyBzcGVjaWZpYyBzdHlsZXMpOlxuICAgICAqICdiYXNpYycsICdwcmltYXJ5JywgJ2luZm8nLCAnc3VjY2VzcycsICd3YXJuaW5nJywgJ2RhbmdlcicsICdjb250cm9sJ1xuICAgICAqL1xuICAgIGdldCBzdGF0dXMoKTogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgc2V0IHN0YXR1cyh2YWx1ZTogTmJDb21wb25lbnRTdGF0dXMpO1xuICAgIHByb3RlY3RlZCBfc3RhdHVzOiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICBnZXQgcHJpbWFyeSgpOiBib29sZWFuO1xuICAgIGdldCBzdWNjZXNzKCk6IGJvb2xlYW47XG4gICAgZ2V0IGluZm8oKTogYm9vbGVhbjtcbiAgICBnZXQgd2FybmluZygpOiBib29sZWFuO1xuICAgIGdldCBkYW5nZXIoKTogYm9vbGVhbjtcbiAgICBnZXQgYmFzaWMoKTogYm9vbGVhbjtcbiAgICBnZXQgY29udHJvbCgpOiBib29sZWFuO1xuICAgIGdldCB0b3AoKTogYm9vbGVhbjtcbiAgICBnZXQgcmlnaHQoKTogYm9vbGVhbjtcbiAgICBnZXQgYm90dG9tKCk6IGJvb2xlYW47XG4gICAgZ2V0IGxlZnQoKTogYm9vbGVhbjtcbiAgICBnZXQgc3RhcnQoKTogYm9vbGVhbjtcbiAgICBnZXQgZW5kKCk6IGJvb2xlYW47XG59XG4iXX0=