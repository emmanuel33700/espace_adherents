/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NbComponentStatus } from '../component-status';
/**
 * Chat form component.
 *
 * Show a message form with a send message button.
 *
 * ```ts
 * <nb-chat-form showButton="true" buttonIcon="nb-send">
 * </nb-chat-form>
 * ```
 *
 * When `[dropFiles]="true"` handles files drag&drop with a file preview.
 *
 * Drag & drop available for files and images:
 * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)
 *
 * New message could be tracked outside by using `(send)` output.
 *
 * ```ts
 * <nb-chat-form (send)="onNewMessage($event)">
 * </nb-chat-form>
 *
 * // ...
 *
 * onNewMessage({ message: string, files: any[] }) {
 *   this.service.sendToServer(message, files);
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbChatFormComponent {
    protected cd: ChangeDetectorRef;
    protected domSanitizer: DomSanitizer;
    status: NbComponentStatus;
    inputFocus: boolean;
    inputHover: boolean;
    droppedFiles: any[];
    imgDropTypes: string[];
    /**
     * Predefined message text
     * @type {string}
     */
    message: string;
    /**
     * Message placeholder text
     * @type {string}
     */
    messagePlaceholder: string;
    /**
     * Send button title
     * @type {string}
     */
    buttonTitle: string;
    /**
     * Send button icon, shown if `buttonTitle` is empty
     * @type {string}
     */
    buttonIcon: string;
    /**
     * Show send button
     * @type {boolean}
     */
    showButton: boolean;
    /**
     * Show send button
     * @type {boolean}
     */
    dropFiles: boolean;
    /**
     * File drop placeholder text
     * @type {string}
     */
    dropFilePlaceholder: string;
    /**
     *
     * @type {EventEmitter<{ message: string, files: File[] }>}
     */
    send: EventEmitter<{
        message: string;
        files: File[];
    }>;
    fileOver: boolean;
    constructor(cd: ChangeDetectorRef, domSanitizer: DomSanitizer);
    onDrop(event: any): void;
    removeFile(file: any): void;
    onDragOver(): void;
    onDragLeave(): void;
    sendMessage(): void;
    setStatus(status: NbComponentStatus): void;
    getInputStatus(): NbComponentStatus;
    getButtonStatus(): NbComponentStatus;
    protected getHighlightStatus(): NbComponentStatus;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbChatFormComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbChatFormComponent, "nb-chat-form", never, { "message": "message"; "messagePlaceholder": "messagePlaceholder"; "buttonTitle": "buttonTitle"; "buttonIcon": "buttonIcon"; "showButton": "showButton"; "dropFiles": "dropFiles"; "dropFilePlaceholder": "dropFilePlaceholder"; }, { "send": "send"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC1mb3JtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjaGF0LWZvcm0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4REEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U3RhdHVzIH0gZnJvbSAnLi4vY29tcG9uZW50LXN0YXR1cyc7XG4vKipcbiAqIENoYXQgZm9ybSBjb21wb25lbnQuXG4gKlxuICogU2hvdyBhIG1lc3NhZ2UgZm9ybSB3aXRoIGEgc2VuZCBtZXNzYWdlIGJ1dHRvbi5cbiAqXG4gKiBgYGB0c1xuICogPG5iLWNoYXQtZm9ybSBzaG93QnV0dG9uPVwidHJ1ZVwiIGJ1dHRvbkljb249XCJuYi1zZW5kXCI+XG4gKiA8L25iLWNoYXQtZm9ybT5cbiAqIGBgYFxuICpcbiAqIFdoZW4gYFtkcm9wRmlsZXNdPVwidHJ1ZVwiYCBoYW5kbGVzIGZpbGVzIGRyYWcmZHJvcCB3aXRoIGEgZmlsZSBwcmV2aWV3LlxuICpcbiAqIERyYWcgJiBkcm9wIGF2YWlsYWJsZSBmb3IgZmlsZXMgYW5kIGltYWdlczpcbiAqIEBzdGFja2VkLWV4YW1wbGUoRHJhZyAmIERyb3AgQ2hhdCwgY2hhdC9jaGF0LWRyb3AuY29tcG9uZW50KVxuICpcbiAqIE5ldyBtZXNzYWdlIGNvdWxkIGJlIHRyYWNrZWQgb3V0c2lkZSBieSB1c2luZyBgKHNlbmQpYCBvdXRwdXQuXG4gKlxuICogYGBgdHNcbiAqIDxuYi1jaGF0LWZvcm0gKHNlbmQpPVwib25OZXdNZXNzYWdlKCRldmVudClcIj5cbiAqIDwvbmItY2hhdC1mb3JtPlxuICpcbiAqIC8vIC4uLlxuICpcbiAqIG9uTmV3TWVzc2FnZSh7IG1lc3NhZ2U6IHN0cmluZywgZmlsZXM6IGFueVtdIH0pIHtcbiAqICAgdGhpcy5zZXJ2aWNlLnNlbmRUb1NlcnZlcihtZXNzYWdlLCBmaWxlcyk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDaGF0Rm9ybUNvbXBvbmVudCB7XG4gICAgcHJvdGVjdGVkIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcm90ZWN0ZWQgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXI7XG4gICAgc3RhdHVzOiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICBpbnB1dEZvY3VzOiBib29sZWFuO1xuICAgIGlucHV0SG92ZXI6IGJvb2xlYW47XG4gICAgZHJvcHBlZEZpbGVzOiBhbnlbXTtcbiAgICBpbWdEcm9wVHlwZXM6IHN0cmluZ1tdO1xuICAgIC8qKlxuICAgICAqIFByZWRlZmluZWQgbWVzc2FnZSB0ZXh0XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogTWVzc2FnZSBwbGFjZWhvbGRlciB0ZXh0XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBtZXNzYWdlUGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZW5kIGJ1dHRvbiB0aXRsZVxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgYnV0dG9uVGl0bGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZW5kIGJ1dHRvbiBpY29uLCBzaG93biBpZiBgYnV0dG9uVGl0bGVgIGlzIGVtcHR5XG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBidXR0b25JY29uOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2hvdyBzZW5kIGJ1dHRvblxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIHNob3dCdXR0b246IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogU2hvdyBzZW5kIGJ1dHRvblxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGRyb3BGaWxlczogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBGaWxlIGRyb3AgcGxhY2Vob2xkZXIgdGV4dFxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgZHJvcEZpbGVQbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHR5cGUge0V2ZW50RW1pdHRlcjx7IG1lc3NhZ2U6IHN0cmluZywgZmlsZXM6IEZpbGVbXSB9Pn1cbiAgICAgKi9cbiAgICBzZW5kOiBFdmVudEVtaXR0ZXI8e1xuICAgICAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgICAgIGZpbGVzOiBGaWxlW107XG4gICAgfT47XG4gICAgZmlsZU92ZXI6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoY2Q6IENoYW5nZURldGVjdG9yUmVmLCBkb21TYW5pdGl6ZXI6IERvbVNhbml0aXplcik7XG4gICAgb25Ecm9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJlbW92ZUZpbGUoZmlsZTogYW55KTogdm9pZDtcbiAgICBvbkRyYWdPdmVyKCk6IHZvaWQ7XG4gICAgb25EcmFnTGVhdmUoKTogdm9pZDtcbiAgICBzZW5kTWVzc2FnZSgpOiB2b2lkO1xuICAgIHNldFN0YXR1cyhzdGF0dXM6IE5iQ29tcG9uZW50U3RhdHVzKTogdm9pZDtcbiAgICBnZXRJbnB1dFN0YXR1cygpOiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICBnZXRCdXR0b25TdGF0dXMoKTogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgcHJvdGVjdGVkIGdldEhpZ2hsaWdodFN0YXR1cygpOiBOYkNvbXBvbmVudFN0YXR1cztcbn1cbiJdfQ==