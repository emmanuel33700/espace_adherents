/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter, OnChanges, Type, SimpleChanges } from '@angular/core';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';
import { NbDateService } from '../../services/date.service';
import * as ɵngcc0 from '@angular/core';
export declare const MONTHS_IN_VIEW = 12;
export declare const MONTHS_IN_COLUMN = 4;
export declare class NbCalendarMonthPickerComponent<D, T> implements OnChanges {
    protected dateService: NbDateService<D>;
    min: D;
    max: D;
    filter: (D: any) => boolean;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    /**
     * Visible month
     **/
    month: D;
    /**
     * Selected date
     **/
    date: D;
    monthChange: EventEmitter<D>;
    months: D[][];
    constructor(dateService: NbDateService<D>);
    set _cellComponent(cellComponent: Type<NbCalendarCell<D, T>>);
    cellComponent: Type<NbCalendarCell<any, any>>;
    get large(): boolean;
    ngOnChanges(changes: SimpleChanges): void;
    initMonths(): void;
    onSelect(month: D): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarMonthPickerComponent<any, any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarMonthPickerComponent<any, any>, "nb-calendar-month-picker", never, { "size": "size"; "_cellComponent": "cellComponent"; "min": "min"; "max": "max"; "filter": "filter"; "month": "month"; "date": "date"; }, { "monthChange": "monthChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItbW9udGgtcGlja2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1tb250aC1waWNrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFR5cGUsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iQ2FsZW5kYXJDZWxsLCBOYkNhbGVuZGFyU2l6ZSwgTmJDYWxlbmRhclNpemVWYWx1ZXMgfSBmcm9tICcuLi8uLi9tb2RlbCc7XG5pbXBvcnQgeyBOYkRhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZGF0ZS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE1PTlRIU19JTl9WSUVXID0gMTI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBNT05USFNfSU5fQ09MVU1OID0gNDtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2FsZW5kYXJNb250aFBpY2tlckNvbXBvbmVudDxELCBUPiBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJvdGVjdGVkIGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+O1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgZmlsdGVyOiAoRDogYW55KSA9PiBib29sZWFuO1xuICAgIHNpemU6IE5iQ2FsZW5kYXJTaXplO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9zaXplOiBOYkNhbGVuZGFyU2l6ZVZhbHVlcztcbiAgICAvKipcbiAgICAgKiBWaXNpYmxlIG1vbnRoXG4gICAgICoqL1xuICAgIG1vbnRoOiBEO1xuICAgIC8qKlxuICAgICAqIFNlbGVjdGVkIGRhdGVcbiAgICAgKiovXG4gICAgZGF0ZTogRDtcbiAgICBtb250aENoYW5nZTogRXZlbnRFbWl0dGVyPEQ+O1xuICAgIG1vbnRoczogRFtdW107XG4gICAgY29uc3RydWN0b3IoZGF0ZVNlcnZpY2U6IE5iRGF0ZVNlcnZpY2U8RD4pO1xuICAgIHNldCBfY2VsbENvbXBvbmVudChjZWxsQ29tcG9uZW50OiBUeXBlPE5iQ2FsZW5kYXJDZWxsPEQsIFQ+Pik7XG4gICAgY2VsbENvbXBvbmVudDogVHlwZTxOYkNhbGVuZGFyQ2VsbDxhbnksIGFueT4+O1xuICAgIGdldCBsYXJnZSgpOiBib29sZWFuO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIGluaXRNb250aHMoKTogdm9pZDtcbiAgICBvblNlbGVjdChtb250aDogRCk6IHZvaWQ7XG59XG4iXX0=