/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { QueryList, TemplateRef } from '@angular/core';
import { NbBooleanInput } from '../helpers';
import { NbStepComponent } from './step.component';
import * as ɵngcc0 from '@angular/core';
export declare type NbStepperOrientation = 'vertical' | 'horizontal';
/**
 * Stepper component
 *
 * @stacked-example(Showcase, stepper/stepper-showcase.component)
 *
 * ### Installation
 *
 * Import `NbStepperModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbStepperModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * If step label is string you can pass it as `label` attribute. Otherwise ng-template should be used:
 * ```html
 * // ...
 * <nb-stepper orientation="horizontal">
 *   <nb-step label="step number one">
 *       // ... step content here
 *   </nb-step>
 *   <nb-step label="stepLabel">
 *       <ng-template #stepLabel>
 *           <div>
 *               step number two
 *           </div>
 *       </ng-template>
 *       // ... step content here
 *   </nb-step>
 * </nb-stepper>
 * ```
 *
 * When linear mode enabled user can't move forward unless current step is complete.
 * @stacked-example(Linear, stepper/stepper-linear.component)
 *
 * Specify `[stepControl]="form"` and stepper allow go to the next step only if form is valid.
 * You can disable it via `linear` mode setting.
 * ```html
 * // ...
 * <nb-stepper  orientation="horizontal">
 *   <nb-step label="step number one" [stepControl]="form">
 *     <form [formGroup]="form">
 *       // ...
 *     </form>
 *   </nb-step>
 *    // ...
 * </nb-stepper>
 * ```
 *
 * @stacked-example(Validation, stepper/stepper-validation.component)
 *
 * Stepper component has two layout options - `vertical` & `horizontal`
 * @stacked-example(Vertical, stepper/stepper-vertical.component)
 *
 * `disableStepNavigation` disables navigation by clicking on steps, so user can navigate only using
 * 'nbStepperPrevious' and 'nbStepperNext' buttons.
 * @stacked-example(Disabled steps navigation, stepper/stepper-disabled-step-nav.component)
 *
 * @styles
 *
 * stepper-step-text-color:
 * stepper-step-text-font-family:
 * stepper-step-text-font-size:
 * stepper-step-text-font-weight:
 * stepper-step-text-line-height:
 * stepper-step-active-text-color:
 * stepper-step-completed-text-color:
 * stepper-step-index-border-color:
 * stepper-step-index-border-style:
 * stepper-step-index-border-width:
 * stepper-step-index-border-radius:
 * stepper-step-index-width:
 * stepper-step-index-active-border-color:
 * stepper-step-index-completed-background-color:
 * stepper-step-index-completed-border-color:
 * stepper-step-index-completed-text-color:
 * stepper-connector-background-color:
 * stepper-connector-completed-background-color:
 * stepper-horizontal-connector-margin:
 * stepper-vertical-connector-margin:
 * stepper-step-content-padding:
 */
export declare class NbStepperComponent {
    /**
     * Selected step index
     */
    get selectedIndex(): number;
    set selectedIndex(index: number);
    protected _selectedIndex: number;
    /**
     * Disables navigation by clicking on steps. False by default
     * @param {boolean} value
     */
    set disableStepNavigation(value: boolean);
    get disableStepNavigation(): boolean;
    protected _disableStepNavigation: boolean;
    static ngAcceptInputType_disableStepNavigation: NbBooleanInput;
    /**
     * Selected step component
     */
    get selected(): NbStepComponent;
    set selected(step: NbStepComponent);
    /**
     * Stepper orientation - `horizontal`|`vertical`
     */
    orientation: NbStepperOrientation;
    /**
     * Allow moving forward only if the current step is complete
     * @default true
     */
    set linear(value: boolean);
    get linear(): boolean;
    protected _linear: boolean;
    static ngAcceptInputType_linear: NbBooleanInput;
    get vertical(): boolean;
    get horizontal(): boolean;
    steps: QueryList<NbStepComponent>;
    /**
     * Navigate to next step
     * */
    next(): void;
    /**
     * Navigate to previous step
     * */
    previous(): void;
    /**
     * Reset stepper and stepControls to initial state
     * */
    reset(): void;
    isStepSelected(step: NbStepComponent): boolean;
    getStepTemplate(step: NbStepComponent): TemplateRef<any> | null;
    protected isStepValid(index: number): boolean;
    protected canBeSelected(indexToCheck: number): boolean;
    protected markCurrentStepInteracted(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbStepperComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbStepperComponent, "nb-stepper", never, { "orientation": "orientation"; "selectedIndex": "selectedIndex"; "disableStepNavigation": "disableStepNavigation"; "selected": "selected"; "linear": "linear"; }, {}, ["steps"], ["nb-step"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic3RlcHBlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FBUUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0SUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkJvb2xlYW5JbnB1dCB9IGZyb20gJy4uL2hlbHBlcnMnO1xuaW1wb3J0IHsgTmJTdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iU3RlcHBlck9yaWVudGF0aW9uID0gJ3ZlcnRpY2FsJyB8ICdob3Jpem9udGFsJztcbi8qKlxuICogU3RlcHBlciBjb21wb25lbnRcbiAqXG4gKiBAc3RhY2tlZC1leGFtcGxlKFNob3djYXNlLCBzdGVwcGVyL3N0ZXBwZXItc2hvd2Nhc2UuY29tcG9uZW50KVxuICpcbiAqICMjIyBJbnN0YWxsYXRpb25cbiAqXG4gKiBJbXBvcnQgYE5iU3RlcHBlck1vZHVsZWAgdG8geW91ciBmZWF0dXJlIG1vZHVsZS5cbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJTdGVwcGVyTW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBJZiBzdGVwIGxhYmVsIGlzIHN0cmluZyB5b3UgY2FuIHBhc3MgaXQgYXMgYGxhYmVsYCBhdHRyaWJ1dGUuIE90aGVyd2lzZSBuZy10ZW1wbGF0ZSBzaG91bGQgYmUgdXNlZDpcbiAqIGBgYGh0bWxcbiAqIC8vIC4uLlxuICogPG5iLXN0ZXBwZXIgb3JpZW50YXRpb249XCJob3Jpem9udGFsXCI+XG4gKiAgIDxuYi1zdGVwIGxhYmVsPVwic3RlcCBudW1iZXIgb25lXCI+XG4gKiAgICAgICAvLyAuLi4gc3RlcCBjb250ZW50IGhlcmVcbiAqICAgPC9uYi1zdGVwPlxuICogICA8bmItc3RlcCBsYWJlbD1cInN0ZXBMYWJlbFwiPlxuICogICAgICAgPG5nLXRlbXBsYXRlICNzdGVwTGFiZWw+XG4gKiAgICAgICAgICAgPGRpdj5cbiAqICAgICAgICAgICAgICAgc3RlcCBudW1iZXIgdHdvXG4gKiAgICAgICAgICAgPC9kaXY+XG4gKiAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgLy8gLi4uIHN0ZXAgY29udGVudCBoZXJlXG4gKiAgIDwvbmItc3RlcD5cbiAqIDwvbmItc3RlcHBlcj5cbiAqIGBgYFxuICpcbiAqIFdoZW4gbGluZWFyIG1vZGUgZW5hYmxlZCB1c2VyIGNhbid0IG1vdmUgZm9yd2FyZCB1bmxlc3MgY3VycmVudCBzdGVwIGlzIGNvbXBsZXRlLlxuICogQHN0YWNrZWQtZXhhbXBsZShMaW5lYXIsIHN0ZXBwZXIvc3RlcHBlci1saW5lYXIuY29tcG9uZW50KVxuICpcbiAqIFNwZWNpZnkgYFtzdGVwQ29udHJvbF09XCJmb3JtXCJgIGFuZCBzdGVwcGVyIGFsbG93IGdvIHRvIHRoZSBuZXh0IHN0ZXAgb25seSBpZiBmb3JtIGlzIHZhbGlkLlxuICogWW91IGNhbiBkaXNhYmxlIGl0IHZpYSBgbGluZWFyYCBtb2RlIHNldHRpbmcuXG4gKiBgYGBodG1sXG4gKiAvLyAuLi5cbiAqIDxuYi1zdGVwcGVyICBvcmllbnRhdGlvbj1cImhvcml6b250YWxcIj5cbiAqICAgPG5iLXN0ZXAgbGFiZWw9XCJzdGVwIG51bWJlciBvbmVcIiBbc3RlcENvbnRyb2xdPVwiZm9ybVwiPlxuICogICAgIDxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICogICAgICAgLy8gLi4uXG4gKiAgICAgPC9mb3JtPlxuICogICA8L25iLXN0ZXA+XG4gKiAgICAvLyAuLi5cbiAqIDwvbmItc3RlcHBlcj5cbiAqIGBgYFxuICpcbiAqIEBzdGFja2VkLWV4YW1wbGUoVmFsaWRhdGlvbiwgc3RlcHBlci9zdGVwcGVyLXZhbGlkYXRpb24uY29tcG9uZW50KVxuICpcbiAqIFN0ZXBwZXIgY29tcG9uZW50IGhhcyB0d28gbGF5b3V0IG9wdGlvbnMgLSBgdmVydGljYWxgICYgYGhvcml6b250YWxgXG4gKiBAc3RhY2tlZC1leGFtcGxlKFZlcnRpY2FsLCBzdGVwcGVyL3N0ZXBwZXItdmVydGljYWwuY29tcG9uZW50KVxuICpcbiAqIGBkaXNhYmxlU3RlcE5hdmlnYXRpb25gIGRpc2FibGVzIG5hdmlnYXRpb24gYnkgY2xpY2tpbmcgb24gc3RlcHMsIHNvIHVzZXIgY2FuIG5hdmlnYXRlIG9ubHkgdXNpbmdcbiAqICduYlN0ZXBwZXJQcmV2aW91cycgYW5kICduYlN0ZXBwZXJOZXh0JyBidXR0b25zLlxuICogQHN0YWNrZWQtZXhhbXBsZShEaXNhYmxlZCBzdGVwcyBuYXZpZ2F0aW9uLCBzdGVwcGVyL3N0ZXBwZXItZGlzYWJsZWQtc3RlcC1uYXYuY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBzdGVwcGVyLXN0ZXAtdGV4dC1jb2xvcjpcbiAqIHN0ZXBwZXItc3RlcC10ZXh0LWZvbnQtZmFtaWx5OlxuICogc3RlcHBlci1zdGVwLXRleHQtZm9udC1zaXplOlxuICogc3RlcHBlci1zdGVwLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBzdGVwcGVyLXN0ZXAtdGV4dC1saW5lLWhlaWdodDpcbiAqIHN0ZXBwZXItc3RlcC1hY3RpdmUtdGV4dC1jb2xvcjpcbiAqIHN0ZXBwZXItc3RlcC1jb21wbGV0ZWQtdGV4dC1jb2xvcjpcbiAqIHN0ZXBwZXItc3RlcC1pbmRleC1ib3JkZXItY29sb3I6XG4gKiBzdGVwcGVyLXN0ZXAtaW5kZXgtYm9yZGVyLXN0eWxlOlxuICogc3RlcHBlci1zdGVwLWluZGV4LWJvcmRlci13aWR0aDpcbiAqIHN0ZXBwZXItc3RlcC1pbmRleC1ib3JkZXItcmFkaXVzOlxuICogc3RlcHBlci1zdGVwLWluZGV4LXdpZHRoOlxuICogc3RlcHBlci1zdGVwLWluZGV4LWFjdGl2ZS1ib3JkZXItY29sb3I6XG4gKiBzdGVwcGVyLXN0ZXAtaW5kZXgtY29tcGxldGVkLWJhY2tncm91bmQtY29sb3I6XG4gKiBzdGVwcGVyLXN0ZXAtaW5kZXgtY29tcGxldGVkLWJvcmRlci1jb2xvcjpcbiAqIHN0ZXBwZXItc3RlcC1pbmRleC1jb21wbGV0ZWQtdGV4dC1jb2xvcjpcbiAqIHN0ZXBwZXItY29ubmVjdG9yLWJhY2tncm91bmQtY29sb3I6XG4gKiBzdGVwcGVyLWNvbm5lY3Rvci1jb21wbGV0ZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHN0ZXBwZXItaG9yaXpvbnRhbC1jb25uZWN0b3ItbWFyZ2luOlxuICogc3RlcHBlci12ZXJ0aWNhbC1jb25uZWN0b3ItbWFyZ2luOlxuICogc3RlcHBlci1zdGVwLWNvbnRlbnQtcGFkZGluZzpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJTdGVwcGVyQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBTZWxlY3RlZCBzdGVwIGluZGV4XG4gICAgICovXG4gICAgZ2V0IHNlbGVjdGVkSW5kZXgoKTogbnVtYmVyO1xuICAgIHNldCBzZWxlY3RlZEluZGV4KGluZGV4OiBudW1iZXIpO1xuICAgIHByb3RlY3RlZCBfc2VsZWN0ZWRJbmRleDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIERpc2FibGVzIG5hdmlnYXRpb24gYnkgY2xpY2tpbmcgb24gc3RlcHMuIEZhbHNlIGJ5IGRlZmF1bHRcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZhbHVlXG4gICAgICovXG4gICAgc2V0IGRpc2FibGVTdGVwTmF2aWdhdGlvbih2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IGRpc2FibGVTdGVwTmF2aWdhdGlvbigpOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfZGlzYWJsZVN0ZXBOYXZpZ2F0aW9uOiBib29sZWFuO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9kaXNhYmxlU3RlcE5hdmlnYXRpb246IE5iQm9vbGVhbklucHV0O1xuICAgIC8qKlxuICAgICAqIFNlbGVjdGVkIHN0ZXAgY29tcG9uZW50XG4gICAgICovXG4gICAgZ2V0IHNlbGVjdGVkKCk6IE5iU3RlcENvbXBvbmVudDtcbiAgICBzZXQgc2VsZWN0ZWQoc3RlcDogTmJTdGVwQ29tcG9uZW50KTtcbiAgICAvKipcbiAgICAgKiBTdGVwcGVyIG9yaWVudGF0aW9uIC0gYGhvcml6b250YWxgfGB2ZXJ0aWNhbGBcbiAgICAgKi9cbiAgICBvcmllbnRhdGlvbjogTmJTdGVwcGVyT3JpZW50YXRpb247XG4gICAgLyoqXG4gICAgICogQWxsb3cgbW92aW5nIGZvcndhcmQgb25seSBpZiB0aGUgY3VycmVudCBzdGVwIGlzIGNvbXBsZXRlXG4gICAgICogQGRlZmF1bHQgdHJ1ZVxuICAgICAqL1xuICAgIHNldCBsaW5lYXIodmFsdWU6IGJvb2xlYW4pO1xuICAgIGdldCBsaW5lYXIoKTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2xpbmVhcjogYm9vbGVhbjtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbGluZWFyOiBOYkJvb2xlYW5JbnB1dDtcbiAgICBnZXQgdmVydGljYWwoKTogYm9vbGVhbjtcbiAgICBnZXQgaG9yaXpvbnRhbCgpOiBib29sZWFuO1xuICAgIHN0ZXBzOiBRdWVyeUxpc3Q8TmJTdGVwQ29tcG9uZW50PjtcbiAgICAvKipcbiAgICAgKiBOYXZpZ2F0ZSB0byBuZXh0IHN0ZXBcbiAgICAgKiAqL1xuICAgIG5leHQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBOYXZpZ2F0ZSB0byBwcmV2aW91cyBzdGVwXG4gICAgICogKi9cbiAgICBwcmV2aW91cygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJlc2V0IHN0ZXBwZXIgYW5kIHN0ZXBDb250cm9scyB0byBpbml0aWFsIHN0YXRlXG4gICAgICogKi9cbiAgICByZXNldCgpOiB2b2lkO1xuICAgIGlzU3RlcFNlbGVjdGVkKHN0ZXA6IE5iU3RlcENvbXBvbmVudCk6IGJvb2xlYW47XG4gICAgZ2V0U3RlcFRlbXBsYXRlKHN0ZXA6IE5iU3RlcENvbXBvbmVudCk6IFRlbXBsYXRlUmVmPGFueT4gfCBudWxsO1xuICAgIHByb3RlY3RlZCBpc1N0ZXBWYWxpZChpbmRleDogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgY2FuQmVTZWxlY3RlZChpbmRleFRvQ2hlY2s6IG51bWJlcik6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIG1hcmtDdXJyZW50U3RlcEludGVyYWN0ZWQoKTogdm9pZDtcbn1cbiJdfQ==