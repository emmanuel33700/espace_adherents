import { ElementRef, InjectionToken } from '@angular/core';
import { CdkCell, CdkCellDef, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkHeaderCell, CdkHeaderCellDef } from '@angular/cdk/table';
/**
 * Cell definition for the nb-table.
 * Captures the template of a column's data row cell as well as cell-specific properties.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbCellDefDirective extends CdkCellDef {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCellDefDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbCellDefDirective, "[nbCellDef]", never, {}, {}, never>;
}
/**
 * Header cell definition for the nb-table.
 * Captures the template of a column's header cell and as well as cell-specific properties.
 */
export declare class NbHeaderCellDefDirective extends CdkHeaderCellDef {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbHeaderCellDefDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbHeaderCellDefDirective, "[nbHeaderCellDef]", never, {}, {}, never>;
}
/**
 * Footer cell definition for the nb-table.
 * Captures the template of a column's footer cell and as well as cell-specific properties.
 */
export declare class NbFooterCellDefDirective extends CdkFooterCellDef {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbFooterCellDefDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbFooterCellDefDirective, "[nbFooterCellDef]", never, {}, {}, never>;
}
export declare const NB_SORT_HEADER_COLUMN_DEF: InjectionToken<unknown>;
/**
 * Column definition for the nb-table.
 * Defines a set of cells available for a table column.
 */
export declare class NbColumnDefDirective extends CdkColumnDef {
    /** Unique name for this column. */
    name: string;
    /** Whether this column should be sticky positioned at the start of the row */
    sticky: boolean;
    /** Whether this column should be sticky positioned on the end of the row */
    stickyEnd: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbColumnDefDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbColumnDefDirective, "[nbColumnDef]", never, { "name": "nbColumnDef"; "sticky": "sticky"; "stickyEnd": "stickyEnd"; }, {}, never>;
}
/** Header cell template container that adds the right classes and role. */
export declare class NbHeaderCellDirective extends CdkHeaderCell {
    constructor(columnDef: NbColumnDefDirective, elementRef: ElementRef<HTMLElement>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbHeaderCellDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbHeaderCellDirective, "nb-header-cell, th[nbHeaderCell]", never, {}, {}, never>;
}
/** Footer cell template container that adds the right classes and role. */
export declare class NbFooterCellDirective extends CdkFooterCell {
    constructor(columnDef: NbColumnDefDirective, elementRef: ElementRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbFooterCellDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbFooterCellDirective, "nb-footer-cell, td[nbFooterCell]", never, {}, {}, never>;
}
/** Cell template container that adds the right classes and role. */
export declare class NbCellDirective extends CdkCell {
    constructor(columnDef: NbColumnDefDirective, elementRef: ElementRef<HTMLElement>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCellDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbCellDirective, "nb-cell, td[nbCell]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC5kLnRzIiwic291cmNlcyI6WyJjZWxsLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFNQTs7O0FBQ0E7Ozs7Ozs7O0FBTUE7Ozs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7OztBQWFBOzs7Ozs7QUFJQTs7Ozs7O0FBSUE7Ozs7OztBQUlBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENka0NlbGwsIENka0NlbGxEZWYsIENka0NvbHVtbkRlZiwgQ2RrRm9vdGVyQ2VsbCwgQ2RrRm9vdGVyQ2VsbERlZiwgQ2RrSGVhZGVyQ2VsbCwgQ2RrSGVhZGVyQ2VsbERlZiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay90YWJsZSc7XG4vKipcbiAqIENlbGwgZGVmaW5pdGlvbiBmb3IgdGhlIG5iLXRhYmxlLlxuICogQ2FwdHVyZXMgdGhlIHRlbXBsYXRlIG9mIGEgY29sdW1uJ3MgZGF0YSByb3cgY2VsbCBhcyB3ZWxsIGFzIGNlbGwtc3BlY2lmaWMgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDZWxsRGVmRGlyZWN0aXZlIGV4dGVuZHMgQ2RrQ2VsbERlZiB7XG59XG4vKipcbiAqIEhlYWRlciBjZWxsIGRlZmluaXRpb24gZm9yIHRoZSBuYi10YWJsZS5cbiAqIENhcHR1cmVzIHRoZSB0ZW1wbGF0ZSBvZiBhIGNvbHVtbidzIGhlYWRlciBjZWxsIGFuZCBhcyB3ZWxsIGFzIGNlbGwtc3BlY2lmaWMgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJIZWFkZXJDZWxsRGVmRGlyZWN0aXZlIGV4dGVuZHMgQ2RrSGVhZGVyQ2VsbERlZiB7XG59XG4vKipcbiAqIEZvb3RlciBjZWxsIGRlZmluaXRpb24gZm9yIHRoZSBuYi10YWJsZS5cbiAqIENhcHR1cmVzIHRoZSB0ZW1wbGF0ZSBvZiBhIGNvbHVtbidzIGZvb3RlciBjZWxsIGFuZCBhcyB3ZWxsIGFzIGNlbGwtc3BlY2lmaWMgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJGb290ZXJDZWxsRGVmRGlyZWN0aXZlIGV4dGVuZHMgQ2RrRm9vdGVyQ2VsbERlZiB7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBOQl9TT1JUX0hFQURFUl9DT0xVTU5fREVGOiBJbmplY3Rpb25Ub2tlbjx1bmtub3duPjtcbi8qKlxuICogQ29sdW1uIGRlZmluaXRpb24gZm9yIHRoZSBuYi10YWJsZS5cbiAqIERlZmluZXMgYSBzZXQgb2YgY2VsbHMgYXZhaWxhYmxlIGZvciBhIHRhYmxlIGNvbHVtbi5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDb2x1bW5EZWZEaXJlY3RpdmUgZXh0ZW5kcyBDZGtDb2x1bW5EZWYge1xuICAgIC8qKiBVbmlxdWUgbmFtZSBmb3IgdGhpcyBjb2x1bW4uICovXG4gICAgbmFtZTogc3RyaW5nO1xuICAgIC8qKiBXaGV0aGVyIHRoaXMgY29sdW1uIHNob3VsZCBiZSBzdGlja3kgcG9zaXRpb25lZCBhdCB0aGUgc3RhcnQgb2YgdGhlIHJvdyAqL1xuICAgIHN0aWNreTogYm9vbGVhbjtcbiAgICAvKiogV2hldGhlciB0aGlzIGNvbHVtbiBzaG91bGQgYmUgc3RpY2t5IHBvc2l0aW9uZWQgb24gdGhlIGVuZCBvZiB0aGUgcm93ICovXG4gICAgc3RpY2t5RW5kOiBib29sZWFuO1xufVxuLyoqIEhlYWRlciBjZWxsIHRlbXBsYXRlIGNvbnRhaW5lciB0aGF0IGFkZHMgdGhlIHJpZ2h0IGNsYXNzZXMgYW5kIHJvbGUuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkhlYWRlckNlbGxEaXJlY3RpdmUgZXh0ZW5kcyBDZGtIZWFkZXJDZWxsIHtcbiAgICBjb25zdHJ1Y3Rvcihjb2x1bW5EZWY6IE5iQ29sdW1uRGVmRGlyZWN0aXZlLCBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pik7XG59XG4vKiogRm9vdGVyIGNlbGwgdGVtcGxhdGUgY29udGFpbmVyIHRoYXQgYWRkcyB0aGUgcmlnaHQgY2xhc3NlcyBhbmQgcm9sZS4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iRm9vdGVyQ2VsbERpcmVjdGl2ZSBleHRlbmRzIENka0Zvb3RlckNlbGwge1xuICAgIGNvbnN0cnVjdG9yKGNvbHVtbkRlZjogTmJDb2x1bW5EZWZEaXJlY3RpdmUsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xufVxuLyoqIENlbGwgdGVtcGxhdGUgY29udGFpbmVyIHRoYXQgYWRkcyB0aGUgcmlnaHQgY2xhc3NlcyBhbmQgcm9sZS4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2VsbERpcmVjdGl2ZSBleHRlbmRzIENka0NlbGwge1xuICAgIGNvbnN0cnVjdG9yKGNvbHVtbkRlZjogTmJDb2x1bW5EZWZEaXJlY3RpdmUsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+KTtcbn1cbiJdfQ==