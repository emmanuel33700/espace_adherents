/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Observable } from 'rxjs';
import { NbJSThemeOptions } from './js-themes/theme.options';
import { NbJSThemesRegistry } from './js-themes-registry.service';
import { NbMediaBreakpointsService, NbMediaBreakpoint } from './breakpoints.service';
/**
 * Main Nebular service. Includes various helper methods.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbThemeService {
    protected options: any;
    private breakpointService;
    private jsThemesRegistry;
    currentTheme: string;
    private themeChanges$;
    private appendLayoutClass$;
    private removeLayoutClass$;
    private changeWindowWidth$;
    constructor(options: any, breakpointService: NbMediaBreakpointsService, jsThemesRegistry: NbJSThemesRegistry);
    /**
     * Change current application theme
     * @param {string} name
     */
    changeTheme(name: string): void;
    changeWindowWidth(width: number): void;
    /**
     * Returns a theme object with variables (color/paddings/etc) on a theme change.
     * Once subscribed - returns current theme.
     *
     * @returns {Observable<NbJSThemeOptions>}
     */
    getJsTheme(): Observable<NbJSThemeOptions>;
    /**
     * Triggers media query breakpoint change
     * Returns a pair where the first item is previous media breakpoint and the second item is current breakpoit.
     * ```ts
     *  [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`
     * ```
     * @returns {Observable<[NbMediaBreakpoint, NbMediaBreakpoint]>}
     */
    onMediaQueryChange(): Observable<NbMediaBreakpoint[]>;
    /**
     * Triggered when current theme is changed
     * @returns {Observable<any>}
     */
    onThemeChange(): Observable<any>;
    /**
     * Append a class to nb-layout
     * @param {string} className
     */
    appendLayoutClass(className: string): void;
    /**
     * Triggered when a new class is added to nb-layout through `appendLayoutClass` method
     * @returns {Observable<any>}
     */
    onAppendLayoutClass(): Observable<any>;
    /**
     * Removes a class from nb-layout
     * @param {string} className
     */
    removeLayoutClass(className: string): void;
    /**
     * Triggered when a class is removed from nb-layout through `removeLayoutClass` method
     * @returns {Observable<any>}
     */
    onRemoveLayoutClass(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbThemeService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbThemeService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ0aGVtZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5REEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOYkpTVGhlbWVPcHRpb25zIH0gZnJvbSAnLi9qcy10aGVtZXMvdGhlbWUub3B0aW9ucyc7XG5pbXBvcnQgeyBOYkpTVGhlbWVzUmVnaXN0cnkgfSBmcm9tICcuL2pzLXRoZW1lcy1yZWdpc3RyeS5zZXJ2aWNlJztcbmltcG9ydCB7IE5iTWVkaWFCcmVha3BvaW50c1NlcnZpY2UsIE5iTWVkaWFCcmVha3BvaW50IH0gZnJvbSAnLi9icmVha3BvaW50cy5zZXJ2aWNlJztcbi8qKlxuICogTWFpbiBOZWJ1bGFyIHNlcnZpY2UuIEluY2x1ZGVzIHZhcmlvdXMgaGVscGVyIG1ldGhvZHMuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iVGhlbWVTZXJ2aWNlIHtcbiAgICBwcm90ZWN0ZWQgb3B0aW9uczogYW55O1xuICAgIHByaXZhdGUgYnJlYWtwb2ludFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBqc1RoZW1lc1JlZ2lzdHJ5O1xuICAgIGN1cnJlbnRUaGVtZTogc3RyaW5nO1xuICAgIHByaXZhdGUgdGhlbWVDaGFuZ2VzJDtcbiAgICBwcml2YXRlIGFwcGVuZExheW91dENsYXNzJDtcbiAgICBwcml2YXRlIHJlbW92ZUxheW91dENsYXNzJDtcbiAgICBwcml2YXRlIGNoYW5nZVdpbmRvd1dpZHRoJDtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBhbnksIGJyZWFrcG9pbnRTZXJ2aWNlOiBOYk1lZGlhQnJlYWtwb2ludHNTZXJ2aWNlLCBqc1RoZW1lc1JlZ2lzdHJ5OiBOYkpTVGhlbWVzUmVnaXN0cnkpO1xuICAgIC8qKlxuICAgICAqIENoYW5nZSBjdXJyZW50IGFwcGxpY2F0aW9uIHRoZW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICAgKi9cbiAgICBjaGFuZ2VUaGVtZShuYW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIGNoYW5nZVdpbmRvd1dpZHRoKHdpZHRoOiBudW1iZXIpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSB0aGVtZSBvYmplY3Qgd2l0aCB2YXJpYWJsZXMgKGNvbG9yL3BhZGRpbmdzL2V0Yykgb24gYSB0aGVtZSBjaGFuZ2UuXG4gICAgICogT25jZSBzdWJzY3JpYmVkIC0gcmV0dXJucyBjdXJyZW50IHRoZW1lLlxuICAgICAqXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8TmJKU1RoZW1lT3B0aW9ucz59XG4gICAgICovXG4gICAgZ2V0SnNUaGVtZSgpOiBPYnNlcnZhYmxlPE5iSlNUaGVtZU9wdGlvbnM+O1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXJzIG1lZGlhIHF1ZXJ5IGJyZWFrcG9pbnQgY2hhbmdlXG4gICAgICogUmV0dXJucyBhIHBhaXIgd2hlcmUgdGhlIGZpcnN0IGl0ZW0gaXMgcHJldmlvdXMgbWVkaWEgYnJlYWtwb2ludCBhbmQgdGhlIHNlY29uZCBpdGVtIGlzIGN1cnJlbnQgYnJlYWtwb2l0LlxuICAgICAqIGBgYHRzXG4gICAgICogIFt7IG5hbWU6ICd4cycsIHdpZHRoOiAwIH0sIHsgbmFtZTogJ21kJywgd2lkdGg6IDc2OCB9XSAvLyBjaGFuZ2UgZnJvbSBgeHNgIHRvIGBtZGBcbiAgICAgKiBgYGBcbiAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxbTmJNZWRpYUJyZWFrcG9pbnQsIE5iTWVkaWFCcmVha3BvaW50XT59XG4gICAgICovXG4gICAgb25NZWRpYVF1ZXJ5Q2hhbmdlKCk6IE9ic2VydmFibGU8TmJNZWRpYUJyZWFrcG9pbnRbXT47XG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gY3VycmVudCB0aGVtZSBpcyBjaGFuZ2VkXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICAgKi9cbiAgICBvblRoZW1lQ2hhbmdlKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICAvKipcbiAgICAgKiBBcHBlbmQgYSBjbGFzcyB0byBuYi1sYXlvdXRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAgICovXG4gICAgYXBwZW5kTGF5b3V0Q2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXJlZCB3aGVuIGEgbmV3IGNsYXNzIGlzIGFkZGVkIHRvIG5iLWxheW91dCB0aHJvdWdoIGBhcHBlbmRMYXlvdXRDbGFzc2AgbWV0aG9kXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICAgKi9cbiAgICBvbkFwcGVuZExheW91dENsYXNzKCk6IE9ic2VydmFibGU8YW55PjtcbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgY2xhc3MgZnJvbSBuYi1sYXlvdXRcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lXG4gICAgICovXG4gICAgcmVtb3ZlTGF5b3V0Q2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXJlZCB3aGVuIGEgY2xhc3MgaXMgcmVtb3ZlZCBmcm9tIG5iLWxheW91dCB0aHJvdWdoIGByZW1vdmVMYXlvdXRDbGFzc2AgbWV0aG9kXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICAgKi9cbiAgICBvblJlbW92ZUxheW91dENsYXNzKCk6IE9ic2VydmFibGU8YW55Pjtcbn1cbiJdfQ==