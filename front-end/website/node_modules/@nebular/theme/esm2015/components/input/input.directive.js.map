{"version":3,"file":"input.directive.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/input/input.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Directive,\n  Input,\n  HostBinding,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  DoCheck,\n  AfterViewInit,\n  Renderer2,\n  NgZone,\n} from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { map, finalize, takeUntil } from 'rxjs/operators';\n\nimport { convertToBoolProperty, emptyStatusWarning, NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentShape } from '../component-shape';\nimport { NbComponentStatus } from '../component-status';\nimport { NbFormFieldControl } from '../form-field/form-field-control';\nimport { NbFocusMonitor } from '../cdk/a11y/a11y.module';\n\n/**\n * Basic input directive.\n *\n * ```html\n * <input nbInput></input>\n * ```\n *\n * ### Installation\n *\n * Import `NbInputModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbInputModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Default input size is `medium`:\n * @stacked-example(Showcase, input/input-showcase.component)\n *\n * Inputs are available in multiple colors using `status` property:\n * @stacked-example(Input Colors, input/input-colors.component)\n *\n * There are three input sizes:\n *\n * @stacked-example(Input Sizes, input/input-sizes.component)\n *\n * Inputs available in different shapes, which could be combined with the other properties:\n * @stacked-example(Input Shapes, input/input-shapes.component)\n *\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\n * @stacked-example(Input Elements, input/input-types.component)\n *\n * You can add `fullWidth` attribute to make element fill container:\n * @stacked-example(Full width inputs, input/input-full-width.component)\n *\n * Or you can bind control with form controls or ngModel:\n * @stacked-example(Input form binding, input/input-form.component)\n *\n * Use `<nb-form-field>` to add custom content to the input field.\n * First import `NbFormFieldModule`. Then put the input field and custom content into\n * `<nb-form-field>` and add `nbPrefix` or `nbSuffix` directive to the custom content.\n * `nbPrefix` puts content before input and `nbSuffix` after.\n *\n * @stacked-example(Input with icon, form-field/form-field-input.component)\n * @stacked-example(Input with button, form-field/form-field-password.component)\n *\n * @styles\n *\n * input-border-style:\n * input-border-width:\n * input-outline-color:\n * input-outline-width:\n * input-placeholder-text-font-family:\n * input-text-font-family:\n * input-basic-text-color:\n * input-basic-placeholder-text-color:\n * input-basic-background-color:\n * input-basic-border-color:\n * input-basic-focus-background-color:\n * input-basic-focus-border-color:\n * input-basic-hover-background-color:\n * input-basic-hover-border-color:\n * input-basic-disabled-background-color:\n * input-basic-disabled-border-color:\n * input-basic-disabled-text-color:\n * input-basic-disabled-placeholder-text-color:\n * input-primary-text-color:\n * input-primary-placeholder-text-color:\n * input-primary-background-color:\n * input-primary-border-color:\n * input-primary-focus-background-color:\n * input-primary-focus-border-color:\n * input-primary-hover-background-color:\n * input-primary-hover-border-color:\n * input-primary-disabled-background-color:\n * input-primary-disabled-border-color:\n * input-primary-disabled-text-color:\n * input-primary-disabled-placeholder-text-color:\n * input-success-text-color:\n * input-success-placeholder-text-color:\n * input-success-background-color:\n * input-success-border-color:\n * input-success-focus-background-color:\n * input-success-focus-border-color:\n * input-success-hover-background-color:\n * input-success-hover-border-color:\n * input-success-disabled-background-color:\n * input-success-disabled-border-color:\n * input-success-disabled-text-color:\n * input-success-disabled-placeholder-text-color:\n * input-info-text-color:\n * input-info-placeholder-text-color:\n * input-info-background-color:\n * input-info-border-color:\n * input-info-focus-background-color:\n * input-info-focus-border-color:\n * input-info-hover-background-color:\n * input-info-hover-border-color:\n * input-info-disabled-background-color:\n * input-info-disabled-border-color:\n * input-info-disabled-text-color:\n * input-info-disabled-placeholder-text-color:\n * input-warning-text-color:\n * input-warning-placeholder-text-color:\n * input-warning-background-color:\n * input-warning-border-color:\n * input-warning-focus-background-color:\n * input-warning-focus-border-color:\n * input-warning-hover-background-color:\n * input-warning-hover-border-color:\n * input-warning-disabled-background-color:\n * input-warning-disabled-border-color:\n * input-warning-disabled-text-color:\n * input-warning-disabled-placeholder-text-color:\n * input-danger-text-color:\n * input-danger-placeholder-text-color:\n * input-danger-background-color:\n * input-danger-border-color:\n * input-danger-focus-background-color:\n * input-danger-focus-border-color:\n * input-danger-hover-background-color:\n * input-danger-hover-border-color:\n * input-danger-disabled-background-color:\n * input-danger-disabled-border-color:\n * input-danger-disabled-text-color:\n * input-danger-disabled-placeholder-text-color:\n * input-control-text-color:\n * input-control-placeholder-text-color:\n * input-control-background-color:\n * input-control-border-color:\n * input-control-focus-background-color:\n * input-control-focus-border-color:\n * input-control-hover-background-color:\n * input-control-hover-border-color:\n * input-control-disabled-background-color:\n * input-control-disabled-border-color:\n * input-control-disabled-text-color:\n * input-control-disabled-placeholder-text-color:\n * input-rectangle-border-radius:\n * input-semi-round-border-radius:\n * input-round-border-radius:\n * input-tiny-text-font-size:\n * input-tiny-text-font-weight:\n * input-tiny-text-line-height:\n * input-tiny-placeholder-text-font-size:\n * input-tiny-placeholder-text-font-weight:\n * input-tiny-placeholder-text-line-height:\n * input-tiny-padding:\n * input-tiny-max-width:\n * input-small-text-font-size:\n * input-small-text-font-weight:\n * input-small-text-line-height:\n * input-small-placeholder-text-font-size:\n * input-small-placeholder-text-font-weight:\n * input-small-placeholder-text-line-height:\n * input-small-padding:\n * input-small-max-width:\n * input-medium-text-font-size:\n * input-medium-text-font-weight:\n * input-medium-text-line-height:\n * input-medium-placeholder-text-font-size:\n * input-medium-placeholder-text-font-weight:\n * input-medium-placeholder-text-line-height:\n * input-medium-padding:\n * input-medium-max-width:\n * input-large-text-font-size:\n * input-large-text-font-weight:\n * input-large-text-line-height:\n * input-large-placeholder-text-font-size:\n * input-large-placeholder-text-font-weight:\n * input-large-placeholder-text-line-height:\n * input-large-padding:\n * input-large-max-width:\n * input-giant-text-font-size:\n * input-giant-text-font-weight:\n * input-giant-text-line-height:\n * input-giant-placeholder-text-font-size:\n * input-giant-placeholder-text-font-weight:\n * input-giant-placeholder-text-line-height:\n * input-giant-padding:\n * input-giant-max-width:\n */\n@Directive({\n  selector: 'input[nbInput],textarea[nbInput]',\n  providers: [\n    { provide: NbFormFieldControl, useExisting: NbInputDirective },\n  ],\n})\nexport class NbInputDirective implements DoCheck, OnChanges, OnInit, AfterViewInit, OnDestroy, NbFormFieldControl {\n\n  protected destroy$ = new Subject<void>();\n\n  /**\n   * Field size modifications. Possible values: `small`, `medium` (default), `large`.\n   */\n  @Input()\n  fieldSize: NbComponentSize = 'medium';\n\n  /**\n   * Field status (adds specific styles):\n   * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n   */\n  @Input()\n  get status(): NbComponentStatus {\n    return this._status;\n  }\n  set status(value: NbComponentStatus) {\n    if ((value as string) === '') {\n      emptyStatusWarning('NbInput');\n      this._status = 'basic';\n    } else {\n      this._status = value;\n    }\n  }\n  protected _status: NbComponentStatus = 'basic';\n\n  /**\n   * Field shapes modifications. Possible values: `rectangle` (default), `round`, `semi-round`.\n   */\n  @Input()\n  shape: NbComponentShape = 'rectangle';\n\n  /**\n   * If set element will fill container. `false` by default.\n   */\n  @Input()\n  @HostBinding('class.input-full-width')\n  get fullWidth(): boolean {\n    return this._fullWidth;\n  }\n  set fullWidth(value: boolean) {\n    this._fullWidth = convertToBoolProperty(value);\n  }\n  private _fullWidth = false;\n  static ngAcceptInputType_fullWidth: NbBooleanInput;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n    protected focusMonitor: NbFocusMonitor,\n    protected renderer: Renderer2,\n    protected zone: NgZone,\n  ) {\n  }\n\n  ngDoCheck() {\n    const isDisabled = this.elementRef.nativeElement.disabled;\n    if (isDisabled !== this.disabled$.value) {\n      this.disabled$.next(isDisabled);\n    }\n  }\n\n  ngOnChanges({ status, fieldSize }: SimpleChanges) {\n    if (status) {\n      this.status$.next(this.status);\n    }\n    if (fieldSize) {\n      this.size$.next(this.fieldSize);\n    }\n  }\n\n  ngOnInit() {\n    this.focusMonitor.monitor(this.elementRef)\n      .pipe(\n        map(origin => !!origin),\n        finalize(() => this.focusMonitor.stopMonitoring(this.elementRef)),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(this.focused$);\n  }\n\n  ngAfterViewInit() {\n    // TODO: #2254\n    this.zone.runOutsideAngular(() => setTimeout(() => {\n      this.renderer.addClass(this.elementRef.nativeElement, 'nb-transition');\n    }));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.fieldSize === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.fieldSize === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.fieldSize === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.fieldSize === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.fieldSize === 'giant';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic() {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control() {\n    return this.status === 'control';\n  }\n\n  @HostBinding('class.shape-rectangle')\n  get rectangle() {\n    return this.shape === 'rectangle';\n  }\n\n  @HostBinding('class.shape-semi-round')\n  get semiRound() {\n    return this.shape === 'semi-round';\n  }\n\n  @HostBinding('class.shape-round')\n  get round() {\n    return this.shape === 'round';\n  }\n\n  /*\n   * @docs-private\n   **/\n  status$ = new BehaviorSubject<NbComponentStatus>(this.status);\n\n  /*\n   * @docs-private\n   **/\n  size$ = new BehaviorSubject<NbComponentSize>(this.fieldSize);\n\n  /*\n   * @docs-private\n   **/\n  focused$ = new BehaviorSubject<boolean>(false);\n\n  /*\n   * @docs-private\n   **/\n  disabled$ = new BehaviorSubject<boolean>(false);\n}\n"]}