{"version":3,"file":"card.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/card/card.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\n\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * Component intended to be used within the `<nb-card>` component.\n * It adds styles for a preset header section.\n *\n * @styles\n *\n * card-header-text-color:\n * card-header-text-font-family:\n * card-header-text-font-size:\n * card-header-text-font-weight:\n * card-header-text-line-height:\n * card-header-basic-background-color:\n * card-header-basic-text-color:\n * card-header-primary-background-color:\n * card-header-primary-text-color:\n * card-header-info-background-color:\n * card-header-info-text-color:\n * card-header-success-background-color:\n * card-header-success-text-color:\n * card-header-warning-background-color:\n * card-header-warning-text-color:\n * card-header-danger-background-color:\n * card-header-danger-text-color:\n * card-header-control-background-color:\n * card-header-control-text-color:\n */\n@Component({\n  selector: 'nb-card-header',\n  template: `<ng-content></ng-content>`,\n})\nexport class NbCardHeaderComponent {\n}\n\n/**\n * Component intended to be used within  the `<nb-card>` component.\n * Adds styles for a preset body section.\n */\n@Component({\n  selector: 'nb-card-body',\n  template: `<ng-content></ng-content>`,\n})\nexport class NbCardBodyComponent {\n}\n\n/**\n * Component intended to be used within  the `<nb-card>` component.\n * Adds styles for a preset footer section.\n */\n@Component({\n  selector: 'nb-card-footer',\n  template: `<ng-content></ng-content>`,\n})\nexport class NbCardFooterComponent {\n}\n\n/**\n * Basic content container component.\n *\n * Basic card example:\n * @stacked-example(Showcase, card/card-showcase.component)\n *\n * Basic card configuration:\n *\n * ```html\n * <nb-card>\n *   <nb-card-body>\n *     Card\n *   </nb-card-body>\n * </nb-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbCardModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCardModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Card with header and footer:\n * @stacked-example(With Header & Footer, card/card-full.component)\n *\n * Most of the time main card content goes to `nb-card-body`,\n * so it is styled and aligned in accordance with the header and footer.\n * In case you need a higher level of control, you can pass contend directly to `nb-card`,\n * so `nb-card-body` styling will not be applied.\n *\n * Consider an example with `nb-list` component:\n * @stacked-example(Card with list, card/card-without-body.component)\n *\n * Colored cards could be simply configured by providing a `status` property:\n * @stacked-example(Colored Card, card/card-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight card highlight\n * as well as combine it with `status`:\n * @stacked-example(Accent Card, card/card-accents.component)\n *\n * Cards of smaller sizes could be combined and put on the same row with a bigger card so they have the same heights.\n * @stacked-example(Card sizes combinations, card/card-sizes-combinations.component)\n *\n * @additional-example(Multiple Sizes, card/card-sizes.component)\n *\n * @styles\n *\n * card-background-color:\n * card-text-color:\n * card-text-font-family:\n * card-text-font-size:\n * card-text-font-weight:\n * card-text-line-height:\n * card-border-width:\n * card-border-style:\n * card-border-color:\n * card-border-radius:\n * card-padding:\n * card-shadow:\n * card-divider-color:\n * card-divider-style:\n * card-divider-width:\n * card-height-tiny:\n * card-height-small:\n * card-height-medium:\n * card-height-large:\n * card-height-giant:\n * card-margin-bottom:\n * card-scrollbar-color:\n * card-scrollbar-background-color:\n * card-scrollbar-width:\n */\n@Component({\n  selector: 'nb-card',\n  styleUrls: ['./card.component.css'],\n  template: `\n    <ng-content select=\"nb-card-header\"></ng-content>\n    <ng-content select=\"nb-card-body\"></ng-content>\n    <ng-content></ng-content>\n    <ng-content select=\"nb-card-footer\"></ng-content>\n  `,\n})\nexport class NbCardComponent {\n\n  /**\n   * Card size, available sizes:\n   * tiny, small, medium, large, giant\n   */\n  @Input()\n  get size(): '' | NbComponentSize {\n    return this._size;\n  }\n  set size(value: '' | NbComponentSize) {\n    this._size = value;\n  }\n  _size: '' | NbComponentSize = '';\n\n  /**\n   * Card status:\n   * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n   */\n  @Input()\n  status: '' | NbComponentStatus = '';\n\n  /**\n   * Card accent (color of the top border):\n   * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n   */\n  @Input()\n  accent: '' | NbComponentStatus = '';\n\n  @HostBinding('class.size-tiny')\n  get tiny() {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small() {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium() {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant() {\n    return this.size === 'giant';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic() {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control() {\n    return this.status === 'control';\n  }\n\n  @HostBinding('class.accent')\n  get hasAccent() {\n    return this.accent;\n  }\n\n  @HostBinding('class.accent-primary')\n  get primaryAccent() {\n    return this.accent === 'primary';\n  }\n\n  @HostBinding('class.accent-info')\n  get infoAccent() {\n    return this.accent === 'info';\n  }\n\n  @HostBinding('class.accent-success')\n  get successAccent() {\n    return this.accent === 'success';\n  }\n\n  @HostBinding('class.accent-warning')\n  get warningAccent() {\n    return this.accent === 'warning';\n  }\n\n  @HostBinding('class.accent-danger')\n  get dangerAccent() {\n    return this.accent === 'danger';\n  }\n\n  @HostBinding('class.accent-basic')\n  get basicAccent() {\n    return this.accent === 'basic';\n  }\n\n  @HostBinding('class.accent-control')\n  get controlAccent() {\n    return this.accent === 'control';\n  }\n}\n"]}