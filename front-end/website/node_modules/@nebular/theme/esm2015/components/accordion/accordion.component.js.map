{"version":3,"file":"accordion.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/accordion/accordion.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,uBAAuB,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC/B,OAAO,EAAE,qBAAqB,EAAkB,MAAM,YAAY,CAAC;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwDG;AAQH,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAAjC;QAEE,mBAAc,GAAG,IAAI,OAAO,EAAW,CAAC;QAehC,eAAU,GAAG,KAAK,CAAC;IAiB7B,CAAC;IA9BC;;;OAGG;IAEH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,IAAI,KAAK,CAAC,GAAY;QACpB,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAKD;;OAEG;IACH,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;IACH,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACF,CAAA;AAzBC;IADC,KAAK,CAAC,OAAO,CAAC;;;iDAGd;AAXU,oBAAoB;IAPhC,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE;;GAET;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,oBAAoB,CAkChC;SAlCY,oBAAoB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\n\n/**\n * An accordion allows to toggle the display of sections of content\n *\n * Basic example\n * @stacked-example(Showcase, accordion/accordion-showcase.component)\n *\n * ```ts\n * <nb-accordion>\n *  <nb-accordion-item>\n *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>\n *   <nb-accordion-item-body>\n *     Item Content\n *   </nb-accordion-item-body>\n *  </nb-accordion-item>\n * </nb-accordion>\n * ```\n * ### Installation\n *\n * Import `NbAccordionModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbAccordionModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * With `multi` mode accordion can have multiple items expanded:\n * @stacked-example(Multiple expanded items, accordion/accordion-multi.component)\n *\n * `NbAccordionItemComponent` has several methods, for example it is possible to trigger item click/toggle:\n * @stacked-example(Expand API, accordion/accordion-toggle.component)\n *\n * @styles\n *\n * accordion-border-radius:\n * accordion-padding:\n * accordion-shadow:\n * accordion-header-text-color:\n * accordion-header-text-font-family:\n * accordion-header-text-font-size:\n * accordion-header-text-font-weight:\n * accordion-header-text-line-height:\n * accordion-header-disabled-text-color:\n * accordion-header-border-color:\n * accordion-header-border-style:\n * accordion-header-border-width:\n * accordion-item-background-color:\n * accordion-item-text-color:\n * accordion-item-text-font-family:\n * accordion-item-text-font-size:\n * accordion-item-text-font-weight:\n * accordion-item-text-line-height:\n */\n@Component({\n  selector: 'nb-accordion',\n  template: `\n    <ng-content select=\"nb-accordion-item\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionComponent {\n\n  openCloseItems = new Subject<boolean>();\n\n  /**\n   *  Allow multiple items to be expanded at the same time.\n   * @type {boolean}\n   */\n  @Input('multi')\n  get multi(): boolean {\n    return this.multiValue;\n  }\n  set multi(val: boolean) {\n    this.multiValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_multi: NbBooleanInput;\n\n  private multiValue = false;\n\n  /**\n   * Opens all enabled accordion items.\n   */\n  openAll() {\n    if (this.multi) {\n      this.openCloseItems.next(false);\n    }\n  }\n\n  /**\n   * Closes all enabled accordion items.\n   */\n  closeAll() {\n    this.openCloseItems.next(true);\n  }\n}\n"]}