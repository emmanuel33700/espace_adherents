{"version":3,"file":"accordion-item.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/accordion/accordion-item.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  HostBinding,\n  Host,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NbAccordionComponent } from './accordion.component';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\n\n/**\n * Component intended to be used within `<nb-accordion>` component\n */\n@Component({\n  selector: 'nb-accordion-item',\n  styleUrls: ['./accordion-item.component.css'],\n  template: `\n    <ng-content select=\"nb-accordion-item-header\"></ng-content>\n    <ng-content select=\"nb-accordion-item-body\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbAccordionItemComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Item is collapse (`true` by default)\n   * @type {boolean}\n   */\n  @Input('collapsed')\n  @HostBinding('class.collapsed')\n  get collapsed(): boolean {\n    return this.collapsedValue;\n  }\n  set collapsed(val: boolean) {\n    this.collapsedValue = convertToBoolProperty(val);\n    this.collapsedChange.emit(this.collapsedValue);\n    this.invalidate();\n  }\n  static ngAcceptInputType_collapsed: NbBooleanInput;\n\n  /**\n   * Item is expanded (`false` by default)\n   * @type {boolean}\n   */\n  @Input('expanded')\n  @HostBinding('class.expanded')\n  get expanded(): boolean {\n    return !this.collapsed;\n  }\n  set expanded(val: boolean) {\n    this.collapsedValue = !convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_expanded: NbBooleanInput;\n\n  /**\n   * Item is disabled and cannot be opened.\n   * @type {boolean}\n   */\n  @Input('disabled')\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this.disabledValue;\n  }\n  set disabled(val: boolean) {\n    this.disabledValue = convertToBoolProperty(val);\n    this.invalidate();\n  }\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   */\n  @Output() collapsedChange = new EventEmitter<boolean>();\n\n  accordionItemInvalidate = new Subject<boolean>();\n\n  private collapsedValue = true;\n  private disabledValue = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(@Host() private accordion: NbAccordionComponent, private cd: ChangeDetectorRef) {\n  }\n\n  /**\n   * Open/close the item\n   */\n  toggle() {\n    if (!this.disabled) {\n      // we need this temporary variable as `openCloseItems.next` will change current value we need to save\n      const willSet = !this.collapsed;\n\n      if (!this.accordion.multi) {\n        this.accordion.openCloseItems.next(true);\n      }\n      this.collapsed = willSet;\n    }\n  }\n\n  /**\n   * Open the item.\n   */\n  open() {\n    !this.disabled && (this.collapsed = false);\n  }\n\n  /**\n   * Collapse the item.\n   */\n  close() {\n    !this.disabled && (this.collapsed = true);\n  }\n\n  ngOnInit() {\n    this.accordion.openCloseItems\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(collapsed => {\n        !this.disabled && (this.collapsed = collapsed);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.accordionItemInvalidate.next(true);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.accordionItemInvalidate.complete();\n  }\n\n  private invalidate() {\n    this.accordionItemInvalidate.next(true);\n    this.cd.markForCheck();\n  }\n}\n"]}