{"version":3,"file":"progress-bar.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/progress-bar/progress-bar.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAK9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmFG;AAaH,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAAnC;QAEE;;WAEG;QACM,UAAK,GAAW,CAAC,CAAC;QAE3B;;WAEG;QACM,WAAM,GAAsB,OAAO,CAAC;QAE7C;;WAEG;QACM,SAAI,GAAoB,QAAQ,CAAC;QAE1C;;WAEG;QACM,iBAAY,GAAY,KAAK,CAAC;IA6DzC,CAAC;IA1DC,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;IAC9B,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC;IAChC,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;IAC/B,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC;IAChC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC;IAClC,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC;IACjC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;CACF,CAAA;AA5EU;IAAR,KAAK,EAAE;;qDAAmB;AAKlB;IAAR,KAAK,EAAE;;sDAAqC;AAKpC;IAAR,KAAK,EAAE;;oDAAkC;AAKjC;IAAR,KAAK,EAAE;;4DAA+B;AAGvC;IADC,WAAW,CAAC,iBAAiB,CAAC;;;kDAG9B;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;mDAG/B;AAGD;IADC,WAAW,CAAC,mBAAmB,CAAC;;;oDAGhC;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;mDAG/B;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;;mDAG/B;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;qDAGnC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;qDAGnC;AAGD;IADC,WAAW,CAAC,mBAAmB,CAAC;;;kDAGhC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;qDAGnC;AAGD;IADC,WAAW,CAAC,qBAAqB,CAAC;;;oDAGlC;AAGD;IADC,WAAW,CAAC,oBAAoB,CAAC;;;mDAGjC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;qDAGnC;AAhFU,sBAAsB;IAZlC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAE3B,QAAQ,EAAE;;;;;;;GAOT;;KACF,CAAC;GACW,sBAAsB,CAiFlC;SAjFY,sBAAsB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\n\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * Progress Bar is a component for indicating progress.\n *\n * Simple usage:\n *\n * ```html\n * <nb-progress-bar [value]=\"50\"></nb-progress-bar>\n * ```\n * ### Installation\n *\n * Import `NbProgressBarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbProgressBarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Progress bar accepts property `value` in range 0-100\n * @stacked-example(Progress bar, progress-bar/progress-bar-showcase.component)\n *\n * Progress bar background could be configured by providing a `status` property:\n * @stacked-example(Progress bar status, progress-bar/progress-bar-status.component)\n *\n * Progress bar size (height and font-size) could be configured by providing a `size` property:\n * @stacked-example(Progress bar size, progress-bar/progress-bar-size.component)\n *\n * `displayValue` property shows current value inside progress bar. It's also possible to add custom text inside:\n * @stacked-example(Progress bar value, progress-bar/progress-bar-value.component)\n *\n * Progress bar supports `width` and `background-color` transition:\n * @stacked-example(Progress bar interactive, progress-bar/progress-bar-interactive.component)\n *\n * @styles\n *\n * progress-bar-animation-duration:\n * progress-bar-border-radius:\n * progress-bar-text-font-family:\n * progress-bar-tiny-height:\n * progress-bar-tiny-text-font-size:\n * progress-bar-tiny-text-font-weight:\n * progress-bar-tiny-text-line-height:\n * progress-bar-small-height:\n * progress-bar-small-text-font-size:\n * progress-bar-small-text-font-weight:\n * progress-bar-small-text-line-height:\n * progress-bar-medium-height:\n * progress-bar-medium-text-font-size:\n * progress-bar-medium-text-font-weight:\n * progress-bar-medium-text-line-height:\n * progress-bar-large-height:\n * progress-bar-large-text-font-size:\n * progress-bar-large-text-font-weight:\n * progress-bar-large-text-line-height:\n * progress-bar-giant-height:\n * progress-bar-giant-text-font-size:\n * progress-bar-giant-text-font-weight:\n * progress-bar-giant-text-line-height:\n * progress-bar-basic-background-color:\n * progress-bar-basic-filled-background-color:\n * progress-bar-basic-text-color:\n * progress-bar-primary-background-color:\n * progress-bar-primary-filled-background-color:\n * progress-bar-primary-text-color:\n * progress-bar-success-background-color:\n * progress-bar-success-filled-background-color:\n * progress-bar-success-text-color:\n * progress-bar-info-background-color:\n * progress-bar-info-filled-background-color:\n * progress-bar-info-text-color:\n * progress-bar-warning-background-color:\n * progress-bar-warning-filled-background-color:\n * progress-bar-warning-text-color:\n * progress-bar-danger-background-color:\n * progress-bar-danger-filled-background-color:\n * progress-bar-danger-text-color:\n * progress-bar-control-background-color:\n * progress-bar-control-filled-background-color:\n * progress-bar-control-text-color:\n */\n@Component({\n  selector: 'nb-progress-bar',\n  styleUrls: ['./progress-bar.component.css'],\n  template: `\n    <div class=\"progress-container\">\n      <div class=\"progress-value\" [style.width.%]=\"value\">\n        <span *ngIf=\"displayValue\">{{ value }}%</span>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n})\nexport class NbProgressBarComponent {\n\n  /**\n   * Progress bar value in percent (0 - 100)\n   */\n  @Input() value: number = 0;\n\n  /**\n   * Progress bar background (`basic` (default), `primary`, `info`, `success`, `warning`, `danger`, `control`)\n   */\n  @Input() status: NbComponentStatus = 'basic';\n\n  /**\n   * Progress bar size (`tiny`, `small`, `medium` (default), `large`, `giant`)\n   */\n  @Input() size: NbComponentSize = 'medium';\n\n  /**\n   * Displays value inside progress bar\n   */\n  @Input() displayValue: boolean = false;\n\n  @HostBinding('class.size-tiny')\n  get tiny(): boolean {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small(): boolean {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium(): boolean {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large(): boolean {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant(): boolean {\n    return this.size === 'giant';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary(): boolean {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-success')\n  get success(): boolean {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-info')\n  get info(): boolean {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning(): boolean {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger(): boolean {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic(): boolean {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control(): boolean {\n    return this.status === 'control';\n  }\n}\n"]}