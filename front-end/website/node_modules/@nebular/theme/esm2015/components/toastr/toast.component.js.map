{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/toastr/toast.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\n\nimport { NbToast } from './model';\nimport { NbIconConfig } from '../icon/icon.component';\n\n/**\n * The `NbToastComponent` is responsible for rendering each toast with appropriate styles.\n *\n * @styles\n *\n * toastr-border-style:\n * toastr-border-width:\n * toastr-border-radius:\n * toastr-padding:\n * toastr-shadow:\n * toastr-text-font-family:\n * toastr-text-font-size:\n * toastr-text-font-weight:\n * toastr-text-line-height:\n * toastr-title-text-font-family:\n * toastr-title-text-font-size:\n * toastr-title-text-font-weight:\n * toastr-title-text-line-height:\n * toastr-basic-background-color:\n * toastr-basic-border-color:\n * toastr-basic-text-color:\n * toastr-icon-basic-background-color:\n * toastr-icon-basic-color:\n * toastr-destroyable-hover-basic-background-color:\n * toastr-destroyable-hover-basic-border-color:\n * toastr-primary-background-color:\n * toastr-primary-border-color:\n * toastr-primary-text-color:\n * toastr-icon-primary-background-color:\n * toastr-icon-primary-color:\n * toastr-destroyable-hover-primary-background-color:\n * toastr-destroyable-hover-primary-border-color:\n * toastr-success-background-color:\n * toastr-success-border-color:\n * toastr-success-text-color:\n * toastr-icon-success-background-color:\n * toastr-icon-success-color:\n * toastr-destroyable-hover-success-background-color:\n * toastr-destroyable-hover-success-border-color:\n * toastr-info-background-color:\n * toastr-info-border-color:\n * toastr-info-text-color:\n * toastr-icon-info-background-color:\n * toastr-icon-info-color:\n * toastr-destroyable-hover-info-background-color:\n * toastr-destroyable-hover-info-border-color:\n * toastr-warning-background-color:\n * toastr-warning-border-color:\n * toastr-warning-text-color:\n * toastr-icon-warning-background-color:\n * toastr-icon-warning-color:\n * toastr-destroyable-hover-warning-background-color:\n * toastr-destroyable-hover-warning-border-color:\n * toastr-danger-background-color:\n * toastr-danger-border-color:\n * toastr-danger-text-color:\n * toastr-icon-danger-background-color:\n * toastr-icon-danger-color:\n * toastr-destroyable-hover-danger-background-color:\n * toastr-destroyable-hover-danger-border-color:\n * toastr-control-background-color:\n * toastr-control-border-color:\n * toastr-control-text-color:\n * toastr-icon-control-background-color:\n * toastr-icon-control-color:\n * toastr-destroyable-hover-control-background-color:\n * toastr-destroyable-hover-control-border-color:\n * */\n@Component({\n  selector: 'nb-toast',\n  styleUrls: ['./toast.component.css'],\n  templateUrl: './toast.component.html',\n})\nexport class NbToastComponent implements OnInit {\n  @Input()\n  toast: NbToast;\n\n  @Output() destroy: EventEmitter<void> = new EventEmitter();\n\n  @HostBinding('class.status-success')\n  get success(): boolean {\n    return this.toast.config.status === 'success';\n  }\n\n  @HostBinding('class.status-info')\n  get info(): boolean {\n    return this.toast.config.status === 'info';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning(): boolean {\n    return this.toast.config.status === 'warning';\n  }\n\n  @HostBinding('class.status-primary')\n  get primary(): boolean {\n    return this.toast.config.status === 'primary';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger(): boolean {\n    return this.toast.config.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic(): boolean {\n    return this.toast.config.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control(): boolean {\n    return this.toast.config.status === 'control';\n  }\n\n  @HostBinding('class.destroy-by-click')\n  get destroyByClick(): boolean {\n    return this.toast.config.destroyByClick;\n  }\n\n  @HostBinding('class.has-icon')\n  get hasIcon(): boolean {\n    const { icon } = this.toast.config;\n    if (typeof icon === 'string') {\n      return true;\n    }\n\n    return !!(icon && (icon as NbIconConfig).icon);\n  }\n\n  @HostBinding('class.custom-icon')\n  get customIcon(): boolean {\n    return !!this.icon;\n  }\n\n  get icon(): string | NbIconConfig {\n    return this.toast.config.icon;\n  }\n\n  /* @deprecated Use pack property of icon config */\n  get iconPack(): string {\n    return this.toast.config.iconPack;\n  }\n\n  /*\n    @breaking-change 5 remove\n    @deprecated\n  */\n  get iconConfig(): NbIconConfig {\n    const toastConfig = this.toast.config;\n    const isIconName = typeof this.icon === 'string';\n\n    if (!isIconName) {\n      return toastConfig.icon as NbIconConfig;\n    }\n\n    const iconConfig: NbIconConfig = { icon: toastConfig.icon as string };\n    if (toastConfig.iconPack) {\n      iconConfig.pack = toastConfig.iconPack;\n    }\n\n    return iconConfig;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.destroy.emit();\n  }\n\n  constructor(protected renderer: Renderer2, protected elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.toast.config.toastClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.toast.config.toastClass);\n    }\n  }\n}\n"]}