{"version":3,"file":"toastr.service.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/toastr/toastr.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ComponentFactoryResolver, ComponentRef, Inject, Injectable } from '@angular/core';\n\nimport { NbComponentPortal, NbOverlayRef } from '../cdk/overlay/mapping';\nimport { NbOverlayService, patch } from '../cdk/overlay/overlay-service';\nimport { NbPositionBuilderService } from '../cdk/overlay/overlay-position';\nimport { NbGlobalLogicalPosition, NbGlobalPosition, NbPositionHelper } from '../cdk/overlay/position-helper';\nimport { NbToastrContainerComponent } from './toastr-container.component';\nimport { NB_TOASTR_CONFIG, NbToastrConfig } from './toastr-config';\nimport { NbToast } from './model';\nimport { NbToastComponent } from './toast.component';\nimport { NB_DOCUMENT } from '../../theme.options';\n\nexport class NbToastRef {\n  constructor(private toastContainer: NbToastContainer,\n              private toast: NbToast) {\n  }\n\n  close() {\n    this.toastContainer.destroy(this.toast);\n  }\n}\n\nexport class NbToastContainer {\n  protected toasts: NbToast[] = [];\n  protected prevToast: NbToast;\n\n  get nativeElement() {\n    return this.containerRef.location.nativeElement;\n  }\n\n  constructor(protected position: NbGlobalPosition,\n              protected containerRef: ComponentRef<NbToastrContainerComponent>,\n              protected positionHelper: NbPositionHelper) {\n  }\n\n  attach(toast: NbToast): NbToastRef {\n    if (toast.config.preventDuplicates && this.isDuplicate(toast)) {\n      return;\n    }\n\n    this.removeToastIfLimitReached(toast);\n    const toastComponent: NbToastComponent = this.attachToast(toast);\n\n    if (toast.config.destroyByClick) {\n      this.subscribeOnClick(toastComponent, toast);\n    }\n\n    if (toast.config.duration) {\n      this.setDestroyTimeout(toast);\n    }\n\n    this.prevToast = toast;\n\n    return new NbToastRef(this, toast);\n  }\n\n  destroy(toast: NbToast) {\n    if (this.prevToast === toast) {\n      this.prevToast = null;\n    }\n\n    this.toasts = this.toasts.filter(t => t !== toast);\n    this.updateContainer();\n  }\n\n  protected isDuplicate(toast: NbToast): boolean {\n    return toast.config.duplicatesBehaviour === 'previous'\n      ? this.isDuplicatePrevious(toast)\n      : this.isDuplicateAmongAll(toast);\n  }\n\n  protected isDuplicatePrevious(toast: NbToast): boolean {\n    return this.prevToast && this.toastDuplicateCompareFunc(this.prevToast, toast);\n  }\n\n  protected isDuplicateAmongAll(toast: NbToast): boolean {\n    return this.toasts.some(t => this.toastDuplicateCompareFunc(t, toast));\n  }\n\n  protected toastDuplicateCompareFunc = (t1: NbToast, t2: NbToast): boolean => {\n    return t1.message === t2.message\n      && t1.title === t2.title\n      && t1.config.status === t2.config.status;\n  };\n\n  protected removeToastIfLimitReached(toast: NbToast) {\n    if (!toast.config.limit || this.toasts.length < toast.config.limit) {\n      return;\n    }\n    if (this.positionHelper.isTopPosition(toast.config.position)) {\n      this.toasts.pop();\n    } else {\n      this.toasts.shift();\n    }\n  }\n\n  protected attachToast(toast: NbToast): NbToastComponent {\n    if (this.positionHelper.isTopPosition(toast.config.position)) {\n      return this.attachToTop(toast);\n    } else {\n      return this.attachToBottom(toast);\n    }\n  }\n\n  protected attachToTop(toast: NbToast): NbToastComponent {\n    this.toasts.unshift(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.first;\n  }\n\n  protected attachToBottom(toast: NbToast): NbToastComponent {\n    this.toasts.push(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.last;\n  }\n\n  protected setDestroyTimeout(toast: NbToast) {\n    setTimeout(() => this.destroy(toast), toast.config.duration);\n  }\n\n  protected subscribeOnClick(toastComponent: NbToastComponent, toast: NbToast) {\n    toastComponent.destroy.subscribe(() => this.destroy(toast));\n  }\n\n  protected updateContainer() {\n    patch(this.containerRef, { content: this.toasts, position: this.position });\n  }\n}\n\ninterface NbToastrOverlayWithContainer {\n  overlayRef: NbOverlayRef;\n  toastrContainer: NbToastContainer;\n}\n\n@Injectable()\nexport class NbToastrContainerRegistry {\n  protected overlays: Map<NbGlobalPosition, NbToastrOverlayWithContainer> = new Map();\n\n  constructor(protected overlay: NbOverlayService,\n              protected positionBuilder: NbPositionBuilderService,\n              protected positionHelper: NbPositionHelper,\n              protected cfr: ComponentFactoryResolver,\n              @Inject(NB_DOCUMENT) protected document: any) {\n  }\n\n  get(position: NbGlobalPosition): NbToastContainer {\n    const logicalPosition: NbGlobalLogicalPosition = this.positionHelper.toLogicalPosition(position);\n\n    const overlayWithContainer = this.overlays.get(logicalPosition);\n    if (!overlayWithContainer || !this.existsInDom(overlayWithContainer.toastrContainer)) {\n      if (overlayWithContainer) {\n        overlayWithContainer.overlayRef.dispose();\n      }\n      this.instantiateContainer(logicalPosition);\n    }\n\n    return this.overlays.get(logicalPosition).toastrContainer;\n  }\n\n  protected instantiateContainer(position: NbGlobalLogicalPosition) {\n    const toastrOverlayWithContainer = this.createContainer(position);\n    this.overlays.set(position, toastrOverlayWithContainer);\n  }\n\n  protected createContainer(position: NbGlobalLogicalPosition): NbToastrOverlayWithContainer {\n    const positionStrategy = this.positionBuilder.global().position(position);\n    const ref = this.overlay.create({ positionStrategy });\n    this.addClassToOverlayHost(ref);\n    const containerRef = ref.attach(new NbComponentPortal(NbToastrContainerComponent, null, null, this.cfr));\n    return {\n      overlayRef: ref,\n      toastrContainer: new NbToastContainer(position, containerRef, this.positionHelper),\n    };\n  }\n\n  protected addClassToOverlayHost(overlayRef: NbOverlayRef) {\n    overlayRef.hostElement.classList.add('toastr-overlay-container');\n  }\n\n  protected existsInDom(toastContainer: NbToastContainer): boolean {\n    return this.document.body.contains(toastContainer.nativeElement);\n  }\n}\n\n/**\n * The `NbToastrService` provides a capability to build toast notifications.\n *\n * @stacked-example(Showcase, toastr/toastr-showcase.component)\n *\n * `NbToastrService.show(message, title, config)` accepts three params, title and config are optional.\n *\n * ### Installation\n *\n * Import `NbToastrModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbToastrModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * ### Usage\n *\n * Calling `NbToastrService.show(...)` will render new toast and return `NbToastrRef` with\n * help of which you may close newly created toast by calling `close` method.\n *\n * ```ts\n * const toastRef: NbToastRef = this.toastrService.show(...);\n * toastRef.close();\n * ```\n *\n * Config accepts following options:\n *\n * `position` - determines where on the screen toast will be rendered.\n * Default is `top-end`.\n *\n * @stacked-example(Position, toastr/toastr-positions.component)\n *\n * `status` - coloring and icon of the toast.\n * Default is `basic`.\n *\n * @stacked-example(Status, toastr/toastr-statuses.component)\n *\n * `duration` - the time after which the toast will be destroyed.\n * `0` means endless toast, that may be destroyed by click only.\n * Default is 3000 ms.\n *\n * @stacked-example(Duration, toastr/toastr-duration.component)\n *\n * `destroyByClick` - provides a capability to destroy toast by click.\n * Default is true.\n *\n * @stacked-example(Destroy by click, toastr/toastr-destroy-by-click.component)\n *\n * `preventDuplicates` - don't create new toast if it has the same title, message and status.\n * Default is false.\n *\n * @stacked-example(Prevent duplicates, toastr/toastr-prevent-duplicates.component)\n *\n * `duplicatesBehaviour` - determines how to threat the toasts duplication.\n * Compare with the previous message `previous`\n * or with all visible messages `all`.\n *\n * @stacked-example(Prevent duplicates behaviour , toastr/toastr-prevent-duplicates-behaviour.component)\n *\n * `limit` - the number of visible toasts in the toast container. The number of toasts is unlimited by default.\n *\n * @stacked-example(Prevent duplicates behaviour , toastr/toastr-limit.component)\n *\n * `hasIcon` - if true then render toast icon.\n * `icon` - you can pass icon class that will be applied into the toast.\n *\n * @stacked-example(Has icon, toastr/toastr-icon.component)\n * */\n@Injectable()\nexport class NbToastrService {\n  constructor(@Inject(NB_TOASTR_CONFIG) protected globalConfig: NbToastrConfig,\n              protected containerRegistry: NbToastrContainerRegistry) {\n  }\n\n  /**\n   * Shows toast with message, title and user config.\n   * */\n  show(message, title?, userConfig?: Partial<NbToastrConfig>): NbToastRef {\n    const config = new NbToastrConfig({ ...this.globalConfig, ...userConfig });\n    const container = this.containerRegistry.get(config.position);\n    const toast = { message, title, config };\n    return container.attach(toast);\n  }\n\n  /**\n   * Shows success toast with message, title and user config.\n   * */\n  success(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'success' });\n  }\n\n  /**\n   * Shows info toast with message, title and user config.\n   * */\n  info(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'info' });\n  }\n\n  /**\n   * Shows warning toast with message, title and user config.\n   * */\n  warning(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'warning' });\n  }\n\n  /**\n   * Shows primary toast with message, title and user config.\n   * */\n  primary(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'primary' });\n  }\n\n  /**\n   * Shows danger toast with message, title and user config.\n   * */\n  danger(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'danger' });\n  }\n\n  /**\n   * Shows default toast with message, title and user config.\n   * */\n  default(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.show(message, title, { ...config, status: 'basic' });\n  }\n\n  /**\n   * Shows control toast with message, title and user config.\n   * */\n  control(message, title?, config?: Partial<NbToastrConfig>): NbToastRef {\n    return this.default(message, title, { ...config, status: 'control' });\n  }\n}\n"]}