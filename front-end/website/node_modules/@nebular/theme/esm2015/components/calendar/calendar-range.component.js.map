{"version":3,"file":"calendar-range.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar/calendar-range.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\n\nimport {\n  NbCalendarCell,\n  NbCalendarSize,\n  NbCalendarViewMode,\n  NbCalendarSizeValues,\n  NbCalendarViewModeValues,\n} from '../calendar-kit/model';\nimport { NbDateService } from '../calendar-kit/services/date.service';\nimport { NbCalendarRangeDayCellComponent } from './calendar-range-day-cell.component';\nimport { NbCalendarRangeYearCellComponent } from './calendar-range-year-cell.component';\nimport { NbCalendarRangeMonthCellComponent } from './calendar-range-month-cell.component';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\n\n\nexport interface NbCalendarRange<D> {\n  start: D;\n  end?: D;\n}\n\n/**\n * CalendarRange component provides a capability to choose a date range.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarRangeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCalendarRangeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * CalendarRange component supports all of the Calendar component customization properties. More defails can be found\n * in the [Calendar component docs](docs/components/calendar).\n *\n * @styles\n *\n * calendar-width:\n * calendar-background-color:\n * calendar-border-color:\n * calendar-border-style:\n * calendar-border-width:\n * calendar-border-radius:\n * calendar-text-color:\n * calendar-text-font-family:\n * calendar-text-font-size:\n * calendar-text-font-weight:\n * calendar-text-line-height:\n * calendar-picker-padding-top:\n * calendar-picker-padding-bottom:\n * calendar-picker-padding-start:\n * calendar-picker-padding-end:\n * calendar-navigation-text-color:\n * calendar-navigation-text-font-family:\n * calendar-navigation-title-text-font-size:\n * calendar-navigation-title-text-font-weight:\n * calendar-navigation-title-text-line-height:\n * calendar-navigation-padding:\n * calendar-cell-inactive-text-color:\n * calendar-cell-disabled-text-color:\n * calendar-cell-hover-background-color:\n * calendar-cell-hover-border-color:\n * calendar-cell-hover-text-color:\n * calendar-cell-hover-text-font-size:\n * calendar-cell-hover-text-font-weight:\n * calendar-cell-hover-text-line-height:\n * calendar-cell-active-background-color:\n * calendar-cell-active-border-color:\n * calendar-cell-active-text-color:\n * calendar-cell-active-text-font-size:\n * calendar-cell-active-text-font-weight:\n * calendar-cell-active-text-line-height:\n * calendar-cell-today-background-color:\n * calendar-cell-today-border-color:\n * calendar-cell-today-text-color:\n * calendar-cell-today-text-font-size:\n * calendar-cell-today-text-font-weight:\n * calendar-cell-today-text-line-height:\n * calendar-cell-today-hover-background-color:\n * calendar-cell-today-hover-border-color:\n * calendar-cell-today-active-background-color:\n * calendar-cell-today-active-border-color:\n * calendar-cell-today-disabled-border-color:\n * calendar-cell-today-selected-background-color:\n * calendar-cell-today-selected-border-color:\n * calendar-cell-today-selected-text-color:\n * calendar-cell-today-selected-hover-background-color:\n * calendar-cell-today-selected-hover-border-color:\n * calendar-cell-today-selected-active-background-color:\n * calendar-cell-today-selected-active-border-color:\n * calendar-cell-today-in-range-background-color:\n * calendar-cell-today-in-range-border-color:\n * calendar-cell-today-in-range-text-color:\n * calendar-cell-today-in-range-hover-background-color:\n * calendar-cell-today-in-range-hover-border-color:\n * calendar-cell-today-in-range-active-background-color:\n * calendar-cell-today-in-range-active-border-color:\n * calendar-cell-selected-background-color:\n * calendar-cell-selected-border-color:\n * calendar-cell-selected-text-color:\n * calendar-cell-selected-text-font-size:\n * calendar-cell-selected-text-font-weight:\n * calendar-cell-selected-text-line-height:\n * calendar-cell-selected-hover-background-color:\n * calendar-cell-selected-hover-border-color:\n * calendar-cell-selected-active-background-color:\n * calendar-cell-selected-active-border-color:\n * calendar-day-cell-width:\n * calendar-day-cell-height:\n * calendar-month-cell-width:\n * calendar-month-cell-height:\n * calendar-year-cell-width:\n * calendar-year-cell-height:\n * calendar-weekday-background:\n * calendar-weekday-divider-color:\n * calendar-weekday-divider-width:\n * calendar-weekday-text-color:\n * calendar-weekday-text-font-size:\n * calendar-weekday-text-font-weight:\n * calendar-weekday-text-line-height:\n * calendar-weekday-holiday-text-color:\n * calendar-weekday-height:\n * calendar-weekday-width:\n * calendar-weeknumber-background:\n * calendar-weeknumber-divider-color:\n * calendar-weeknumber-divider-width:\n * calendar-weeknumber-text-color:\n * calendar-weeknumber-text-font-size:\n * calendar-weeknumber-text-font-weight:\n * calendar-weeknumber-text-line-height:\n * calendar-weeknumber-height:\n * calendar-weeknumber-width:\n * calendar-large-width:\n * calendar-day-cell-large-width:\n * calendar-day-cell-large-height:\n * calendar-weekday-large-height:\n * calendar-weekday-large-width:\n * calendar-weeknumber-large-height:\n * calendar-weeknumber-large-width:\n * calendar-month-cell-large-width:\n * calendar-month-cell-large-height:\n * calendar-year-cell-large-width:\n * calendar-year-cell-large-height:\n * */\n@Component({\n  selector: 'nb-calendar-range',\n  template: `\n    <nb-base-calendar\n      [date]=\"range\"\n      (dateChange)=\"onChange($any($event))\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [startView]=\"startView\"\n      [boundingMonth]=\"boundingMonth\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [visibleDate]=\"visibleDate\"\n      [showNavigation]=\"showNavigation\"\n      [size]=\"size\"\n      [showWeekNumber]=\"showWeekNumber\"\n      [weekNumberSymbol]=\"weekNumberSymbol\"\n    ></nb-base-calendar>\n  `,\n})\nexport class NbCalendarRangeComponent<D> {\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines starting view for the calendar.\n   * */\n  @Input() startView: NbCalendarViewMode = NbCalendarViewMode.DATE;\n  static ngAcceptInputType_startView: NbCalendarViewModeValues;\n\n  /**\n   * A minimum available date for selection.\n   * */\n  @Input() min: D;\n\n  /**\n   * A maximum available date for selection.\n   * */\n  @Input() max: D;\n\n  /**\n   * A predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (D) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('dayCellComponent')\n  set _cellComponent(cellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>>) {\n    if (cellComponent) {\n      this.dayCellComponent = cellComponent;\n    }\n  }\n  dayCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>> = NbCalendarRangeDayCellComponent;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>> = NbCalendarRangeMonthCellComponent;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('yearCellComponent')\n  set _yearCellComponent(cellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>>) {\n    if (cellComponent) {\n      this.yearCellComponent = cellComponent;\n    }\n  }\n  yearCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>> = NbCalendarRangeYearCellComponent;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n  static ngAcceptInputType_size: NbCalendarSizeValues;\n\n  @Input() visibleDate: D;\n\n  /**\n   * Determines should we show calendars navigation or not.\n   * */\n  @Input() showNavigation: boolean = true;\n\n  /**\n   * Range which will be rendered as selected.\n   * */\n  @Input() range: NbCalendarRange<D>;\n\n  /**\n   * Determines should we show week numbers column.\n   * False by default.\n   * */\n  @Input()\n  get showWeekNumber(): boolean {\n    return this._showWeekNumber;\n  }\n  set showWeekNumber(value: boolean) {\n    this._showWeekNumber = convertToBoolProperty(value);\n  }\n  protected _showWeekNumber: boolean = false;\n  static ngAcceptInputType_showWeekNumber: NbBooleanInput;\n\n  /**\n   * Sets symbol used as a header for week numbers column\n   * */\n  @Input() weekNumberSymbol: string = '#';\n\n  /**\n   * Emits range when start selected and emits again when end selected.\n   * */\n  @Output() rangeChange: EventEmitter<NbCalendarRange<D>> = new EventEmitter();\n\n  constructor(protected dateService: NbDateService<D>) {\n  }\n\n  onChange(date: D) {\n    this.initDateIfNull();\n    this.handleSelected(date);\n  }\n\n  private initDateIfNull() {\n    if (!this.range) {\n      this.range = { start: null, end: null };\n    }\n  }\n\n  private handleSelected(date: D) {\n    if (this.selectionStarted()) {\n      this.selectEnd(date);\n    } else {\n      this.selectStart(date);\n    }\n  }\n\n  private selectionStarted(): boolean {\n    const { start, end } = this.range;\n    return start && !end;\n  }\n\n  private selectStart(start: D) {\n    this.selectRange({ start });\n  }\n\n  private selectEnd(date: D) {\n    const { start } = this.range;\n\n    if (this.dateService.compareDates(date, start) > 0) {\n      this.selectRange({ start, end: date });\n    } else {\n      this.selectRange({ start: date, end: start });\n    }\n  }\n\n  private selectRange(range: NbCalendarRange<D>) {\n    this.range = range;\n    this.rangeChange.emit(range);\n  }\n}\n"]}