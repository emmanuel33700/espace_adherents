{"version":3,"file":"layout.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/layout/layout.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit, Component, ElementRef, HostBinding, HostListener, Input, OnDestroy,\n  Renderer2, ViewChild, ViewContainerRef, Inject, PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbSpinnerService } from '../../services/spinner.service';\nimport { NbLayoutDirectionService } from '../../services/direction.service';\nimport { NbRestoreScrollTopHelper } from './restore-scroll-top.service';\nimport { NbScrollPosition, NbLayoutScrollService } from '../../services/scroll.service';\nimport { NbLayoutDimensions, NbLayoutRulerService } from '../../services/ruler.service';\nimport { NB_WINDOW, NB_DOCUMENT } from '../../theme.options';\nimport { NbOverlayContainerAdapter } from '../cdk/adapter/overlay-container-adapter';\n\n/**\n * Layout container component.\n * When using with Nebular Theme System it is required that all child components should be placed inside.\n *\n * Basic example of two column layout with header:\n *\n * @stacked-example(Showcase, layout/layout-showcase.component)\n *\n * Can contain the following components inside:\n *\n * ```html\n * <nb-layout>\n *  <nb-layout-header></nb-layout-header>\n *  <nb-layout-footer></nb-layout-footer>\n *  <nb-layout-column></nb-layout-column>\n *  <nb-sidebar></nb-sidebar>\n * </nb-layout>\n * ```\n * ### Installation\n *\n * Import `NbLayoutModule` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbLayoutModule,\n *   ],\n * })\n * export class AppModule { }\n * ```\n * ### Usage\n * By default the layout fills up the whole view-port.\n * The window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\n * won't mess with the fixed nb-header.\n *\n * The child components are projected into a flexible layout structure allowing to adjust the layout behavior\n * based on the settings provided.\n *\n * The layout content (columns) becomes centered when the window width is more than\n * the value specified in the theme variable `layout-content-width`.\n *\n * The layout also contains the area on the very top (the first child of the nb-layout), which could be used\n * to dynamically append some components like modals or spinners/loaders\n * so that they are located on top of the elements hierarchy.\n * More details are under the `ThemeService` section.\n *\n * The layout component is also responsible for changing application themes.\n * It listens to the `themeChange` event and change a theme CSS class appended to body.\n * Based on the class appended, specific CSS-theme is applied to the application.\n * More details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n *\n * A simple layout with footer:\n *\n * @stacked-example(Layout With Footer, layout/layout-w-footer.component)\n *\n * It is possible to ask the layout to center the columns (notice: we added a `center` attribute\n * to the layout:\n *\n * ```html\n * <nb-layout center>\n *   <nb-layout-header>Awesome Company</nb-layout-header>\n *\n *   <nb-layout-column>\n *     Hello World!\n *   </nb-layout-column>\n *\n *   <nb-layout-footer>Contact us</nb-layout-footer>\n * </nb-layout>\n * ```\n *\n * @styles\n *\n * layout-background-color:\n * layout-text-color:\n * layout-text-font-family:\n * layout-text-font-size:\n * layout-text-font-weight:\n * layout-text-line-height:\n * layout-min-height:\n * layout-content-width:\n * layout-window-mode-min-width:\n * layout-window-mode-max-width:\n * layout-window-mode-background-color:\n * layout-window-mode-padding-top:\n * layout-window-shadow:\n * layout-padding:\n * layout-medium-padding:\n * layout-small-padding:\n * layout-scrollbar-background-color:\n * layout-scrollbar-color:\n * layout-scrollbar-width:\n */\n@Component({\n  selector: 'nb-layout',\n  styleUrls: ['./layout.component.css'],\n  template: `\n    <div class=\"scrollable-container\" #scrollableContainer (scroll)=\"onScroll($event)\">\n      <div class=\"layout\" #layoutContainer>\n        <ng-content select=\"nb-layout-header:not([subheader])\"></ng-content>\n        <div class=\"layout-container\">\n          <ng-content select=\"nb-sidebar\"></ng-content>\n          <div class=\"content\" [class.center]=\"centerValue\">\n            <ng-content select=\"nb-layout-header[subheader]\"></ng-content>\n            <div class=\"columns\">\n              <ng-content select=\"nb-layout-column\"></ng-content>\n            </div>\n            <ng-content select=\"nb-layout-footer\"></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NbLayoutComponent implements AfterViewInit, OnDestroy {\n\n  protected scrollBlockClass = 'nb-global-scrollblock';\n  protected isScrollBlocked = false;\n  protected scrollableContainerOverflowOldValue: string;\n  protected layoutPaddingOldValue: { left: string; right: string };\n\n  centerValue: boolean = false;\n  restoreScrollTopValue: boolean = true;\n\n  @HostBinding('class.window-mode') windowModeValue: boolean = false;\n  @HostBinding('class.with-scroll') withScrollValue: boolean = false;\n  @HostBinding('class.with-subheader') withSubheader: boolean = false;\n\n  /**\n   * Defines whether the layout columns will be centered after some width\n   * @param {boolean} val\n   */\n  @Input()\n  set center(val: boolean) {\n    this.centerValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_center: NbBooleanInput;\n\n  /**\n   * Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\n   * becomes centered by width with a margin from the top of the screen, like a floating window.\n   * Automatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\n   * window. (TODO: check this)\n   * @param {boolean} val\n   */\n  @Input()\n  set windowMode(val: boolean) {\n    this.windowModeValue = convertToBoolProperty(val);\n    this.withScroll = this.windowModeValue;\n  }\n  static ngAcceptInputType_windowMode: NbBooleanInput;\n\n  /**\n   * Defines whether to move the scrollbars to layout or leave it at the body level.\n   * Automatically set to true when `windowMode` is enabled.\n   * @param {boolean} val\n   */\n  @Input()\n  set withScroll(val: boolean) {\n    this.withScrollValue = convertToBoolProperty(val);\n\n    // TODO: is this the best way of doing it? as we don't have access to body from theme styles\n    // TODO: add e2e test\n    const body = this.document.getElementsByTagName('body')[0];\n    if (this.withScrollValue) {\n      this.renderer.setStyle(body, 'overflow', 'hidden');\n    } else {\n      this.renderer.setStyle(body, 'overflow', 'initial');\n    }\n  }\n  static ngAcceptInputType_withScroll: NbBooleanInput;\n\n  /**\n   * Restores scroll to the top of the page after navigation\n   * @param {boolean} val\n   */\n  @Input()\n  set restoreScrollTop(val: boolean) {\n    this.restoreScrollTopValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_restoreScrollTop: NbBooleanInput;\n\n  // TODO remove as of 5.0.0\n  @ViewChild('layoutTopDynamicArea', { read: ViewContainerRef }) veryTopRef: ViewContainerRef;\n\n  @ViewChild('scrollableContainer', { read: ElementRef })\n  scrollableContainerRef: ElementRef<HTMLElement>;\n\n  @ViewChild('layoutContainer', { read: ElementRef })\n  layoutContainerRef: ElementRef<HTMLElement>;\n\n  protected afterViewInit$ = new BehaviorSubject(null);\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected themeService: NbThemeService,\n    protected spinnerService: NbSpinnerService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n    @Inject(NB_WINDOW) protected window,\n    @Inject(NB_DOCUMENT) protected document,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected layoutDirectionService: NbLayoutDirectionService,\n    protected scrollService: NbLayoutScrollService,\n    protected rulerService: NbLayoutRulerService,\n    protected scrollTop: NbRestoreScrollTopHelper,\n    protected overlayContainer: NbOverlayContainerAdapter,\n  ) {\n    this.registerAsOverlayContainer();\n\n    this.themeService.onThemeChange()\n      .pipe(\n        takeUntil(this.destroy$),\n      )\n      .subscribe((theme: any) => {\n        const body = this.document.getElementsByTagName('body')[0];\n        if (theme.previous) {\n          this.renderer.removeClass(body, `nb-theme-${theme.previous}`);\n        }\n        this.renderer.addClass(body, `nb-theme-${theme.name}`);\n      });\n\n    this.themeService.onAppendLayoutClass()\n      .pipe(\n        takeUntil(this.destroy$),\n      )\n      .subscribe((className: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      });\n\n    this.themeService.onRemoveLayoutClass()\n      .pipe(\n        takeUntil(this.destroy$),\n      )\n      .subscribe((className: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, className);\n      });\n\n    this.spinnerService.registerLoader(new Promise((resolve, reject) => {\n      this.afterViewInit$\n        .pipe(\n          takeUntil(this.destroy$),\n        )\n        .subscribe((_) => resolve());\n    }));\n    this.spinnerService.load();\n\n    this.rulerService.onGetDimensions()\n      .pipe(\n        takeUntil(this.destroy$),\n      )\n      .subscribe(({ listener }) => {\n        listener.next(this.getDimensions());\n        listener.complete();\n      });\n\n    this.scrollService\n      .onScrollableChange()\n      .pipe(\n        filter(() => this.withScrollValue),\n      )\n      .subscribe((scrollable: boolean) => {\n        /**\n         * In case when Nebular Layout custom scroll `withScroll` mode is enabled\n         * we need to disable default CDK scroll blocker (@link NbBlockScrollStrategyAdapter) on HTML element\n         * so that it won't add additional positioning.\n         */\n        if (scrollable) {\n          this.enableScroll();\n        } else {\n          this.blockScroll();\n        }\n      });\n\n    if (isPlatformBrowser(this.platformId)) {\n      // trigger first time so that after the change we have the initial value\n      this.themeService.changeWindowWidth(this.window.innerWidth);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.scrollService.onGetPosition()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ listener }) => {\n        listener.next(this.getScrollPosition());\n        listener.complete();\n      });\n\n    this.scrollTop.shouldRestore()\n      .pipe(filter(\n        () => this.restoreScrollTopValue),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(() => this.scroll(0, 0));\n\n    this.layoutDirectionService.onDirectionChange()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(direction => this.document.dir = direction);\n\n    this.scrollService.onManualScroll()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ x, y }: NbScrollPosition) => this.scroll(x, y));\n\n    this.afterViewInit$.next(true);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.unregisterAsOverlayContainer();\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll($event) {\n    this.scrollService.fireScrollChange($event);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.themeService.changeWindowWidth(event.target.innerWidth);\n  }\n\n  /**\n   * Returns scroll and client height/width\n   *\n   * Depending on the current scroll mode (`withScroll=true`) returns sizes from the body element\n   * or from the `.scrollable-container`\n   * @returns {NbLayoutDimensions}\n   */\n  getDimensions(): NbLayoutDimensions {\n    let clientWidth, clientHeight, scrollWidth, scrollHeight = 0;\n    if (this.withScrollValue) {\n      const container = this.scrollableContainerRef.nativeElement;\n      clientWidth = container.clientWidth;\n      clientHeight = container.clientHeight;\n      scrollWidth = container.scrollWidth;\n      scrollHeight = container.scrollHeight;\n    } else {\n      const { documentElement, body } = this.document;\n      clientWidth = documentElement.clientWidth || body.clientWidth;\n      clientHeight = documentElement.clientHeight || body.clientHeight;\n      scrollWidth = documentElement.scrollWidth || body.scrollWidth;\n      scrollHeight = documentElement.scrollHeight || body.scrollHeight;\n    }\n\n    return {\n      clientWidth,\n      clientHeight,\n      scrollWidth,\n      scrollHeight,\n    };\n  }\n\n  /**\n   * Returns scroll position of current scroll container.\n   *\n   * If `withScroll` = true, returns scroll position of the `.scrollable-container` element,\n   * otherwise - of the scrollable element of the window (which may be different depending of a browser)\n   *\n   * @returns {NbScrollPosition}\n   */\n  getScrollPosition(): NbScrollPosition {\n    if (!isPlatformBrowser(this.platformId)) {\n      return { x: 0, y: 0 };\n    }\n\n    if (this.withScrollValue) {\n      const container = this.scrollableContainerRef.nativeElement;\n      return { x: container.scrollLeft, y: container.scrollTop };\n    }\n\n    const documentRect = this.document.documentElement.getBoundingClientRect();\n\n    const x = -documentRect.left || this.document.body.scrollLeft || this.window.scrollX ||\n      this.document.documentElement.scrollLeft || 0;\n\n    const y = -documentRect.top || this.document.body.scrollTop || this.window.scrollY ||\n      this.document.documentElement.scrollTop || 0;\n\n\n    return { x, y };\n  }\n\n  protected registerAsOverlayContainer() {\n    if (this.overlayContainer.setContainer) {\n      this.overlayContainer.setContainer(this.elementRef.nativeElement);\n    }\n  }\n\n  protected unregisterAsOverlayContainer() {\n    if (this.overlayContainer.clearContainer) {\n      this.overlayContainer.clearContainer();\n    }\n  }\n\n  private scroll(x: number = null, y: number = null) {\n    const { x: currentX, y: currentY } = this.getScrollPosition();\n    x = x == null ? currentX : x;\n    y = y == null ? currentY : y;\n\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (this.withScrollValue) {\n      const scrollable = this.scrollableContainerRef.nativeElement;\n      if (scrollable.scrollTo) {\n        scrollable.scrollTo(x, y);\n      } else {\n        scrollable.scrollLeft = x;\n        scrollable.scrollTop = y;\n      }\n    } else {\n      this.window.scrollTo(x, y);\n    }\n  }\n\n  // TODO: Extract into block scroll strategy\n  protected blockScroll() {\n    if (this.isScrollBlocked) {\n      return;\n    }\n\n    this.isScrollBlocked = true;\n\n    this.renderer.addClass(this.document.documentElement, this.scrollBlockClass);\n\n    const scrollableContainerElement = this.scrollableContainerRef.nativeElement;\n    const layoutElement = this.layoutContainerRef.nativeElement;\n\n    const layoutWithScrollWidth = layoutElement.clientWidth;\n    this.scrollableContainerOverflowOldValue = scrollableContainerElement.style.overflow;\n    scrollableContainerElement.style.overflow = 'hidden';\n    const layoutWithoutScrollWidth = layoutElement.clientWidth;\n    const scrollWidth = layoutWithoutScrollWidth - layoutWithScrollWidth;\n\n    if (!scrollWidth) {\n      return;\n    }\n\n    this.layoutPaddingOldValue = {\n      left: layoutElement.style.paddingLeft,\n      right: layoutElement.style.paddingRight,\n    };\n\n    if (this.layoutDirectionService.isLtr()) {\n      layoutElement.style.paddingRight = `${scrollWidth}px`;\n    } else {\n      layoutElement.style.paddingLeft = `${scrollWidth}px`;\n    }\n  }\n\n  private enableScroll() {\n    if (this.isScrollBlocked) {\n      this.isScrollBlocked = false;\n\n      this.renderer.removeClass(this.document.documentElement, this.scrollBlockClass);\n      this.scrollableContainerRef.nativeElement.style.overflow = this.scrollableContainerOverflowOldValue;\n\n      if (this.layoutPaddingOldValue) {\n        const layoutElement = this.layoutContainerRef.nativeElement;\n        layoutElement.style.paddingLeft = this.layoutPaddingOldValue.left;\n        layoutElement.style.paddingRight = this.layoutPaddingOldValue.right;\n        this.layoutPaddingOldValue = null;\n      }\n    }\n  }\n}\n\n/**\n * A container component which determines a content position inside of the layout.\n * The layout could contain unlimited columns (not including the sidebars).\n *\n * By default the columns are ordered from the left to the right,\n * but it's also possible to overwrite this behavior by setting a `left` attribute to the column,\n * moving it to the very first position:\n *\n * @stacked-example(Column Left, layout/layout-column-left.component)\n */\n@Component({\n  selector: 'nb-layout-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class NbLayoutColumnComponent {\n\n  @HostBinding('class.left') leftValue: boolean;\n  @HostBinding('class.start') startValue: boolean;\n\n  /**\n   * Move the column to the very left position in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set left(val: boolean) {\n    this.leftValue = convertToBoolProperty(val);\n    this.startValue = false;\n  }\n  static ngAcceptInputType_left: NbBooleanInput;\n\n  /**\n   * Make column first in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set start(val: boolean) {\n    this.startValue = convertToBoolProperty(val);\n    this.leftValue = false;\n  }\n  static ngAcceptInputType_start: NbBooleanInput;\n}\n\n/**\n * Page header component.\n * Located on top of the page above the layout columns and sidebars.\n * Could be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\n * sticky to the top of the nb-layout (to of the page). Here's an example:\n *\n * @stacked-example(Fixed Header, layout/layout-fixed-header.component)\n *\n * In a pair with sidebar it is possible to setup a configuration when header is placed on a side of the sidebar\n * and not on top of it. To achieve this simply put a `subheader` property to the header like this:\n * ```html\n * <nb-layout-header subheader></nb-layout-header>\n * ```\n * @stacked-example(Subheader, layout/layout-sidebar-subheader.component)\n * Note that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n *\n * Same way you can put both `fixed` and `clipped` headers adding creating a sub-header for your app:\n *\n * @stacked-example(Subheader, layout/layout-subheader.component)\n *\n * @styles\n *\n * header-background-color:\n * header-text-color:\n * header-text-font-family:\n * header-text-font-size:\n * header-text-font-weight:\n * header-text-line-height:\n * header-height:\n * header-padding:\n * header-shadow:\n */\n@Component({\n  selector: 'nb-layout-header',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutHeaderComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n  @HostBinding('class.subheader') subheaderValue: boolean;\n\n  constructor(private layout: NbLayoutComponent) {}\n\n  /**\n   * Makes the header sticky to the top of the nb-layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_fixed: NbBooleanInput;\n\n  /**\n   * Places header on a side of the sidebar, and not above.\n   * Disables fixed mode for this header and remove a shadow from the sidebar.\n   * @param {boolean} val\n   */\n  @Input()\n  set subheader(val: boolean) {\n    this.subheaderValue = convertToBoolProperty(val);\n    this.fixedValue = false;\n    this.layout.withSubheader = this.subheaderValue;\n  }\n  static ngAcceptInputType_subheader: NbBooleanInput;\n}\n\n/**\n * Page footer.\n * Located under the nb-layout content (specifically, under the columns).\n * Could be made `fixed`, becoming sticky to the bottom of the view port (window).\n *\n * @styles\n *\n * footer-background-color:\n * footer-text-color:\n * footer-text-font-family:\n * footer-text-font-size:\n * footer-text-font-weight:\n * footer-text-line-height:\n * footer-text-highlight-color:\n * footer-height:\n * footer-padding:\n * footer-divider-color:\n * footer-divider-style:\n * footer-divider-width:\n * footer-shadow:\n */\n@Component({\n  selector: 'nb-layout-footer',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutFooterComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n\n  /**\n   * Makes the footer sticky to the bottom of the window.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_fixed: NbBooleanInput;\n\n}\n"]}