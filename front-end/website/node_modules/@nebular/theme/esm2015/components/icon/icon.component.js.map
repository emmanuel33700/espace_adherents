{"version":3,"file":"icon.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/icon/icon.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,UAAU,EACV,WAAW,EACX,KAAK,EAGL,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,YAAY,EAAY,MAAM,2BAA2B,CAAC;AAGnE,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AASnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+EG;AAOH,IAAa,eAAe,GAA5B,MAAa,eAAe;IA8F1B,YACY,SAAuB,EACvB,WAA4B,EAC5B,EAAc,EACd,QAAmB;QAHnB,cAAS,GAAT,SAAS,CAAc;QACvB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,OAAE,GAAF,EAAE,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAW;QA/FrB,gBAAW,GAAG,EAAE,CAAC;QAG3B,SAAI,GAAa,EAAE,CAAC;IA6FjB,CAAC;IA1FJ,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC;IAChC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IAGD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC;IAClC,CAAC;IAGD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC;IACjC,CAAC;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;IACnC,CAAC;IA0BD;;;;OAIG;IAEH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACD,IAAI,MAAM,CAAC,KAA4B;QACrC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;SAC9B;IACH,CAAC;IAUD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACpE;IACH,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,IAAa,EAAE,OAAiC;QACvE,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE5D,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;SAC7D;QAED,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5D,OAAO,cAAc,CAAC;IACxB,CAAC;IAES,aAAa,CAAC,OAAiB;QACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAiB,EAAE,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,CAAC,SAAiB,EAAE,EAAE;YACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;IAC7B,CAAC;CACF,CAAA;AAhIC;IADC,WAAW,CAAC,WAAW,CAAC;;6CACL;AAGpB;IADC,WAAW,CAAC,sBAAsB,CAAC;;;8CAGnC;AAGD;IADC,WAAW,CAAC,mBAAmB,CAAC;;;2CAGhC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;8CAGnC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;8CAGnC;AAGD;IADC,WAAW,CAAC,qBAAqB,CAAC;;;6CAGlC;AAGD;IADC,WAAW,CAAC,oBAAoB,CAAC;;;4CAGjC;AAGD;IADC,WAAW,CAAC,sBAAsB,CAAC;;;8CAGnC;AAMQ;IAAR,KAAK,EAAE;;6CAAc;AAMb;IAAR,KAAK,EAAE;;6CAAc;AAMb;IAAR,KAAK,EAAE;;gDAAkC;AAMjC;IAAR,KAAK,EAAE;;+CAA4B;AAQpC;IADC,KAAK,EAAE;;;6CAGP;AA3EU,eAAe;IAN3B,SAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QAEnB,QAAQ,EAAE,EAAE;QACZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;;KAChD,CAAC;qCAgGuB,YAAY;QACV,eAAe;QACxB,UAAU;QACJ,SAAS;GAlGpB,eAAe,CAsI3B;SAtIY,eAAe","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { NbComponentStatus } from '../component-status';\nimport { NbIconLibraries } from './icon-libraries';\n\nexport interface NbIconConfig {\n  icon: string;\n  pack?: string;\n  status?: NbComponentStatus;\n  options?: { [name: string]: any };\n}\n\n/**\n * Icon component. Allows to render both `svg` and `font` icons.\n * Starting from Nebular 4.0 uses [Eva Icons](https://akveo.github.io/eva-icons/) pack by default.\n *\n * Basic icon example:\n * @stacked-example(Showcase, icon/icon-showcase.component)\n *\n * Icon configuration:\n *\n * ```html\n * <nb-icon icon=\"star\"></nb-icon>\n * ```\n * ### Installation\n *\n * By default Nebular comes without any pre-installed icon pack.\n * Starting with Nebular 4.0.0 we ship separate package called `@nebular/eva-icons`\n * which integrates SVG [Eva Icons](https://akveo.github.io/eva-icons/) pack to Nebular. To add it to your\n * project run:\n * ```sh\n * npm i @nebular/eva-icons\n * ```\n * This command will install Eva Icons pack. Then register `NbEvaIconsModule` into your app module:\n * ```ts\n * import { NbEvaIconsModule } from '@nebular/eva-icons';\n *\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbEvaIconsModule,\n *   ],\n * })\n * export class AppModule { }\n * ```\n * Last thing, import `NbIconModule` to your feature module where you need to show an icon:\n * ```ts\n * import { NbIconModule } from '@nebular/theme';\n *\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbIconModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Icon can be colored using `status` input:\n * ```html\n * <nb-icon icon=\"star\" status=\"warning\"></nb-icon>\n * ```\n *\n * Colored icons:\n * @stacked-example(Colored Icons, icon/icon-colors.component)\n *\n * In case you need to specify an icon from a specific icon pack, this could be done using `pack` input property:\n * ```html\n * <nb-icon icon=\"star\" pack=\"font-awesome\"></nb-icon>\n * ```\n * Additional icon settings (if available by the icon pack) could be passed using `options` input:\n *\n * ```html\n * <nb-icon icon=\"star\" [options]=\"{ animation: { type: 'zoom' } }\"></nb-icon>\n * ```\n *\n * @styles\n *\n * icon-font-size:\n * icon-line-height:\n * icon-width:\n * icon-height:\n * icon-svg-vertical-align:\n * icon-basic-color:\n * icon-primary-color:\n * icon-info-color:\n * icon-success-color:\n * icon-warning-color:\n * icon-danger-color:\n * icon-control-color:\n */\n@Component({\n  selector: 'nb-icon',\n  styleUrls: [`./icon.component.css`],\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbIconComponent implements NbIconConfig, OnChanges, OnInit {\n\n  protected iconDef;\n  protected prevClasses = [];\n\n  @HostBinding('innerHtml')\n  html: SafeHtml = '';\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic() {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control() {\n    return this.status === 'control';\n  }\n\n  /**\n   * Icon name\n   * @param {string} status\n   */\n  @Input() icon: string;\n\n  /**\n   * Icon pack name\n   * @param {string} status\n   */\n  @Input() pack: string;\n\n  /**\n   * Additional icon settings\n   * @param {[name: string]: any}\n   */\n  @Input() options: { [name: string]: any };\n\n  /**\n   * Icon status (adds specific styles):\n   * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n   */\n  @Input() status?: NbComponentStatus;\n\n  /**\n   * Sets all icon configurable properties via config object.\n   * If passed value is a string set icon name.\n   * @docs-private\n   */\n  @Input()\n  get config(): string | NbIconConfig {\n    return this._config;\n  }\n  set config(value: string | NbIconConfig) {\n    if (!value) {\n      return;\n    }\n\n    this._config = value;\n\n    if (typeof value === 'string') {\n      this.icon = value;\n    } else {\n      this.icon = value.icon;\n      this.pack = value.pack;\n      this.status = value.status;\n      this.options = value.options;\n    }\n  }\n  protected _config: string | NbIconConfig;\n\n  constructor(\n    protected sanitizer: DomSanitizer,\n    protected iconLibrary: NbIconLibraries,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.iconDef = this.renderIcon(this.icon, this.pack, this.options);\n  }\n\n  ngOnChanges() {\n    if (this.iconDef) {\n      this.iconDef = this.renderIcon(this.icon, this.pack, this.options);\n    }\n  }\n\n  renderIcon(name: string, pack?: string, options?: { [name: string]: any }) {\n    const iconDefinition = this.iconLibrary.getIcon(name, pack);\n\n    const content = iconDefinition.icon.getContent(options);\n    if (content) {\n      this.html = this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n\n    this.assignClasses(iconDefinition.icon.getClasses(options));\n    return iconDefinition;\n  }\n\n  protected assignClasses(classes: string[]) {\n    this.prevClasses.forEach((className: string) => {\n      this.renderer.removeClass(this.el.nativeElement, className);\n    });\n\n    classes.forEach((className: string) => {\n      this.renderer.addClass(this.el.nativeElement, className);\n    });\n\n    this.prevClasses = classes;\n  }\n}\n"]}