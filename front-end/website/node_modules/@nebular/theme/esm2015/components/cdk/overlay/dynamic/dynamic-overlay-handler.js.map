{"version":3,"file":"dynamic-overlay-handler.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/cdk/overlay/dynamic/dynamic-overlay-handler.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef, Injectable, SimpleChange, Type } from '@angular/core';\n\nimport { NbTrigger, NbTriggerStrategy, NbTriggerStrategyBuilderService } from '../overlay-trigger';\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbPosition,\n  NbPositionBuilderService,\n} from '../overlay-position';\nimport { NbRenderableContainer } from '../overlay-container';\nimport { NbOverlayContent } from '../overlay-service';\nimport { NbDynamicOverlay } from './dynamic-overlay';\nimport { NbOverlayConfig } from '../mapping';\n\nexport class NbDynamicOverlayChange extends SimpleChange {\n\n  constructor(previousValue: any, currentValue: any, firstChange: boolean = false) {\n    super(previousValue, currentValue, firstChange);\n  }\n\n  isChanged(): boolean {\n    return this.currentValue !== this.previousValue;\n  }\n}\n\n@Injectable()\nexport class NbDynamicOverlayHandler {\n\n  protected _componentType: Type<NbRenderableContainer>;\n  protected _host: ElementRef;\n  protected _context: Object = {};\n  protected _content: NbOverlayContent;\n  protected _trigger: NbTrigger = NbTrigger.NOOP;\n  protected _position: NbPosition = NbPosition.TOP;\n  protected _adjustment: NbAdjustment = NbAdjustment.NOOP;\n  protected _offset: number = 15;\n  protected _overlayConfig: NbOverlayConfig = {};\n\n  protected dynamicOverlay: NbDynamicOverlay;\n  protected triggerStrategy: NbTriggerStrategy;\n\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n\n  protected changes: { [key: string]: NbDynamicOverlayChange } = {};\n\n  constructor(private positionBuilder: NbPositionBuilderService,\n              private triggerStrategyBuilder: NbTriggerStrategyBuilderService,\n              private dynamicOverlayService: NbDynamicOverlay) {\n  }\n\n  host(host: ElementRef) {\n    this.changes.host = new NbDynamicOverlayChange(this._host, host);\n    this._host = host;\n    return this;\n  }\n\n  trigger(trigger: NbTrigger) {\n    this.changes.trigger = new NbDynamicOverlayChange(this._trigger, trigger);\n    this._trigger = trigger;\n    return this;\n  }\n\n  position(position: NbPosition) {\n    this.changes.position = new NbDynamicOverlayChange(this._position, position);\n    this._position = position;\n    return this;\n  }\n\n  adjustment(adjustment: NbAdjustment) {\n    this.changes.adjustment = new NbDynamicOverlayChange(this._adjustment, adjustment);\n    this._adjustment = adjustment;\n    return this;\n  }\n\n  componentType(componentType: Type<NbRenderableContainer>) {\n    this.changes.componentType = new NbDynamicOverlayChange(this._componentType, componentType);\n    this._componentType = componentType;\n    return this;\n  }\n\n  content(content: NbOverlayContent) {\n    this.changes.content = new NbDynamicOverlayChange(this._content, content);\n    this._content = content;\n    return this;\n  }\n\n  context(context: {}) {\n    this.changes.context = new NbDynamicOverlayChange(this._context, context);\n    this._context = context;\n    return this;\n  }\n\n  offset(offset: number) {\n    this.changes.offset = new NbDynamicOverlayChange(this._offset, offset);\n    this._offset = offset;\n    return this;\n  }\n\n  overlayConfig(overlayConfig: NbOverlayConfig) {\n    this.changes.overlayConfig = new NbDynamicOverlayChange(this._overlayConfig, overlayConfig);\n    this._overlayConfig = overlayConfig;\n    return this;\n  }\n\n  build() {\n    if (!this._componentType || !this._host) {\n      throw Error(`NbDynamicOverlayHandler: at least 'componentType' and 'host' should be\n      passed before building a dynamic overlay.`)\n    }\n    this.dynamicOverlay = this.dynamicOverlayService.create(\n      this._componentType,\n      this._content,\n      this._context,\n      this.createPositionStrategy(),\n      this._overlayConfig,\n    );\n\n    this.connect();\n    this.clearChanges();\n\n    return this.dynamicOverlay;\n  }\n\n  rebuild() {\n    /**\n     * we should not throw here\n     * as we use rebuilt in lifecycle hooks\n     * which it could be called before the build\n     * so we just ignore this call\n     */\n    if (!this.dynamicOverlay) {\n      return;\n    }\n\n    if (this.isPositionStrategyUpdateRequired()) {\n      this.dynamicOverlay.setPositionStrategy(this.createPositionStrategy());\n    }\n\n    if (this.isTriggerStrategyUpdateRequired()) {\n      this.connect();\n    }\n\n    if (this.isContainerRerenderRequired()) {\n      this.dynamicOverlay.setContentAndContext(this._content, this._context);\n    }\n\n    if (this.isComponentTypeUpdateRequired()) {\n      this.dynamicOverlay.setComponent(this._componentType);\n    }\n\n    if (this.isOverlayConfigUpdateRequired()) {\n      this.dynamicOverlay.setOverlayConfig(this._overlayConfig);\n    }\n\n    this.clearChanges();\n    return this.dynamicOverlay;\n  }\n\n  connect() {\n    if (!this.dynamicOverlay) {\n      throw new Error(`NbDynamicOverlayHandler: cannot connect to DynamicOverlay\n      as it is not created yet. Call build() first`);\n    }\n    this.disconnect();\n    this.subscribeOnTriggers(this.dynamicOverlay);\n  }\n\n  disconnect() {\n    if (this.triggerStrategy) {\n      this.triggerStrategy.destroy();\n    }\n  }\n\n  destroy() {\n    this.disconnect();\n    this.clearChanges();\n    if (this.dynamicOverlay) {\n      this.dynamicOverlay.dispose();\n    }\n  }\n\n  protected createPositionStrategy() {\n    return this.positionBuilder\n      .connectedTo(this._host)\n      .position(this._position)\n      .adjustment(this._adjustment)\n      .offset(this._offset);\n  }\n\n  protected subscribeOnTriggers(dynamicOverlay: NbDynamicOverlay) {\n    this.triggerStrategy = this.triggerStrategyBuilder\n      .trigger(this._trigger)\n      .host(this._host.nativeElement)\n      .container(() => dynamicOverlay.getContainer())\n      .build();\n\n    this.triggerStrategy.show$.subscribe(() => dynamicOverlay.show());\n    this.triggerStrategy.hide$.subscribe(() => dynamicOverlay.hide());\n  }\n\n  protected isContainerRerenderRequired() {\n    return this.isContentUpdated()\n      || this.isContextUpdated()\n      || this.isPositionStrategyUpdateRequired();\n  }\n\n  protected isPositionStrategyUpdateRequired(): boolean {\n    return this.isAdjustmentUpdated() || this.isPositionUpdated() || this.isOffsetUpdated() || this.isHostUpdated();\n  }\n\n  protected isTriggerStrategyUpdateRequired(): boolean {\n    return this.isTriggerUpdated() || this.isHostUpdated();\n  }\n\n  protected isComponentTypeUpdateRequired(): boolean {\n    return this.isComponentTypeUpdated();\n  }\n\n  private isOverlayConfigUpdateRequired(): boolean {\n    return this.isOverlayConfigUpdated();\n  }\n\n  protected isComponentTypeUpdated(): boolean {\n    return this.changes.componentType && this.changes.componentType.isChanged();\n  }\n\n  protected isContentUpdated(): boolean {\n    return this.changes.content && this.changes.content.isChanged();\n  }\n\n  protected isContextUpdated(): boolean {\n    return this.changes.context && this.changes.context.isChanged();\n  }\n\n  protected isAdjustmentUpdated(): boolean {\n    return this.changes.adjustment && this.changes.adjustment.isChanged();\n  }\n\n  protected isPositionUpdated(): boolean {\n    return this.changes.position && this.changes.position.isChanged();\n  }\n\n  protected isHostUpdated(): boolean {\n    return this.changes.host && this.changes.host.isChanged();\n  }\n\n  protected isTriggerUpdated(): boolean {\n    return this.changes.trigger && this.changes.trigger.isChanged();\n  }\n\n  protected isOffsetUpdated(): boolean {\n    return this.changes.offset && this.changes.offset.isChanged();\n  }\n\n  protected isOverlayConfigUpdated(): boolean {\n    return this.changes.overlayConfig && this.changes.overlayConfig.isChanged();\n  }\n\n  protected clearChanges() {\n    this.changes = {};\n  }\n}\n"]}