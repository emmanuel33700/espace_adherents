{"version":3,"file":"checkbox.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/checkbox/checkbox.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  Input,\n  HostBinding,\n  forwardRef,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  NgZone,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { NbComponentStatus } from '../component-status';\nimport { convertToBoolProperty, emptyStatusWarning, NbBooleanInput } from '../helpers';\n\n/**\n * Styled checkbox component\n *\n * @stacked-example(Showcase, checkbox/checkbox-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCheckboxComponent` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCheckboxModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Checkbox is available in multiple colors using `status` property:\n * @stacked-example(Colored Checkboxes, checkbox/checkbox-status.component)\n *\n * Indeterminate state is also supported:\n * @stacked-example(Indeterminate Checkbox, checkbox/checkbox-indeterminate.component)\n *\n * Checkbox can be disabled via `disabled` attribute.\n * @stacked-example(Disabled Checkbox, checkbox/checkbox-disabled.component)\n *\n * @styles\n *\n * checkbox-height:\n * checkbox-width:\n * checkbox-border-style:\n * checkbox-border-width:\n * checkbox-border-radius:\n * checkbox-outline-width:\n * checkbox-outline-color:\n * checkbox-text-font-family:\n * checkbox-text-font-size:\n * checkbox-text-font-weight:\n * checkbox-text-line-height:\n * checkbox-text-space:\n * checkbox-padding:\n * checkbox-focus-inset-shadow-length:\n * checkbox-basic-text-color:\n * checkbox-basic-background-color:\n * checkbox-basic-border-color:\n * checkbox-basic-checked-background-color:\n * checkbox-basic-checked-border-color:\n * checkbox-basic-checked-checkmark-color:\n * checkbox-basic-indeterminate-background-color:\n * checkbox-basic-indeterminate-border-color:\n * checkbox-basic-indeterminate-checkmark-color:\n * checkbox-basic-focus-background-color:\n * checkbox-basic-focus-border-color:\n * checkbox-basic-focus-checked-background-color:\n * checkbox-basic-focus-checked-border-color:\n * checkbox-basic-hover-background-color:\n * checkbox-basic-hover-border-color:\n * checkbox-basic-hover-checked-background-color:\n * checkbox-basic-hover-checked-border-color:\n * checkbox-basic-active-background-color:\n * checkbox-basic-active-border-color:\n * checkbox-basic-active-checked-background-color:\n * checkbox-basic-active-checked-border-color:\n * checkbox-basic-disabled-background-color:\n * checkbox-basic-disabled-border-color:\n * checkbox-basic-disabled-checkmark-color:\n * checkbox-basic-disabled-text-color:\n * checkbox-basic-disabled-checked-background-color:\n * checkbox-primary-text-color:\n * checkbox-primary-background-color:\n * checkbox-primary-border-color:\n * checkbox-primary-checked-background-color:\n * checkbox-primary-checked-border-color:\n * checkbox-primary-checked-checkmark-color:\n * checkbox-primary-indeterminate-background-color:\n * checkbox-primary-indeterminate-border-color:\n * checkbox-primary-indeterminate-checkmark-color:\n * checkbox-primary-focus-background-color:\n * checkbox-primary-focus-border-color:\n * checkbox-primary-focus-checked-background-color:\n * checkbox-primary-focus-checked-border-color:\n * checkbox-primary-hover-background-color:\n * checkbox-primary-hover-border-color:\n * checkbox-primary-hover-checked-background-color:\n * checkbox-primary-hover-checked-border-color:\n * checkbox-primary-active-background-color:\n * checkbox-primary-active-border-color:\n * checkbox-primary-active-checked-background-color:\n * checkbox-primary-active-checked-border-color:\n * checkbox-primary-disabled-background-color:\n * checkbox-primary-disabled-border-color:\n * checkbox-primary-disabled-checkmark-color:\n * checkbox-primary-disabled-text-color:\n * checkbox-primary-disabled-checked-background-color:\n * checkbox-success-text-color:\n * checkbox-success-background-color:\n * checkbox-success-border-color:\n * checkbox-success-checked-background-color:\n * checkbox-success-checked-border-color:\n * checkbox-success-checked-checkmark-color:\n * checkbox-success-indeterminate-background-color:\n * checkbox-success-indeterminate-border-color:\n * checkbox-success-indeterminate-checkmark-color:\n * checkbox-success-focus-background-color:\n * checkbox-success-focus-border-color:\n * checkbox-success-focus-checked-background-color:\n * checkbox-success-focus-checked-border-color:\n * checkbox-success-hover-background-color:\n * checkbox-success-hover-border-color:\n * checkbox-success-hover-checked-background-color:\n * checkbox-success-hover-checked-border-color:\n * checkbox-success-active-background-color:\n * checkbox-success-active-border-color:\n * checkbox-success-active-checked-background-color:\n * checkbox-success-active-checked-border-color:\n * checkbox-success-disabled-background-color:\n * checkbox-success-disabled-border-color:\n * checkbox-success-disabled-checkmark-color:\n * checkbox-success-disabled-text-color:\n * checkbox-success-disabled-checked-background-color:\n * checkbox-info-text-color:\n * checkbox-info-background-color:\n * checkbox-info-border-color:\n * checkbox-info-checked-background-color:\n * checkbox-info-checked-border-color:\n * checkbox-info-checked-checkmark-color:\n * checkbox-info-indeterminate-background-color:\n * checkbox-info-indeterminate-border-color:\n * checkbox-info-indeterminate-checkmark-color:\n * checkbox-info-focus-background-color:\n * checkbox-info-focus-border-color:\n * checkbox-info-focus-checked-background-color:\n * checkbox-info-focus-checked-border-color:\n * checkbox-info-hover-background-color:\n * checkbox-info-hover-border-color:\n * checkbox-info-hover-checked-background-color:\n * checkbox-info-hover-checked-border-color:\n * checkbox-info-active-background-color:\n * checkbox-info-active-border-color:\n * checkbox-info-active-checked-background-color:\n * checkbox-info-active-checked-border-color:\n * checkbox-info-disabled-background-color:\n * checkbox-info-disabled-border-color:\n * checkbox-info-disabled-checkmark-color:\n * checkbox-info-disabled-text-color:\n * checkbox-info-disabled-checked-background-color:\n * checkbox-warning-text-color:\n * checkbox-warning-background-color:\n * checkbox-warning-border-color:\n * checkbox-warning-checked-background-color:\n * checkbox-warning-checked-border-color:\n * checkbox-warning-checked-checkmark-color:\n * checkbox-warning-indeterminate-background-color:\n * checkbox-warning-indeterminate-border-color:\n * checkbox-warning-indeterminate-checkmark-color:\n * checkbox-warning-focus-background-color:\n * checkbox-warning-focus-border-color:\n * checkbox-warning-focus-checked-background-color:\n * checkbox-warning-focus-checked-border-color:\n * checkbox-warning-hover-background-color:\n * checkbox-warning-hover-border-color:\n * checkbox-warning-hover-checked-background-color:\n * checkbox-warning-hover-checked-border-color:\n * checkbox-warning-active-background-color:\n * checkbox-warning-active-border-color:\n * checkbox-warning-active-checked-background-color:\n * checkbox-warning-active-checked-border-color:\n * checkbox-warning-disabled-background-color:\n * checkbox-warning-disabled-border-color:\n * checkbox-warning-disabled-checkmark-color:\n * checkbox-warning-disabled-text-color:\n * checkbox-warning-disabled-checked-background-color:\n * checkbox-danger-text-color:\n * checkbox-danger-background-color:\n * checkbox-danger-border-color:\n * checkbox-danger-checked-background-color:\n * checkbox-danger-checked-border-color:\n * checkbox-danger-checked-checkmark-color:\n * checkbox-danger-indeterminate-background-color:\n * checkbox-danger-indeterminate-border-color:\n * checkbox-danger-indeterminate-checkmark-color:\n * checkbox-danger-focus-background-color:\n * checkbox-danger-focus-border-color:\n * checkbox-danger-focus-checked-background-color:\n * checkbox-danger-focus-checked-border-color:\n * checkbox-danger-hover-background-color:\n * checkbox-danger-hover-border-color:\n * checkbox-danger-hover-checked-background-color:\n * checkbox-danger-hover-checked-border-color:\n * checkbox-danger-active-background-color:\n * checkbox-danger-active-border-color:\n * checkbox-danger-active-checked-background-color:\n * checkbox-danger-active-checked-border-color:\n * checkbox-danger-disabled-background-color:\n * checkbox-danger-disabled-border-color:\n * checkbox-danger-disabled-checkmark-color:\n * checkbox-danger-disabled-text-color:\n * checkbox-danger-disabled-checked-background-color:\n * checkbox-control-text-color:\n * checkbox-control-background-color:\n * checkbox-control-border-color:\n * checkbox-control-checked-background-color:\n * checkbox-control-checked-border-color:\n * checkbox-control-checked-checkmark-color:\n * checkbox-control-indeterminate-background-color:\n * checkbox-control-indeterminate-border-color:\n * checkbox-control-indeterminate-checkmark-color:\n * checkbox-control-focus-background-color:\n * checkbox-control-focus-border-color:\n * checkbox-control-focus-checked-background-color:\n * checkbox-control-focus-checked-border-color:\n * checkbox-control-hover-background-color:\n * checkbox-control-hover-border-color:\n * checkbox-control-hover-checked-background-color:\n * checkbox-control-hover-checked-border-color:\n * checkbox-control-active-background-color:\n * checkbox-control-active-border-color:\n * checkbox-control-active-checked-background-color:\n * checkbox-control-active-checked-border-color:\n * checkbox-control-disabled-background-color:\n * checkbox-control-disabled-border-color:\n * checkbox-control-disabled-checkmark-color:\n * checkbox-control-disabled-text-color:\n * checkbox-control-disabled-checked-background-color:\n */\n@Component({\n  selector: 'nb-checkbox',\n  template: `\n    <label class=\"label\">\n      <input type=\"checkbox\" class=\"native-input visually-hidden\"\n             [disabled]=\"disabled\"\n             [checked]=\"checked\"\n             (change)=\"updateValueAndIndeterminate($event)\"\n             (blur)=\"setTouched()\"\n             (click)=\"$event.stopPropagation()\"\n             [indeterminate]=\"indeterminate\">\n      <span [class.indeterminate]=\"indeterminate\" [class.checked]=\"checked\" class=\"custom-checkbox\">\n        <nb-icon *ngIf=\"indeterminate\" icon=\"minus-bold-outline\" pack=\"nebular-essentials\"></nb-icon>\n        <nb-icon *ngIf=\"checked && !indeterminate\" icon=\"checkmark-bold-outline\" pack=\"nebular-essentials\"></nb-icon>\n      </span>\n      <span class=\"text\">\n        <ng-content></ng-content>\n      </span>\n    </label>\n  `,\n  styleUrls: [ `./checkbox.component.css` ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NbCheckboxComponent),\n    multi: true,\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCheckboxComponent implements AfterViewInit, ControlValueAccessor {\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  /**\n   * Checkbox value\n   * @deprecated\n   * @breaking-change Remove @5.0.0\n   */\n  @Input()\n  get value(): boolean {\n    return this.checked;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change Remove @5.0.0\n   */\n  set value(value: boolean) {\n    console.warn('NbCheckbox: `value` is deprecated and will be removed in 5.0.0. Use `checked` instead.');\n    this.checked = value;\n  }\n\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = convertToBoolProperty(value);\n  }\n  private _checked: boolean = false;\n  static ngAcceptInputType_checked: NbBooleanInput;\n\n  /**\n   * Controls input disabled state\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = convertToBoolProperty(value);\n  }\n  private _disabled: boolean = false;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Checkbox status.\n   * Possible values are: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`.\n   */\n  @Input()\n  get status(): NbComponentStatus {\n    return this._status;\n  }\n  set status(value: NbComponentStatus) {\n    if ((value as string) === '') {\n      emptyStatusWarning('NbCheckbox');\n      this._status = 'basic';\n    } else {\n      this._status = value;\n    }\n  }\n  protected _status: NbComponentStatus = 'basic';\n\n  /**\n   * Controls checkbox indeterminate state\n   */\n  @Input()\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n  set indeterminate(value: boolean) {\n    this._indeterminate = convertToBoolProperty(value);\n  }\n  private _indeterminate: boolean = false;\n  static ngAcceptInputType_indeterminate: NbBooleanInput;\n\n  /**\n   * Output when checked state is changed by a user\n   * @deprecated\n   * @breaking-change Remove @5.0.0\n   * @type EventEmitter<boolean>\n   */\n  @Output()\n  get valueChange(): EventEmitter<boolean> {\n    console.warn('NbCheckbox: `valueChange` is deprecated and will be removed in 5.0.0. Use `checkedChange` instead.');\n    return this.checkedChange;\n  }\n  set valueChange(valueChange: EventEmitter<boolean>) {\n    this.checkedChange = valueChange;\n  }\n\n  /**\n   * Output when checked state is changed by a user\n   * @type EventEmitter<boolean>\n   */\n  @Output() checkedChange = new EventEmitter<boolean>();\n\n  @HostBinding('class.status-primary')\n  get primary() {\n    return this.status === 'primary';\n  }\n\n  @HostBinding('class.status-success')\n  get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.status-warning')\n  get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.status-danger')\n  get danger() {\n    return this.status === 'danger';\n  }\n\n  @HostBinding('class.status-info')\n  get info() {\n    return this.status === 'info';\n  }\n\n  @HostBinding('class.status-basic')\n  get basic() {\n    return this.status === 'basic';\n  }\n\n  @HostBinding('class.status-control')\n  get control() {\n    return this.status === 'control';\n  }\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private hostElement: ElementRef<HTMLElement>,\n    private zone: NgZone,\n  ) {}\n\n  ngAfterViewInit() {\n    // TODO: #2254\n    this.zone.runOutsideAngular(() => setTimeout(() => {\n      this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n    }));\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  writeValue(val: any) {\n    this._checked = val;\n    this.changeDetector.markForCheck();\n  }\n\n  setDisabledState(val: boolean) {\n    this.disabled = convertToBoolProperty(val);\n    this.changeDetector.markForCheck();\n  }\n\n  setTouched() {\n    this.onTouched();\n  }\n\n  updateValueAndIndeterminate(event: Event): void {\n    const input = (event.target as HTMLInputElement);\n    this.checked = input.checked;\n    this.checkedChange.emit(this.checked);\n    this.onChange(this.checked);\n    this.indeterminate = input.indeterminate;\n  }\n}\n"]}