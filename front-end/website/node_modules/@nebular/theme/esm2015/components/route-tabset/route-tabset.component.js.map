{"version":3,"file":"route-tabset.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/route-tabset/route-tabset.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AACpF,OAAO,EAAE,qBAAqB,EAAkB,MAAM,YAAY,CAAC;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqEG;AAoCH,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAAnC;QAEmC,mBAAc,GAAY,KAAK,CAAC;QAQjE;;;WAGG;QACM,sBAAiB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAY7C;;;WAGG;QACO,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;IAKhD,CAAC;IAnBC;;;OAGG;IAEH,IAAI,SAAS,CAAC,GAAY;QACxB,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IASD,SAAS,CAAC,GAAQ;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;CACF,CAAA;AAjCkC;IAAhC,WAAW,CAAC,kBAAkB,CAAC;;8DAAiC;AAMxD;IAAR,KAAK,EAAE;;oDAAa;AAMZ;IAAR,KAAK,EAAE;;iEAAqC;AAO7C;IADC,KAAK,EAAE;;;uDAGP;AAOS;IAAT,MAAM,EAAE;;yDAAqC;AA9BnC,sBAAsB;IAnClC,SAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAE3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BT;;KACF,CAAC;GACW,sBAAsB,CAmClC;SAnCY,sBAAsB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\n\n/**\n * Route tabset components.\n * Renders tabs inside of a router-outlet.\n *\n * ```ts\n *  tabs = [\n *  {\n *    title: 'Route tab #1',\n *    route: '/pages/description',\n *    icon: 'home',\n *    responsive: true, // hide title before `route-tabs-icon-only-max-width` value\n *  },\n *  {\n *    title: 'Route tab #2',\n *    route: '/pages/images',\n *    }\n *  ];\n *\n *  <nb-route-tabset [tabs]=\"tabs\"></nb-route-tabset>\n * ```\n * ### Installation\n *\n * Import `NbRouteTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbRouteTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * @stacked-example(Route Tabset, tabset/route-tabset-showcase.component)\n *\n * @styles\n *\n * route-tabset-background-color:\n * route-tabset-border-radius:\n * route-tabset-shadow:\n * route-tabset-tab-background-color:\n * route-tabset-tab-padding:\n * route-tabset-tab-text-color:\n * route-tabset-tab-text-font-family:\n * route-tabset-tab-text-font-size:\n * route-tabset-tab-text-font-weight:\n * route-tabset-tab-text-line-height:\n * route-tabset-tab-text-transform:\n * route-tabset-tab-underline-width:\n * route-tabset-tab-underline-color:\n * route-tabset-tab-active-background-color:\n * route-tabset-tab-active-text-color:\n * route-tabset-tab-active-underline-color:\n * route-tabset-tab-focus-background-color:\n * route-tabset-tab-focus-text-color:\n * route-tabset-tab-focus-underline-color:\n * route-tabset-tab-hover-background-color:\n * route-tabset-tab-hover-text-color:\n * route-tabset-tab-hover-underline-color:\n * route-tabset-tab-disabled-background-color:\n * route-tabset-tab-disabled-text-color:\n * route-tabset-tab-disabled-underline-color:\n * route-tabset-divider-color:\n * route-tabset-divider-style:\n * route-tabset-divider-width:\n * route-tabset-scrollbar-color:\n * route-tabset-scrollbar-background-color:\n * route-tabset-scrollbar-width:\n * route-tabset-tab-text-hide-breakpoint:\n */\n@Component({\n  selector: 'nb-route-tabset',\n  styleUrls: ['./route-tabset.component.css'],\n  template: `\n    <ul class=\"route-tabset\">\n      <ng-container *ngFor=\"let tab of tabs\">\n        <li *ngIf=\"tab.disabled; else enabled\"\n            [class.responsive]=\"tab.responsive\"\n            class=\"route-tab disabled\"\n            tabindex=\"-1\">\n          <a tabindex=\"-1\" class=\"tab-link\">\n            <nb-icon *ngIf=\"tab.icon\" [config]=\"tab.icon\"></nb-icon>\n            <span *ngIf=\"tab.title\" class=\"tab-text\">{{ tab.title }}</span>\n          </a>\n        </li>\n\n        <ng-template #enabled>\n          <li (click)=\"$event.preventDefault(); selectTab(tab)\"\n              [routerLink]=\"tab.route\"\n              routerLinkActive=\"active\"\n              [routerLinkActiveOptions]=\"activeLinkOptions\"\n              [class.responsive]=\"tab.responsive\"\n              tabindex=\"0\"\n              class=\"route-tab\">\n            <a tabindex=\"-1\" class=\"tab-link\">\n              <nb-icon *ngIf=\"tab.icon\" [icon]=\"tab.icon\"></nb-icon>\n              <span *ngIf=\"tab.title\" class=\"tab-text\">{{ tab.title }}</span>\n            </a>\n          </li>\n        </ng-template>\n      </ng-container>\n    </ul>\n    <router-outlet></router-outlet>\n  `,\n})\nexport class NbRouteTabsetComponent {\n\n  @HostBinding('class.full-width') fullWidthValue: boolean = false;\n\n  /**\n   * Tabs configuration\n   * @param Object{route: string, title: string, tag?: string, responsive?: boolean, disabled?: boolean}\n   */\n  @Input() tabs: any[];\n\n  /**\n   * Options passed to `routerLinkActiveOptions` directive which set on tab links.\n   * `{ exact: true }` by default.\n   */\n  @Input() activeLinkOptions = { exact: true };\n\n  /**\n   * Take full width of a parent\n   * @param {boolean} val\n   */\n  @Input()\n  set fullWidth(val: boolean) {\n    this.fullWidthValue = convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_fullWidth: NbBooleanInput;\n\n  /**\n   * Emits when tab is selected\n   * @type {EventEmitter<any>}\n   */\n  @Output() changeTab = new EventEmitter<any>();\n\n  selectTab(tab: any) {\n    this.changeTab.emit(tab);\n  }\n}\n"]}