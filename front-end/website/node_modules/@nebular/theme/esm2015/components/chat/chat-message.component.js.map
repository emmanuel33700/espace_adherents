{"version":3,"file":"chat-message.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/chat/chat-message.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { NbChatMessageFile } from './chat-message-file.component';\n\n/**\n * Chat message component.\n *\n * Multiple message types are available through a `type` property, such as\n * - text - simple text message\n * - file - could be a file preview or a file icon\n * if multiple files are provided grouped files are shown\n * - quote - quotes a message with specific quote styles\n * - map - shows a google map picture by provided [latitude] and [longitude] properties\n *\n * @stacked-example(Available Types, chat/chat-message-types-showcase.component)\n *\n * Message with attached files:\n * ```html\n * <nb-chat-message\n *   type=\"file\"\n *   [files]=\"[ { url: '...' } ]\"\n *   message=\"Hello world!\">\n * </nb-chat-message>\n * ```\n *\n * Map message:\n * ```html\n * <nb-chat-message\n *   type=\"map\"\n *   [latitude]=\"53.914\"\n *   [longitude]=\"27.59\"\n *   message=\"Here I am\">\n * </nb-chat-message>\n * ```\n *\n * @styles\n *\n * chat-message-background:\n * chat-message-text-color:\n * chat-message-reply-background-color:\n * chat-message-reply-text-color:\n * chat-message-avatar-background-color:\n * chat-message-sender-text-color:\n * chat-message-quote-background-color:\n * chat-message-quote-text-color:\n * chat-message-file-text-color:\n * chat-message-file-background-color:\n */\n@Component({\n  selector: 'nb-chat-message',\n  template: `\n    <div class=\"avatar\" [style.background-image]=\"avatarStyle\" *ngIf=\"!reply\">\n      <ng-container *ngIf=\"!avatarStyle\">\n        {{ getInitials() }}\n      </ng-container>\n    </div>\n    <div class=\"message\">\n      <ng-container [ngSwitch]=\"type\">\n\n        <nb-chat-message-file *ngSwitchCase=\"'file'\"\n                              [sender]=\"sender\" [date]=\"date\" [dateFormat]=\"dateFormat\"\n                              [message]=\"message\" [files]=\"files\">\n        </nb-chat-message-file>\n\n        <nb-chat-message-quote *ngSwitchCase=\"'quote'\"\n                              [sender]=\"sender\" [date]=\"date\" [dateFormat]=\"dateFormat\"\n                              [message]=\"message\" [quote]=\"quote\">\n        </nb-chat-message-quote>\n\n        <nb-chat-message-map *ngSwitchCase=\"'map'\"\n                              [sender]=\"sender\" [date]=\"date\"\n                              [message]=\"message\" [latitude]=\"latitude\" [longitude]=\"longitude\">\n        </nb-chat-message-map>\n\n        <nb-chat-message-text *ngSwitchDefault\n                              [sender]=\"sender\" [date]=\"date\" [dateFormat]=\"dateFormat\"\n                              [message]=\"message\">\n        </nb-chat-message-text>\n      </ng-container>\n    </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('in', style({ transform: 'translateX(0)' })),\n      transition('void => *', [\n        style({ transform: 'translateX(-100%)' }),\n        animate(80),\n      ]),\n      transition('* => void', [\n        animate(80, style({ transform: 'translateX(100%)' })),\n      ]),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbChatMessageComponent {\n\n\n  @HostBinding('@flyInOut')\n  get flyInOut() {\n    return true;\n  }\n\n  @HostBinding('class.not-reply')\n  get notReply() {\n    return !this.reply;\n  }\n\n  avatarStyle: SafeStyle;\n\n  /**\n   * Determines if a message is a reply\n   */\n  @Input()\n  @HostBinding('class.reply')\n  get reply(): boolean {\n    return this._reply;\n  }\n  set reply(value: boolean) {\n    this._reply = convertToBoolProperty(value);\n  }\n  protected _reply: boolean = false;\n  static ngAcceptInputType_reply: NbBooleanInput;\n\n  /**\n   * Message sender\n   * @type {string}\n   */\n  @Input() message: string;\n\n  /**\n   * Message sender\n   * @type {string}\n   */\n  @Input() sender: string;\n\n  /**\n   * Message send date\n   * @type {Date}\n   */\n  @Input() date: Date;\n\n  /**\n   * Message send date format, default 'shortTime'\n   * @type {string}\n   */\n  @Input() dateFormat: string;\n\n  /**\n   * Array of files `{ url: 'file url', icon: 'file icon class' }`\n   */\n  @Input() files: NbChatMessageFile[];\n\n  /**\n   * Quoted message text\n   * @type {string}\n   */\n  @Input() quote: string;\n\n  /**\n   * Map latitude\n   * @type {number}\n   */\n  @Input() latitude: number;\n\n  /**\n   * Map longitude\n   * @type {number}\n   */\n  @Input() longitude: number;\n\n  /**\n   * Message send avatar\n   * @type {string}\n   */\n  @Input()\n  set avatar(value: string) {\n    this.avatarStyle = value ? this.domSanitizer.bypassSecurityTrustStyle(`url(${value})`) : null;\n  }\n\n  /**\n   * Message type, available options `text|file|map|quote`\n   * @type {string}\n   */\n  @Input() type: string;\n\n  constructor(protected domSanitizer: DomSanitizer) { }\n\n  getInitials(): string {\n    if (this.sender) {\n      const names = this.sender.split(' ');\n\n      return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n    }\n\n    return '';\n  }\n}\n"]}