{"version":3,"file":"datepicker-adapter.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/datepicker/datepicker-adapter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { NbCalendarRange } from '../calendar/calendar-range.component';\nimport { NbDatepickerComponent, NbRangepickerComponent } from './datepicker.component';\nimport { NbDatepickerAdapter } from './datepicker.directive';\nimport { NbDateService } from '../calendar-kit/services/date.service';\n\n\n@Injectable()\nexport class NbDateAdapterService<D> extends NbDatepickerAdapter<D> {\n  picker: Type<NbDatepickerComponent<D>> = NbDatepickerComponent;\n\n  constructor(protected dateService: NbDateService<D>) {\n    super();\n  }\n\n  parse(date: string, format): D {\n    return this.dateService.parse(date, format);\n  }\n\n  format(date: D, format: string): string {\n    return this.dateService.format(date, format);\n  }\n\n  isValid(date: string, format: string): boolean {\n    return this.dateService.isValidDateString(date, format);\n  }\n}\n\n@Injectable()\nexport class NbRangeAdapterService<D> extends NbDatepickerAdapter<NbCalendarRange<D>> {\n  picker: Type<NbRangepickerComponent<D>> = NbRangepickerComponent;\n\n  constructor(protected dateService: NbDateService<D>) {\n    super();\n  }\n\n  parse(range: string, format): NbCalendarRange<D> {\n    const [start, end] = range.split('-').map(subDate => subDate.trim());\n    return {\n      start: this.dateService.parse(start, format),\n      end: this.dateService.parse(end, format),\n    };\n  }\n\n  format(range: NbCalendarRange<D>, format: string): string {\n    if (!range) {\n      return '';\n    }\n\n    const start = this.dateService.format(range.start, format);\n    const isStartValid = this.dateService.isValidDateString(start, format);\n\n    if (!isStartValid) {\n      return '';\n    }\n\n    const end = this.dateService.format(range.end, format);\n    const isEndValid = this.dateService.isValidDateString(end, format);\n\n    if (isEndValid) {\n      return `${start} - ${end}`;\n    } else {\n      return start;\n    }\n  }\n\n  isValid(range: string, format: string): boolean {\n    const [start, end] = range.split('-').map(subDate => subDate.trim());\n    return this.dateService.isValidDateString(start, format) && this.dateService.isValidDateString(end, format);\n  }\n}\n"]}