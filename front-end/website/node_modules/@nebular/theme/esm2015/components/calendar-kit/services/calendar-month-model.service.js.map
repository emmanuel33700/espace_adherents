{"version":3,"file":"calendar-month-model.service.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/calendar-kit/services/calendar-month-model.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NbDateService } from './date.service';\nimport { batch, range } from '../helpers';\n\n\n@Injectable()\nexport class NbCalendarMonthModelService<D> {\n\n  constructor(protected dateService: NbDateService<D>) {\n  }\n\n  createDaysGrid(activeMonth: D, boundingMonth: boolean = true): D[][] {\n    const weeks = this.createDates(activeMonth);\n    return this.withBoundingMonths(weeks, activeMonth, boundingMonth);\n  }\n\n  private createDates(activeMonth: D): D[][] {\n    const days = this.createDateRangeForMonth(activeMonth);\n    const startOfWeekDayDiff = this.getStartOfWeekDayDiff(activeMonth);\n    return batch(days, this.dateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withBoundingMonths(weeks: D[][], activeMonth: D, boundingMonth: boolean): D[][] {\n    let withBoundingMonths = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: D[][], activeMonth: D, boundingMonth: boolean): D[][] {\n    const firstWeek = weeks.shift();\n    const requiredItems: number = this.dateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, boundingMonth, requiredItems));\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: D[][], activeMonth: D, boundingMonth: boolean): D[][] {\n    const lastWeek = weeks.pop();\n    const requiredItems: number = this.dateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, boundingMonth, requiredItems));\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, boundingMonth: boolean, requiredItems: number): D[] {\n    const month = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth = this.dateService.getNumberOfDaysInMonth(month);\n    return this.createDateRangeForMonth(month)\n      .slice(daysInMonth - requiredItems)\n      .map(date => boundingMonth ? date : null);\n  }\n\n  private createNextBoundingDays(activeMonth: D, boundingMonth: boolean, requiredItems: number): D[] {\n    const month = this.dateService.addMonth(activeMonth, 1);\n    return this.createDateRangeForMonth(month)\n      .slice(0, requiredItems)\n      .map(date => boundingMonth ? date : null);\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth = this.dateService.getMonthStart(date);\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (7 - this.dateService.getFirstDayOfWeek() + this.dateService.getDayOfWeek(date)) % 7;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: D[][]): boolean {\n    return weeks[0].length < this.dateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: D[][]): boolean {\n    return weeks[weeks.length - 1].length < this.dateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(date: D): D[] {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(date);\n    return range(daysInMonth, i => {\n      const year = this.dateService.getYear(date);\n      const month = this.dateService.getMonth(date);\n      return this.dateService.createDate(year, month, i + 1)\n    });\n  }\n}\n"]}