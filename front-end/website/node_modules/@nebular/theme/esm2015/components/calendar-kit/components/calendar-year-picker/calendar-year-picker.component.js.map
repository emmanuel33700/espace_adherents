{"version":3,"file":"calendar-year-picker.component.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,KAAK,EAEL,MAAM,EACN,IAAI,GACL,MAAM,eAAe,CAAC;AACvB,OAAO,EAAkB,cAAc,EAAwB,MAAM,aAAa,CAAC;AACnF,OAAO,EAAE,2BAA2B,EAAE,MAAM,gCAAgC,CAAC;AAC7E,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,0BAA0B,EAAE,MAAM,4CAA4C,CAAC;AAmBxF,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAgCxC,YACY,WAA6B,EAC7B,gBAA+C;QAD/C,gBAAW,GAAX,WAAW,CAAkB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAA+B;QAlB3D,kBAAa,GAA+B,2BAA2B,CAAC;QAE/D,SAAI,GAAmB,cAAc,CAAC,MAAM,CAAC;QAK5C,eAAU,GAAG,IAAI,YAAY,EAAK,CAAC;IAY1C,CAAC;IAxBJ,IAAI,cAAc,CAAC,aAAyC;QAC1D,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACpC;IACH,CAAC;IAWD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,CAAC;IAC5C,CAAC;IASD,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AA1CU;IAAR,KAAK,EAAE;;2DAAS;AAER;IAAR,KAAK,EAAE;;0DAAQ;AAEP;IAAR,KAAK,EAAE;;0DAAQ;AAEP;IAAR,KAAK,EAAE;;6DAAwB;AAGhC;IADC,KAAK,CAAC,eAAe,CAAC;8BACW,IAAI;qCAAJ,IAAI;mEAIrC;AAGQ;IAAR,KAAK,EAAE;;2DAA8C;AAG7C;IAAR,KAAK,EAAE;;2DAAS;AAEP;IAAT,MAAM,EAAE;;iEAAoC;AAG7C;IADC,WAAW,CAAC,kBAAkB,CAAC;;;0DAG/B;AA5BU,6BAA6B;IAjBzC,SAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,QAAQ,EAAE;;;;;;;;;;;;GAYT;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;qCAkCyB,aAAa;QACR,0BAA0B;GAlC7C,6BAA6B,CA4CzC;SA5CY,6BAA6B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  Type,\n} from '@angular/core';\nimport { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';\nimport { NbCalendarYearCellComponent } from './calendar-year-cell.component';\nimport { NbDateService } from '../../services/date.service';\nimport { NbCalendarYearModelService } from '../../services/calendar-year-model.service';\n\n@Component({\n  selector: 'nb-calendar-year-picker',\n  template: `\n    <nb-calendar-picker\n      [data]=\"years\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [selectedValue]=\"date\"\n      [visibleDate]=\"year\"\n      [cellComponent]=\"cellComponent\"\n      [size]=\"size\"\n      (select)=\"onSelect($event)\">\n    </nb-calendar-picker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCalendarYearPickerComponent<D> implements OnChanges {\n\n  @Input() date: D;\n\n  @Input() min: D;\n\n  @Input() max: D;\n\n  @Input() filter: (D) => boolean;\n\n  @Input('cellComponent')\n  set _cellComponent(cellComponent: Type<NbCalendarCell<D, D>>) {\n    if (cellComponent) {\n      this.cellComponent = cellComponent;\n    }\n  }\n  cellComponent: Type<NbCalendarCell<D, D>> = NbCalendarYearCellComponent;\n\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n  static ngAcceptInputType_size: NbCalendarSizeValues;\n\n  @Input() year: D;\n\n  @Output() yearChange = new EventEmitter<D>();\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.size === NbCalendarSize.LARGE;\n  }\n\n  years: D[][];\n\n  constructor(\n    protected dateService: NbDateService<D>,\n    protected yearModelService: NbCalendarYearModelService<D>,\n  ) {}\n\n  ngOnChanges() {\n    this.years = this.yearModelService.getViewYears(this.year);\n  }\n\n  onSelect(year) {\n    this.yearChange.emit(year);\n  }\n}\n"]}