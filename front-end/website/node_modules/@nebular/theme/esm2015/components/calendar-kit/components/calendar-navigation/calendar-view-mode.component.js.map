{"version":3,"file":"calendar-view-mode.component.js","sourceRoot":"","sources":["../../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-navigation/calendar-view-mode.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAChG,OAAO,EAAE,kBAAkB,EAA4B,MAAM,aAAa,CAAC;AAC3E,OAAO,EAAE,0BAA0B,EAAE,MAAM,4CAA4C,CAAC;AACxF,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAa5D,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IAMtC,YACY,WAA6B,EAC7B,gBAA+C;QAD/C,gBAAW,GAAX,WAAW,CAAkB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAA+B;QANlD,aAAQ,GAAuB,kBAAkB,CAAC,IAAI,CAAC;QAEtD,eAAU,GAAG,IAAI,YAAY,CAAO,IAAI,CAAC,CAAC;IAKjD,CAAC;IAEJ,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,EAAE,CAAC;SACX;QAED,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC9E,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,OAAO,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC;aAC3B;YACD,KAAK,kBAAkB,CAAC,KAAK;gBAC3B,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClD,KAAK,kBAAkB,CAAC,IAAI;gBAC1B,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;SAC3D;IACH,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,KAAK,kBAAkB,CAAC,IAAI,EAAE;YAC7C,OAAO,sBAAsB,CAAC;SAC/B;QAED,OAAO,oBAAoB,CAAC;IAC9B,CAAC;IAES,YAAY;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1D,CAAC;IAES,WAAW;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE7C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;IACvD,CAAC;CACF,CAAA;AAhDU;IAAR,KAAK,EAAE;;yDAAS;AACR;IAAR,KAAK,EAAE;;6DAAwD;AAEtD;IAAT,MAAM,EAAE;;+DAA2C;AAJzC,2BAA2B;IAVvC,SAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE;;;;;GAKT;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;qCAQyB,aAAa;QACR,0BAA0B;GAR7C,2BAA2B,CAiDvC;SAjDY,2BAA2B","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { TranslationWidth } from '@angular/common';\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NbCalendarViewMode, NbCalendarViewModeValues } from '../../model';\nimport { NbCalendarYearModelService } from '../../services/calendar-year-model.service';\nimport { NbDateService } from '../../services/date.service';\n\n\n@Component({\n  selector: 'nb-calendar-view-mode',\n  template: `\n    <button nbButton (click)=\"changeMode.emit()\" ghost status=\"basic\">\n      {{ getText() }}\n      <nb-icon [icon]=\"getIcon()\" pack=\"nebular-essentials\"></nb-icon>\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbCalendarViewModeComponent<D> {\n  @Input() date: D;\n  @Input() viewMode: NbCalendarViewMode = NbCalendarViewMode.DATE;\n  static ngAcceptInputType_viewMode: NbCalendarViewModeValues;\n  @Output() changeMode = new EventEmitter<void>(true);\n\n  constructor(\n    protected dateService: NbDateService<D>,\n    protected yearModelService: NbCalendarYearModelService<D>,\n  ) {}\n\n  getText(): string {\n    if (!this.date) {\n      return '';\n    }\n\n    switch (this.viewMode) {\n      case NbCalendarViewMode.DATE: {\n        const month = this.dateService.getMonthName(this.date, TranslationWidth.Wide);\n        const year = this.dateService.getYear(this.date);\n        return `${month} ${year}`;\n      }\n      case NbCalendarViewMode.MONTH:\n        return `${this.dateService.getYear(this.date)}`;\n      case NbCalendarViewMode.YEAR:\n        return `${this.getFirstYear()} - ${this.getLastYear()}`;\n    }\n  }\n\n  getIcon(): string {\n    if (this.viewMode === NbCalendarViewMode.DATE) {\n      return 'chevron-down-outline';\n    }\n\n    return 'chevron-up-outline';\n  }\n\n  protected getFirstYear(): string {\n    const years = this.yearModelService.getViewYears(this.date);\n    return this.dateService.getYear(years[0][0]).toString();\n  }\n\n  protected getLastYear(): string {\n    const years = this.yearModelService.getViewYears(this.date);\n    const lastRow = years[years.length - 1];\n    const lastYear = lastRow[lastRow.length - 1];\n\n    return this.dateService.getYear(lastYear).toString();\n  }\n}\n"]}