{"version":3,"file":"js-themes-registry.service.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/services/js-themes-registry.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable } from '@angular/core';\n\n\nimport { NbJSThemeOptions } from './js-themes/theme.options';\nimport { DEFAULT_THEME } from './js-themes/default.theme';\nimport { COSMIC_THEME } from './js-themes/cosmic.theme';\nimport { CORPORATE_THEME } from './js-themes/corporate.theme';\nimport { DARK_THEME } from './js-themes/dark.theme';\nimport { NB_BUILT_IN_JS_THEMES, NB_JS_THEMES } from '../theme.options';\n\nexport const BUILT_IN_THEMES: NbJSThemeOptions[] = [\n  DEFAULT_THEME,\n  COSMIC_THEME,\n  CORPORATE_THEME,\n  DARK_THEME,\n];\n\n/**\n * Js Themes registry - provides access to the JS themes' variables.\n * Usually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme).\n */\n@Injectable()\nexport class NbJSThemesRegistry {\n\n  private themes: any = {};\n\n  constructor(@Inject(NB_BUILT_IN_JS_THEMES) builtInThemes: NbJSThemeOptions[],\n              @Inject(NB_JS_THEMES) newThemes: NbJSThemeOptions[] = []) {\n\n    const themes = this.combineByNames(newThemes, builtInThemes);\n\n    themes.forEach((theme: any) => {\n      this.register(theme, theme.name, theme.base);\n    });\n  }\n\n  /**\n   * Registers a new JS theme\n   * @param config any\n   * @param themeName string\n   * @param baseTheme string\n   */\n  register(config: any, themeName: string, baseTheme: string) {\n    const base = this.has(baseTheme) ? this.get(baseTheme) : {};\n    this.themes[themeName] = this.mergeDeep({}, base, config);\n  }\n\n  /**\n   * Checks whether the theme is registered\n   * @param themeName\n   * @returns boolean\n   */\n  has(themeName: string): boolean {\n    return !!this.themes[themeName];\n  }\n\n  /**\n   * Return a theme\n   * @param themeName\n   * @returns NbJSThemeOptions\n   */\n  get(themeName: string): NbJSThemeOptions {\n    if (!this.themes[themeName]) {\n      throw Error(`NbThemeConfig: no theme '${themeName}' found registered.`);\n    }\n    return JSON.parse(JSON.stringify(this.themes[themeName]));\n  }\n\n  private combineByNames(newThemes: NbJSThemeOptions[], oldThemes: NbJSThemeOptions[]): NbJSThemeOptions[] {\n    if (newThemes) {\n      const mergedThemes: NbJSThemeOptions[] = [];\n      newThemes.forEach((theme: NbJSThemeOptions) => {\n        const sameOld: NbJSThemeOptions = oldThemes.find((tm: NbJSThemeOptions) => tm.name === theme.name)\n          || <NbJSThemeOptions>{};\n\n        const mergedTheme = this.mergeDeep({}, sameOld, theme);\n        mergedThemes.push(mergedTheme);\n      });\n\n      oldThemes.forEach((theme: NbJSThemeOptions) => {\n        if (!mergedThemes.find((tm: NbJSThemeOptions) => tm.name === theme.name)) {\n          mergedThemes.push(theme);\n        }\n      });\n      return mergedThemes;\n    }\n    return oldThemes;\n  }\n\n\n  private isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n  }\n\n  // TODO: move to helpers\n  private mergeDeep(target, ...sources) {\n    if (!sources.length) {\n      return target;\n    }\n    const source = sources.shift();\n\n    if (this.isObject(target) && this.isObject(source)) {\n      for (const key in source) {\n        if (this.isObject(source[key])) {\n          if (!target[key]) {\n            Object.assign(target, { [key]: {} });\n          }\n          this.mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(target, { [key]: source[key] });\n        }\n      }\n    }\n    return this.mergeDeep(target, ...sources);\n  }\n}\n"]}