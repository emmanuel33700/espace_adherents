{"version":3,"file":"actions.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/actions/actions.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\n\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentStatus } from '../component-status';\nimport { NbBadgePosition } from '../badge/badge.component';\nimport { NbIconConfig } from '../icon/icon.component';\n\n/**\n * Action item, display a link with an icon, or any other content provided instead.\n */\n@Component({\n  selector: 'nb-action',\n  styleUrls: ['./action.component.css'],\n  template: `\n    <ng-container *ngIf=\"icon; else projectedContent\">\n      <a class=\"icon-container\"\n         [routerLink]=\"link\"\n         [title]=\"title\"\n         *ngIf=\"link\">\n        <nb-icon [config]=\"icon\"></nb-icon>\n      </a>\n      <a class=\"icon-container\"\n         [href]=\"href\"\n         [title]=\"title\"\n         *ngIf=\"href && !link\">\n        <nb-icon [config]=\"icon\"></nb-icon>\n      </a>\n      <a class=\"icon-container\"\n         href=\"#\"\n         [title]=\"title\"\n         *ngIf=\"!href && !link\"\n         (click)=\"$event.preventDefault()\">\n        <nb-icon [config]=\"icon\"></nb-icon>\n      </a>\n    </ng-container>\n\n    <ng-template #projectedContent>\n      <ng-content></ng-content>\n    </ng-template>\n\n    <nb-badge *ngIf=\"badgeText\"\n              [text]=\"badgeText\"\n              [status]=\"badgeStatus\"\n              [position]=\"badgePosition\">\n    </nb-badge>\n  `,\n})\nexport class NbActionComponent {\n\n  /**\n   * Router link to use\n   * @type string\n   */\n  @Input() link: string;\n\n  /**\n   * Regular HREF link\n   * @type: string\n   */\n  @Input() href: string;\n\n  /**\n   * Optional title for mouseover\n   * @type string\n   */\n  @Input() title: string = '';\n\n  /**\n   * Icon name or config object\n   * @type {string | NbIconConfig}\n   */\n  @Input() icon: string | NbIconConfig;\n\n  /**\n   * Visually disables the item\n   * @type boolean\n   */\n  @Input()\n  @HostBinding('class.disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = convertToBoolProperty(value);\n  }\n  protected _disabled: boolean = false;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   */\n  @Input() badgeStatus: NbComponentStatus = 'basic';\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: NbBadgePosition;\n}\n\n/**\n * Shows a horizontal list of actions, available in multiple sizes.\n * Aligns items vertically.\n *\n * @stacked-example(Showcase, action/action-showcase.component)\n *\n * Basic actions setup:\n * ```html\n * <nb-actions size=\"small\">\n *   <nb-action icon=\"nb-search\"></nb-action>\n *   <nb-action icon=\"nb-power-circled\"></nb-action>\n *   <nb-action icon=\"nb-person\"></nb-action>\n * </nb-actions>\n * ```\n * ### Installation\n *\n * Import `NbActionsModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbActionsModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Multiple sizes example:\n * @stacked-example(Multiple Sizes, action/action-sizes.component)\n *\n * It is also possible to specify a `badge` value:\n *\n * @stacked-example(Action Badge, action/action-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, action/action-width.component)\n *\n * @styles\n *\n * actions-background-color:\n * actions-divider-color:\n * actions-divider-style:\n * actions-divider-width:\n * actions-icon-color:\n * actions-text-color:\n * actions-text-font-family:\n * actions-text-font-weight:\n * actions-text-line-height:\n * actions-disabled-icon-color:\n * actions-disabled-text-color:\n * actions-tiny-height:\n * actions-tiny-icon-height:\n * actions-tiny-padding:\n * actions-tiny-text-font-size:\n * actions-small-height:\n * actions-small-icon-height:\n * actions-small-padding:\n * actions-small-text-font-size:\n * actions-medium-height:\n * actions-medium-icon-height:\n * actions-medium-padding:\n * actions-medium-text-font-size:\n * actions-large-height:\n * actions-large-icon-height:\n * actions-large-padding:\n * actions-large-text-font-size:\n * actions-giant-height:\n * actions-giant-icon-height:\n * actions-giant-padding:\n * actions-giant-text-font-size:\n */\n@Component({\n  selector: 'nb-actions',\n  styleUrls: ['./actions.component.css'],\n  template: `\n    <ng-content select=\"nb-action\"></ng-content>\n  `,\n})\nexport class NbActionsComponent {\n\n  /**\n   * Size of the component: 'tiny', 'small' (default), 'medium', 'large', 'giant'\n   */\n  @Input()\n  get size(): NbComponentSize {\n    return this._size;\n  }\n  set size(value: NbComponentSize) {\n    this._size = value;\n  }\n  protected _size: NbComponentSize = 'small';\n\n  /**\n   * Component will fill full width of the container\n   */\n  @Input()\n  @HostBinding('class.full-width')\n  get fullWidth(): boolean {\n    return this._fullWidth;\n  }\n  set fullWidth(value: boolean) {\n    this._fullWidth = convertToBoolProperty(value);\n  }\n  protected _fullWidth: boolean = false;\n  static ngAcceptInputType_fullWidth: NbBooleanInput;\n\n  @HostBinding('class.size-tiny')\n  get tiny(): boolean {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small(): boolean {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium(): boolean {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large(): boolean {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant(): boolean {\n    return this.size === 'giant';\n  }\n}\n"]}