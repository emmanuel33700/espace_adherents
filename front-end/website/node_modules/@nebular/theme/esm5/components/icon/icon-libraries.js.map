{"version":3,"file":"icon-libraries.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/icon/icon-libraries.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NbFontIconPackParams, NbIconPack, NbIconPackParams, NbIconPackType, NbIcons } from './icon-pack';\nimport { NbFontIcon, NbIcon, NbSvgIcon } from './icon';\n\nexport class NbIconDefinition {\n  name: string;\n  type: string;\n  pack: string;\n  icon: NbIcon;\n}\n\nfunction throwPackNotFoundError(name: string) {\n  throw Error(`Icon Pack '${name}' is not registered`);\n}\n\nfunction throwNoDefaultPackError() {\n  throw Error('Default pack is not registered.');\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  throw Error(`Icon '${name}' is not registered in pack '${pack}'. Check icon name or consider switching icon pack.`);\n}\n\nfunction throwWrongPackTypeError(name: string, type: string, desiredType: string) {\n  throw Error(`Pack '${name}' is not an '${desiredType}' Pack and its type is '${type}'`);\n}\n\n/**\n * This service allows to register multiple icon packs to use them later within `<nb-icon></nb-icon>` component.\n */\n@Injectable({providedIn: 'root'})\nexport class NbIconLibraries {\n\n  protected packs: Map<string, NbIconPack> = new Map();\n  protected defaultPack: NbIconPack;\n\n  /**\n   * Registers new Svg icon pack\n   * @param {string} name\n   * @param {NbIcon} icons\n   * @param {NbIconPackParams} params\n   */\n  registerSvgPack(name: string, icons: NbIcons, params: NbIconPackParams= {}) {\n    this.packs.set(name, {\n      name,\n      icons: new Map(Object.entries(icons)),\n      params,\n      type: NbIconPackType.SVG,\n    });\n  }\n\n  /**\n   * Registers new font pack\n   * @param {string} name\n   * @param {NbIconPackParams} params\n   */\n  registerFontPack(name: string, params: NbFontIconPackParams = {}) {\n    this.packs.set(name, {\n      name,\n      params,\n      icons: new Map(),\n      type: NbIconPackType.FONT,\n    });\n  }\n\n  /**\n   * Returns pack by name\n   * @param {string} name\n   */\n  getPack(name: string): NbIconPack {\n    return this.packs.get(name);\n  }\n\n  /**\n   * Sets pack as a default\n   * @param {string} name\n   */\n  setDefaultPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = this.packs.get(name);\n  }\n\n  /**\n   * Returns Svg icon\n   * @param {string} name\n   * @param {string} pack\n   *\n   * @returns NbIconDefinition\n   */\n  getSvgIcon(name: string, pack?: string): NbIconDefinition {\n    const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n    if (iconsPack.type !== NbIconPackType.SVG) {\n      throwWrongPackTypeError(iconsPack.name, iconsPack.type, 'SVG');\n    }\n\n    const icon = this.getIconFromPack(name, iconsPack);\n\n    return {\n      name,\n      pack: iconsPack.name,\n      type: NbIconPackType.SVG,\n      icon: this.createSvgIcon(name, icon, iconsPack.params),\n    };\n  }\n\n  /**\n   * Returns Font icon\n   * @param {string} name\n   * @param {string} pack\n   *\n   * @returns NbIconDefinition\n   */\n  getFontIcon(name: string, pack?: string): NbIconDefinition {\n    const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n    if (iconsPack.type !== NbIconPackType.FONT) {\n      throwWrongPackTypeError(iconsPack.name, iconsPack.type, 'Font');\n    }\n\n    const icon = this.getIconFromPack(name, iconsPack, false);\n\n    return {\n      name,\n      pack: iconsPack.name,\n      type: NbIconPackType.FONT,\n      icon: this.createFontIcon(name, icon ? icon : '', iconsPack.params),\n    };\n  }\n\n  /**\n   * Returns an icon\n   * @param {string} name\n   * @param {string} pack\n   *\n   * @returns NbIconDefinition\n   */\n  getIcon(name: string, pack?: string): NbIconDefinition {\n    const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n    if (iconsPack.type === NbIconPackType.SVG) {\n      return this.getSvgIcon(name, pack);\n    }\n\n    return this.getFontIcon(name, pack);\n  }\n\n  protected createSvgIcon(name: string, content: NbIcon | string, params: NbIconPackParams): NbSvgIcon {\n    return content instanceof NbSvgIcon ? content : new NbSvgIcon(name, content, params);\n  }\n\n  protected createFontIcon(name: string, content: NbIcon | string, params: NbFontIconPackParams): NbFontIcon {\n    return content instanceof NbFontIcon ? content : new NbFontIcon(name, content, params);\n  }\n\n  protected getPackOrThrow(name: string): NbIconPack {\n\n    const pack: NbIconPack = this.packs.get(name);\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n    return pack;\n  }\n\n  protected getDefaultPackOrThrow(): NbIconPack {\n\n    if (!this.defaultPack) {\n      throwNoDefaultPackError();\n    }\n    return this.defaultPack;\n  }\n\n  protected getIconFromPack(name: string, pack: NbIconPack, shouldThrow = true): NbIcon | string {\n    if (shouldThrow && !pack.icons.has(name)) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons.get(name);\n  }\n}\n"]}