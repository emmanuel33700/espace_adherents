{"version":3,"file":"option.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/option/option.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EACL,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,MAAM,EACN,KAAK,EAEL,QAAQ,EACR,MAAM,EAEN,MAAM,EACN,SAAS,GACV,MAAM,eAAe,CAAC;AACvB,OAAO,EAAc,OAAO,EAAE,MAAM,MAAM,CAAC;AAE3C,sDAAsD;AACtD,IAAI,YAAY,GAAW,CAAC,CAAC;AAE7B,OAAO,EAAE,qBAAqB,EAAkB,MAAM,YAAY,CAAC;AAGnE,OAAO,EAAE,yBAAyB,EAAE,MAAM,mCAAmC,CAAC;AAG9E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4CI;AAcJ;IA0CE,2BAA2D,MAAM,EAC3C,UAAsB,EACtB,EAAqB,EACrB,IAAY,EACZ,QAAmB;QAHnB,eAAU,GAAV,UAAU,CAAY;QACtB,OAAE,GAAF,EAAE,CAAmB;QACrB,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAW;QA5C/B,oBAAe,GAAG,KAAK,CAAC;QAcxB,cAAS,GAAY,KAAK,CAAC;QAGrC;;aAEK;QACK,oBAAe,GAAuC,IAAI,YAAY,EAAE,CAAC;QAEnF;;WAEG;QACO,WAAM,GAAkC,IAAI,OAAO,EAAwB,CAAC;QAKtF,aAAQ,GAAY,KAAK,CAAC;QAEhB,UAAK,GAAY,IAAI,CAAC;QAEhC;;aAEK;QAEL,OAAE,GAAW,eAAa,YAAY,EAAI,CAAC;QA2DjC,YAAO,GAAY,KAAK,CAAC;QApDjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAtCD,sBAAI,uCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC;QAChD,CAAC;aACD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;;;OAHA;IAgBD,sBAAI,oCAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QACpC,CAAC;;;OAAA;IAoBD,uCAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,2CAAe,GAAf;QAAA,iBAKC;QAJC,cAAc;QACd,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAM,OAAA,UAAU,CAAC;YAC3C,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QACzE,CAAC,CAAC,EAFgC,CAEhC,CAAC,CAAC;IACN,CAAC;IAKD,sBAAI,2CAAY;QAHhB;;aAEK;aACL;YACE,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QAC7C,CAAC;;;OAAA;IAED,sBAAI,sCAAO;aAAX;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;QACnD,CAAC;;;OAAA;IAID,sBAAI,uCAAQ;QAFZ,4FAA4F;aAE5F;YACE,sEAAsE;YACtE,0EAA0E;YAC1E,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAE,IAAI,CAAC,MAA4B,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3E,CAAC;;;OAAA;IAGD,sBAAI,4CAAa;aAAjB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAGD,sBAAI,gDAAiB;aAArB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACnC,CAAC;;;OAAA;IAGD,sBAAI,uCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAGD,sBAAI,0CAAW;aAAf;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAAA,CAAC;IAMF,mCAAO,GAAP,UAAQ,KAAK;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,sCAAsC;QACtC,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,mDAAuB,GAAvB,UAAwB,QAAiB;QACvC,IAAI,IAAI,CAAC,eAAe,KAAK,QAAQ,EAAE;YACrC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;IACH,CAAC;IAES,wCAAY,GAAtB,UAAuB,QAAiB;QACtC;;;;;;aAMK;QACL,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB;IACH,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACxC,CAAC;IAED,oCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IAED,6CAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IAzJQ;QAAR,KAAK,EAAE;;oDAAU;IAGlB;QADC,KAAK,EAAE;;;qDAGP;IAUS;QAAT,MAAM,EAAE;kCAAkB,YAAY;8DAA4C;IAkBnF;QADC,WAAW,CAAC,SAAS,CAAC;;iDACoB;IAkC3C;QADC,WAAW,CAAC,gBAAgB,CAAC;;;qDAK7B;IAGD;QADC,WAAW,CAAC,gBAAgB,CAAC;;;0DAG7B;IAGD;QADC,WAAW,CAAC,eAAe,CAAC;;;8DAG5B;IAGD;QADC,WAAW,CAAC,UAAU,CAAC;;;qDAGvB;IAGD;QADC,WAAW,CAAC,cAAc,CAAC;;;wDAG3B;IAMD;QAHC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;QACjC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;QACzC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;oDAMzC;IA7GU,iBAAiB;QAb7B,SAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YAErB,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,QAAQ,EAAE,6NAOT;;SACF,CAAC;QA2Ca,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,yBAAyB,CAAC,CAAA;iDACxB,UAAU;YAClB,iBAAiB;YACf,MAAM;YACF,SAAS;OA9C9B,iBAAiB,CAkK7B;IAAD,wBAAC;CAAA,AAlKD,IAkKC;SAlKY,iBAAiB","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n  NgZone,\n  Renderer2,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n// Component class scoped counter for aria attributes.\nlet lastOptionId: number = 0;\n\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { NbFocusableOption } from '../cdk/a11y/focus-key-manager';\nimport { NbHighlightableOption } from '../cdk/a11y/descendant-key-manager';\nimport { NB_SELECT_INJECTION_TOKEN } from '../select/select-injection-tokens';\nimport { NbSelectComponent } from '../select/select.component';\n\n/**\n * NbOptionComponent\n *\n * @styles\n *\n * option-background-color:\n * option-text-color:\n * option-text-font-family:\n * option-hover-background-color:\n * option-hover-text-color:\n * option-active-background-color:\n * option-active-text-color:\n * option-focus-background-color:\n * option-focus-text-color:\n * option-selected-background-color:\n * option-selected-text-color:\n * option-selected-hover-background-color:\n * option-selected-hover-text-color:\n * option-selected-active-background-color:\n * option-selected-active-text-color:\n * option-selected-focus-background-color:\n * option-selected-focus-text-color:\n * option-disabled-background-color:\n * option-disabled-text-color:\n * option-tiny-text-font-size:\n * option-tiny-text-font-weight:\n * option-tiny-text-line-height:\n * option-tiny-padding:\n * option-small-text-font-size:\n * option-small-text-font-weight:\n * option-small-text-line-height:\n * option-small-padding:\n * option-medium-text-font-size:\n * option-medium-text-font-weight:\n * option-medium-text-line-height:\n * option-medium-padding:\n * option-large-text-font-size:\n * option-large-text-font-weight:\n * option-large-text-line-height:\n * option-large-padding:\n * option-giant-text-font-size:\n * option-giant-text-font-weight:\n * option-giant-text-line-height:\n * option-giant-padding:\n **/\n@Component({\n  selector: 'nb-option',\n  styleUrls: ['./option.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nb-checkbox *ngIf=\"withCheckbox\"\n                 [checked]=\"selected\"\n                 [disabled]=\"disabled\"\n                 aria-hidden=\"true\">\n    </nb-checkbox>\n    <ng-content></ng-content>\n  `,\n})\nexport class NbOptionComponent<T = any> implements OnDestroy, AfterViewInit, NbFocusableOption, NbHighlightableOption {\n\n  protected disabledByGroup = false;\n\n  /**\n   * Option value that will be fired on selection.\n   * */\n  @Input() value: T;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || this.disabledByGroup;\n  }\n  set disabled(value: boolean) {\n    this._disabled = convertToBoolProperty(value);\n  }\n  protected _disabled: boolean = false;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Fires value when option selection change.\n   * */\n  @Output() selectionChange: EventEmitter<NbOptionComponent<T>> = new EventEmitter();\n\n  /**\n   * Fires when option clicked\n   */\n  protected click$: Subject<NbOptionComponent<T>> = new Subject<NbOptionComponent<T>>();\n  get click(): Observable<NbOptionComponent<T>> {\n    return this.click$.asObservable();\n  }\n\n  selected: boolean = false;\n  protected parent: NbSelectComponent;\n  protected alive: boolean = true;\n\n  /**\n   * Component scoped id for aria attributes.\n   * */\n  @HostBinding('attr.id')\n  id: string = `nb-option-${lastOptionId++}`;\n\n  constructor(@Optional() @Inject(NB_SELECT_INJECTION_TOKEN) parent,\n              protected elementRef: ElementRef,\n              protected cd: ChangeDetectorRef,\n              protected zone: NgZone,\n              protected renderer: Renderer2) {\n    this.parent = parent;\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  ngAfterViewInit() {\n    // TODO: #2254\n    this.zone.runOutsideAngular(() => setTimeout(() => {\n      this.renderer.addClass(this.elementRef.nativeElement, 'nb-transition');\n    }));\n  }\n\n  /**\n   * Determines should we render checkbox.\n   * */\n  get withCheckbox(): boolean {\n    return this.multiple && this.value != null;\n  }\n\n  get content() {\n    return this.elementRef.nativeElement.textContent;\n  }\n\n  // TODO: replace with isShowCheckbox property to control this behaviour outside, issues/1965\n  @HostBinding('class.multiple')\n  get multiple() {\n    // We check parent existing because parent can be NbSelectComponent or\n    // NbAutocomplete and `miltiple` property exists only in NbSelectComponent\n    return this.parent ? (this.parent as NbSelectComponent).multiple : false;\n  }\n\n  @HostBinding('class.selected')\n  get selectedClass(): boolean {\n    return this.selected;\n  }\n\n  @HostBinding('attr.disabled')\n  get disabledAttribute(): '' | null {\n    return this.disabled ? '' : null;\n  }\n\n  @HostBinding('tabIndex')\n  get tabindex() {\n    return '-1';\n  }\n\n  @HostBinding('class.active')\n  get activeClass() {\n    return this._active;\n  };\n  protected _active: boolean = false;\n\n  @HostListener('click', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  @HostListener('keydown.enter', ['$event'])\n  onClick(event) {\n    this.click$.next(this);\n\n    // Prevent scroll on space click, etc.\n    event.preventDefault();\n  }\n\n  select() {\n    this.setSelection(true);\n  }\n\n  deselect() {\n    this.setSelection(false);\n  }\n\n  /**\n   * Sets disabled by group state and marks component for check.\n   */\n  setDisabledByGroupState(disabled: boolean): void {\n    if (this.disabledByGroup !== disabled) {\n      this.disabledByGroup = disabled;\n      this.cd.markForCheck();\n    }\n  }\n\n  protected setSelection(selected: boolean): void {\n    /**\n     * In case of changing options in runtime the reference to the selected option will be kept in select component.\n     * This may lead to exceptions with detecting changes in destroyed component.\n     *\n     * Also Angular can call writeValue on destroyed view (select implements ControlValueAccessor).\n     * angular/angular#27803\n     * */\n    if (this.alive && this.selected !== selected) {\n      this.selected = selected;\n      this.selectionChange.emit(this);\n      this.cd.markForCheck();\n    }\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getLabel(): string {\n    return this.content;\n  }\n\n  setActiveStyles(): void {\n    this._active = true;\n    this.cd.markForCheck();\n  }\n\n  setInactiveStyles(): void {\n    this._active = false;\n    this.cd.markForCheck();\n  }\n\n}\n"]}