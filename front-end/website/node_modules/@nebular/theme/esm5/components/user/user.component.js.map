{"version":3,"file":"user.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/user/user.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\nimport { NbComponentSize } from '../component-size';\nimport { NbComponentShape } from '../component-shape';\nimport { NbComponentStatus } from '../component-status';\nimport { NbBadgePosition } from '../badge/badge.component';\n\n/**\n * Represents a component showing a user avatar (picture) with a user name on the right.\n * @stacked-example(Showcase, user/user-showcase.component)\n *\n * ```ts\n *   <nb-user name=\"John Doe\" title=\"Engineer\"></nb-user>\n * ```\n *\n * ### Installation\n *\n * Import `NbUserModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbUserModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Available in multiple sizes:\n * @stacked-example(Multiple Sizes, user/user-sizes.component)\n *\n *\n * You can hide unnecessary captions (name, title or both):\n * @stacked-example(Hide captions in user component, user/user-hide-captions.component)\n *\n *\n * You can set custom avatar background-color, user image (as link or BASE64 string) and disable user initials:\n * @stacked-example(Avatar image settings, user/user-avatar-settings.component)\n *\n * Component shape could be controlled with `shape` input.\n * @stacked-example(Shapes, user/user-shape.component)\n *\n * @styles\n *\n * user-picture-box-background-color:\n * user-picture-box-border-color:\n * user-picture-box-border-width:\n * user-initials-text-color:\n * user-initials-text-font-family:\n * user-initials-text-font-weight:\n * user-name-text-color:\n * user-name-text-font-family:\n * user-name-text-font-weight:\n * user-title-text-color:\n * user-title-text-font-family:\n * user-title-text-font-weight:\n * user-rectangle-border-radius:\n * user-semi-round-border-radius:\n * user-round-border-radius:\n * user-tiny-height:\n * user-tiny-width:\n * user-tiny-initials-text-font-size:\n * user-tiny-initials-text-line-height:\n * user-tiny-name-text-font-size:\n * user-tiny-name-text-line-height:\n * user-tiny-title-text-font-size:\n * user-tiny-title-text-line-height:\n * user-small-height:\n * user-small-width:\n * user-small-initials-text-font-size:\n * user-small-initials-text-line-height:\n * user-small-name-text-font-size:\n * user-small-name-text-line-height:\n * user-small-title-text-font-size:\n * user-small-title-text-line-height:\n * user-medium-height:\n * user-medium-width:\n * user-medium-initials-text-font-size:\n * user-medium-initials-text-line-height:\n * user-medium-name-text-font-size:\n * user-medium-name-text-line-height:\n * user-medium-title-text-font-size:\n * user-medium-title-text-line-height:\n * user-large-height:\n * user-large-width:\n * user-large-initials-text-font-size:\n * user-large-initials-text-line-height:\n * user-large-name-text-font-size:\n * user-large-name-text-line-height:\n * user-large-title-text-font-size:\n * user-large-title-text-line-height:\n * user-giant-height:\n * user-giant-width:\n * user-giant-initials-text-font-size:\n * user-giant-initials-text-line-height:\n * user-giant-name-text-font-size:\n * user-giant-name-text-line-height:\n * user-giant-title-text-font-size:\n * user-giant-title-text-line-height:\n */\n@Component({\n  selector: 'nb-user',\n  styleUrls: ['./user.component.css'],\n  templateUrl: './user.component.html',\n})\nexport class NbUserComponent {\n\n  imageBackgroundStyle: SafeStyle;\n\n  /**\n   * Specifies a name to be shown on the right of a user picture\n   * @type string\n   */\n  @Input() name: string = 'Anonymous';\n\n  /**\n   * Specifies a title to be shown under the **name**\n   * @type string\n   */\n  @Input() title: string;\n\n  /**\n   * Absolute path to a user picture or base64 image.\n   * User name initials will be shown if no picture specified (JD for John Doe).\n   * @type string\n   */\n  @Input()\n  set picture(value: string) {\n    this.imageBackgroundStyle = value ? this.domSanitizer.bypassSecurityTrustStyle(`url(${value})`) : null;\n  }\n\n  /**\n   * Color of the area shown when no picture specified\n   * @type string\n   */\n  @Input() color: string;\n\n  /**\n   * Size of the component.\n   * Possible values: `tiny`, `small`, `medium` (default), `large`, 'giant'.\n   */\n  @Input() size: NbComponentSize = 'medium';\n\n  /**\n   * Shape of the picture box.\n   * Possible values: `rectangle`, `semi-round`, `round`.\n   */\n  @Input() shape: NbComponentShape = 'round';\n\n  /**\n   * Whether to show a user name or not\n   */\n  @Input()\n  get showName(): boolean {\n    return this._showName;\n  }\n  set showName(val: boolean) {\n    this._showName = convertToBoolProperty(val);\n  }\n  private _showName: boolean = true;\n  static ngAcceptInputType_showName: NbBooleanInput;\n\n  /**\n   * Whether to show a user title or not\n   * @type boolean\n   */\n  @Input()\n  get showTitle(): boolean {\n    return this._showTitle;\n  }\n  set showTitle(val: boolean) {\n    this._showTitle = convertToBoolProperty(val);\n  }\n  private _showTitle: boolean = true;\n  static ngAcceptInputType_showTitle: NbBooleanInput;\n\n  /**\n   * Whether to show a user initials (if no picture specified) or not\n   * @type boolean\n   */\n  @Input()\n  get showInitials(): boolean {\n    return this._showInitials;\n  }\n  set showInitials(val: boolean) {\n    this._showInitials = convertToBoolProperty(val);\n  }\n  private _showInitials: boolean = true;\n  static ngAcceptInputType_showInitials: NbBooleanInput;\n\n  /**\n   * Whether to show only a picture or also show the name and title\n   * @type boolean\n   */\n  @Input()\n  get onlyPicture(): boolean {\n    return !this.showName && !this.showTitle;\n  }\n  set onlyPicture(val: boolean) {\n    this.showName = this.showTitle = !convertToBoolProperty(val);\n  }\n  static ngAcceptInputType_onlyPicture: NbBooleanInput;\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   * @param {string} val\n   */\n  @Input() badgeStatus: NbComponentStatus = 'basic';\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: NbBadgePosition;\n\n  @HostBinding('class.size-tiny')\n  get tiny(): boolean {\n    return this.size === 'tiny';\n  }\n\n  @HostBinding('class.size-small')\n  get small(): boolean {\n    return this.size === 'small';\n  }\n\n  @HostBinding('class.size-medium')\n  get medium(): boolean {\n    return this.size === 'medium';\n  }\n\n  @HostBinding('class.size-large')\n  get large(): boolean {\n    return this.size === 'large';\n  }\n\n  @HostBinding('class.size-giant')\n  get giant(): boolean {\n    return this.size === 'giant';\n  }\n\n  @HostBinding('class.shape-rectangle')\n  get rectangle(): boolean {\n    return this.shape === 'rectangle';\n  }\n\n  @HostBinding('class.shape-semi-round')\n  get semiRound(): boolean {\n    return this.shape === 'semi-round';\n  }\n\n  @HostBinding('class.shape-round')\n  get round(): boolean {\n    return this.shape === 'round';\n  }\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  getInitials(): string {\n    if (this.name) {\n      const names = this.name.split(' ');\n\n      return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n    }\n\n    return '';\n  }\n}\n"]}