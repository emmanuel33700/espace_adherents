{"version":3,"file":"radio-group.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/radio/radio-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  PLATFORM_ID,\n  Inject,\n  ElementRef,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport { convertToBoolProperty, emptyStatusWarning, NbBooleanInput } from '../helpers';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbRadioComponent } from './radio.component';\nimport { NbComponentStatus } from '../component-status';\n\n/**\n * The `NbRadioGroupComponent` is the wrapper for `nb-radio` button.\n * It provides form bindings:\n *\n * ```html\n * <nb-radio-group [(ngModel)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Also, you can use `value` and `valueChange` for binding without forms.\n *\n * ```html\n * <nb-radio-group [(value)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Radio items name has to be provided through `name` input property of the radio group.\n *\n * ```html\n * <nb-radio-group name=\"my-radio-group\">\n *   ...\n * </nb-radio-group>\n * ```\n *\n * You can change radio group status by setting `status` input.\n * @stacked-example(Statuses, radio/radio-statuses.component)\n *\n * Also, you can disable the whole group using `disabled` attribute.\n * @stacked-example(Disabled group, radio/radio-disabled-group.component)\n *\n * */\n@Component({\n  selector: 'nb-radio-group',\n  template: `\n    <ng-content select=\"nb-radio\"></ng-content>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbRadioGroupComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NbRadioGroupComponent implements AfterContentInit, OnDestroy, ControlValueAccessor {\n\n  protected destroy$ = new Subject<void>();\n  protected onChange = (value: any) => {};\n  protected onTouched = () => {};\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    this.updateValues();\n  }\n  protected _value: any;\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    this.updateNames();\n  }\n  protected _name: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = convertToBoolProperty(disabled);\n    this.updateDisabled();\n  }\n  protected _disabled: boolean;\n  static ngAcceptInputType_disabled: NbBooleanInput;\n\n  /**\n   * Radio buttons status.\n   * Possible values are `primary` (default), `success`, `warning`, `danger`, `info`.\n   */\n  @Input()\n  get status(): NbComponentStatus {\n    return this._status;\n  }\n  set status(value: NbComponentStatus) {\n    if ((value as string) === '') {\n      emptyStatusWarning('NbRadio');\n      value = 'basic';\n    }\n\n    if (this._status !== value) {\n      this._status = value;\n      this.updateStatus();\n    }\n  }\n  protected _status: NbComponentStatus = 'basic';\n\n  @ContentChildren(NbRadioComponent, { descendants: true }) radios: QueryList<NbRadioComponent>;\n\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    protected hostElement: ElementRef<HTMLElement>,\n    @Inject(PLATFORM_ID) protected platformId,\n    @Inject(NB_DOCUMENT) protected document,\n  ) {}\n\n  ngAfterContentInit() {\n    // In case option 'name' isn't set on nb-radio component,\n    // we need to set it's name right away, so it won't overlap with options\n    // without names from other radio groups. Otherwise they all would have\n    // same name and will be considered as options from one group so only the\n    // last option will stay selected.\n    this.updateNames();\n\n    Promise.resolve().then(() => this.updateAndSubscribeToRadios());\n\n    this.radios.changes\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        // 'changes' emit during change detection run and we can't update\n        // option properties right of since they already was initialized.\n        // Instead we schedule microtask to update radios after change detection\n        // run is finished.\n        Promise.resolve().then(() => this.updateAndSubscribeToRadios());\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n\n    if (typeof value !== 'undefined') {\n      this.updateValues();\n    }\n  }\n\n  protected updateAndSubscribeToRadios() {\n    this.updateNames();\n    this.updateValues();\n    this.updateDisabled();\n    this.updateStatus();\n    this.subscribeOnRadiosValueChange();\n    this.subscribeOnRadiosBlur();\n  }\n\n  protected updateNames() {\n    if (this.radios) {\n      this.radios.forEach((radio: NbRadioComponent) => radio._setName(this.name));\n    }\n  }\n\n  protected updateValues() {\n    if (typeof this.value !== 'undefined') {\n      this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.checked = radio.value === this.value);\n    }\n  }\n\n  protected updateDisabled() {\n    if (typeof this.disabled !== 'undefined') {\n      this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.disabled = this.disabled);\n    }\n  }\n\n  protected subscribeOnRadiosValueChange() {\n    if (!this.radios || !this.radios.length) {\n      return;\n    }\n\n    merge(...this.radios.map((radio: NbRadioComponent) => radio.valueChange))\n      .pipe(\n        takeUntil(\n          merge(\n            this.radios.changes,\n            this.destroy$,\n          ),\n        ),\n      )\n      .subscribe((value: any) => {\n        this.writeValue(value);\n        this.propagateValue(value);\n      });\n  }\n\n  protected propagateValue(value: any) {\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  protected subscribeOnRadiosBlur() {\n    const hasNoRadios = !this.radios || !this.radios.length;\n    if (!isPlatformBrowser(this.platformId) || hasNoRadios) {\n      return;\n    }\n\n    const hostElement = this.hostElement.nativeElement;\n    fromEvent<Event>(hostElement, 'focusin')\n      .pipe(\n        filter(event => hostElement.contains(event.target as Node)),\n        switchMap(() => merge(\n          fromEvent<Event>(this.document, 'focusin'),\n          fromEvent<Event>(this.document, 'click'),\n        )),\n        filter(event => !hostElement.contains(event.target as Node)),\n        takeUntil(\n          merge(\n            this.radios.changes,\n            this.destroy$,\n          ),\n        ),\n      )\n      .subscribe(() => this.onTouched());\n  }\n\n  protected updateStatus() {\n    this.updateAndMarkForCheckRadios((radio: NbRadioComponent) => radio.status = this.status);\n  }\n\n  protected updateAndMarkForCheckRadios(updateFn: (NbRadioComponent) => void) {\n    if (this.radios) {\n      this.radios.forEach((radio) => {\n        updateFn(radio);\n        radio._markForCheck();\n      });\n    }\n  }\n}\n"]}