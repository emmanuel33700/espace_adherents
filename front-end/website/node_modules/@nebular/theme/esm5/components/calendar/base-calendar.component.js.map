{"version":3,"file":"base-calendar.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar/base-calendar.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, HostBinding, Input, OnInit, Output, Type } from '@angular/core';\n\nimport { NbCalendarYearModelService } from '../calendar-kit/services/calendar-year-model.service';\nimport {\n  NbCalendarCell,\n  NbCalendarSize,\n  NbCalendarViewMode,\n  NbCalendarSizeValues,\n  NbCalendarViewModeValues,\n} from '../calendar-kit/model';\nimport { NbDateService } from '../calendar-kit/services/date.service';\nimport { convertToBoolProperty, NbBooleanInput } from '../helpers';\n\n/**\n * The basis for calendar and range calendar components.\n * Encapsulates common behavior - store calendar state and perform navigation\n * between pickers.\n * */\n@Component({\n  selector: 'nb-base-calendar',\n  templateUrl: './base-calendar.component.html',\n})\nexport class NbBaseCalendarComponent<D, T> implements OnInit {\n\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines active view for calendar.\n   * */\n  @Input('startView') activeViewMode: NbCalendarViewMode = NbCalendarViewMode.DATE;\n  static ngAcceptInputType_activeViewMode: NbCalendarViewModeValues;\n\n  /**\n   * Minimum available date for selection.\n   * */\n  @Input() min: D;\n\n  /**\n   * Maximum available date for selection.\n   * */\n  @Input() max: D;\n\n  /**\n   * Predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (D) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() dayCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() yearCellComponent: Type<NbCalendarCell<D, T>>;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n  static ngAcceptInputType_size: NbCalendarSizeValues;\n\n  @Input() visibleDate: D;\n\n  /**\n   * Determines whether we should show calendar navigation or not.\n   * */\n  @Input()\n  @HostBinding('class.has-navigation')\n  showNavigation: boolean = true;\n\n  /**\n   * Value which will be rendered as selected.\n   * */\n  @Input() date: T;\n\n  /**\n   * Determines should we show week numbers column.\n   * False by default.\n   * */\n  @Input()\n  @HostBinding('class.has-week-number')\n  get showWeekNumber(): boolean {\n    return this._showWeekNumber;\n  }\n  set showWeekNumber(value: boolean) {\n    this._showWeekNumber = convertToBoolProperty(value);\n  }\n  protected _showWeekNumber = false;\n  static ngAcceptInputType_showWeekNumber: NbBooleanInput;\n\n  /**\n   * Sets symbol used as a header for week numbers column\n   * */\n  @Input() weekNumberSymbol: string;\n\n  /**\n   * Emits date when selected.\n   * */\n  @Output() dateChange: EventEmitter<T> = new EventEmitter();\n\n  constructor(\n    protected dateService: NbDateService<D>,\n    protected yearModelService: NbCalendarYearModelService<D>,\n  ) {}\n\n  ngOnInit() {\n    if (!this.visibleDate) {\n      this.visibleDate = this.dateService.today();\n    }\n  }\n\n  @HostBinding('class.size-large')\n  get large() {\n    return this.size === NbCalendarSize.LARGE;\n  }\n\n  ViewMode = NbCalendarViewMode;\n\n  setViewMode(viewMode: NbCalendarViewMode) {\n    this.activeViewMode = viewMode;\n  }\n\n  setVisibleDate(visibleDate: D) {\n    this.visibleDate = visibleDate;\n  }\n\n  prevMonth() {\n    this.changeVisibleMonth(-1);\n  }\n\n  nextMonth() {\n    this.changeVisibleMonth(1);\n  }\n\n  prevYear() {\n    this.changeVisibleYear(-1);\n  }\n\n  nextYear() {\n    this.changeVisibleYear(1);\n  }\n\n  prevYears() {\n    this.changeVisibleYears(-1);\n  }\n\n  nextYears() {\n    this.changeVisibleYears(1);\n  }\n\n  navigatePrev() {\n    switch (this.activeViewMode) {\n      case NbCalendarViewMode.DATE:\n        return this.prevMonth();\n      case NbCalendarViewMode.MONTH:\n        return this.prevYear();\n      case NbCalendarViewMode.YEAR:\n        return this.prevYears();\n    }\n  }\n\n  navigateNext() {\n    switch (this.activeViewMode) {\n      case NbCalendarViewMode.DATE:\n        return this.nextMonth();\n      case NbCalendarViewMode.MONTH:\n        return this.nextYear();\n      case NbCalendarViewMode.YEAR:\n        return this.nextYears();\n    }\n  }\n\n  onChangeViewMode() {\n    if (this.activeViewMode === NbCalendarViewMode.DATE) {\n      return this.setViewMode(NbCalendarViewMode.YEAR);\n    }\n\n    this.setViewMode(NbCalendarViewMode.DATE);\n  }\n\n  private changeVisibleMonth(direction: number) {\n    this.visibleDate = this.dateService.addMonth(this.visibleDate, direction);\n  }\n\n  private changeVisibleYear(direction: number) {\n    this.visibleDate = this.dateService.addYear(this.visibleDate, direction);\n  }\n\n  private changeVisibleYears(direction: number) {\n    this.visibleDate = this.dateService.addYear(this.visibleDate, direction * this.yearModelService.getYearsInView());\n  }\n}\n"]}