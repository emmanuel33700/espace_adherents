{"version":3,"file":"logout.component.js","sourceRoot":"","sources":["../../../../../../.ng_build/auth/components/logout/logout.component.ts"],"names":[],"mappings":";AAAA;;;;GAIG;AACH,OAAO,EAAE,SAAS,EAAE,MAAM,EAAU,MAAM,eAAe,CAAC;AAC1D,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAEzC,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAO5D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAK5B,YAAsB,OAAsB,EACG,UAAU,EAAE,EACrC,MAAc;QAFd,YAAO,GAAP,OAAO,CAAe;QACG,YAAO,GAAP,OAAO,CAAK;QACrC,WAAM,GAAN,MAAM,CAAQ;QALpC,kBAAa,GAAW,CAAC,CAAC;QAC1B,aAAQ,GAAW,EAAE,CAAC;QAKpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,QAAgB;QACrB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,MAAoB,EAAE,EAAE;YAE/D,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,QAAQ,EAAE;gBACZ,UAAU,CAAC,GAAG,EAAE;oBACd,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC7C,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,GAAW;QACxB,OAAO,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;CACF,CAAA;AA/BY,iBAAiB;IAJ7B,SAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,oDAAsC;KACvC,CAAC;IAOa,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;qCADL,aAAa,UAEd,MAAM;GAPzB,iBAAiB,CA+B7B;SA/BY,iBAAiB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nimport { NbAuthResult } from '../../services/auth-result';\n\n@Component({\n  selector: 'nb-logout',\n  templateUrl: './logout.component.html',\n})\nexport class NbLogoutComponent implements OnInit {\n\n  redirectDelay: number = 0;\n  strategy: string = '';\n\n  constructor(protected service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS) protected options = {},\n              protected router: Router) {\n    this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n    this.strategy = this.getConfigValue('forms.logout.strategy');\n  }\n\n  ngOnInit(): void {\n    this.logout(this.strategy);\n  }\n\n  logout(strategy: string): void {\n    this.service.logout(strategy).subscribe((result: NbAuthResult) => {\n\n      const redirect = result.getRedirect();\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n    });\n  }\n\n  getConfigValue(key: string): any {\n    return getDeepFromObject(this.options, key, null);\n  }\n}\n"]}