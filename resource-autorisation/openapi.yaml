openapi: 3.0.1
info:
  title: API gestion authentification espace adherents
  description: Permet de gere les accès des personnes à l'espace adhérents
  contact:
    email: manu.chenais@gmail.com
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.fr.html
  version: 1.0.0
servers:
- url: https://adherents.jalle-astro.fr/authorization-server
- url: http://localhost:8080/authorization-server
tags:
- name: adherent
  description: gestion des adhérents
  externalDocs:
    description: Pour plus de détail
    url: https://github.com/emmanuel33700/espace_adherents
paths:
  /authentification:
    put:
      tags:
      - Authentification
      summary: Mise à jour du compte accès d'une personne
      description: Mise à jour de l'authentification d'une personne
      operationId: updateAuthentification
      requestBody:
        description: mise à jour de l'objet authentification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentification'
        required: true
      responses:
        404:
          description: Personne non trouvée
          content: {}
        403:
          description: Droit insufisant pour modifier une authentification
          content: {}
        405:
          description: Invalid input
          content: {}
    post:
      tags:
      - Authentification
      summary: Ajouter  compte d'accès d'une personne
      operationId: addAuthentification
      requestBody:
        description: ajout de l'objet authentification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentification'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  /authentification/{login}/validation:
    post:
      tags:
      - Authentification
      summary: validation d'enregistrement du login d'une personne
      operationId: validationAuthentification
      parameters:
      - name: login
        in: path
        description: login de la personne encodé en base64
        required: true
        schema:
          type: string
          maxLength: 50
          minLength: 3
      requestBody:
        description: ajout de l'objet authentification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Validation'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
    delete:
      tags:
      - Authentification
      summary: suppression du compte accès d'une personne
      operationId: deleteAuthentification
      parameters:
      - name: login
        in: path
        description: login de la personne encodé en base64
        required: true
        schema:
          type: string
          maxLength: 50
          minLength: 3
      responses:
        404:
          description: Personne non trouvée
          content: {}
        403:
          description: Droit insufisant pour suppriler une authentification
          content: {}
        405:
          description: Invalid input
          content: {}
  /authentification/{login}/roles:
    put:
      tags:
      - Roles
      summary: Mise à jour des roles d'une personne
      description: Mise à jour des roles d'une personne
      operationId: updateRoles
      parameters:
      - name: login
        in: path
        description: login de la personne encodé en base64
        required: true
        schema:
          type: string
          maxLength: 50
          minLength: 3
      requestBody:
        description: mise à jour de l'objet role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Roles'
        required: true
      responses:
        404:
          description: Personne non trouvée
          content: {}
        403:
          description: Droit insufisant pour modifier une authentification
          content: {}
        405:
          description: Invalid input
          content: {}  
components:
  schemas:
    Authentification:
      type: object
      properties:
        login:
          description: Login de la personnes 
          maxLength: 50
          minLength: 3
          type: string
        password:
          description: Mot de passe de la personne
          maxLength: 15
          minLength: 5
          type: string
    Roles:
      type: object
      properties:
        login:
          maxLength: 50
          minLength: 3
          type: string
        roles :
          description: Role de la personnes 
          type: array
          items:
            type: string
            enum:
            - ADHERENT
            - CONSEIL
            - BUREAU
            - ADMIN
    Validation:
      type: object
      properties:
        cleeValidation:
          description: clée de validation pour activer le compte créé
          maxLength: 50
          minLength: 3
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
